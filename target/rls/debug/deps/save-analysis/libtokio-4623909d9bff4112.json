{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2","program":"/Users/Polly/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio","--edition=2018","/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"bytes\"","--cfg","feature=\"default\"","--cfg","feature=\"io-std\"","--cfg","feature=\"io-util\"","--cfg","feature=\"macros\"","--cfg","feature=\"memchr\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"rt\"","--cfg","feature=\"rt-multi-thread\"","--cfg","feature=\"tokio-macros\"","-C","metadata=4623909d9bff4112","-C","extra-filename=-4623909d9bff4112","--out-dir","/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps","-L","dependency=/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps","--extern","bytes=/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps/libbytes-82f33f27752c4d28.rmeta","--extern","memchr=/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps/libmemchr-13302a2cf6b060f0.rmeta","--extern","num_cpus=/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps/libnum_cpus-6308ea02089d2bf9.rmeta","--extern","once_cell=/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps/libonce_cell-1c098a4a7d8b983d.rmeta","--extern","pin_project_lite=/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps/libpin_project_lite-0850d9e15bde4102.rmeta","--extern","tokio_macros=/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps/libtokio_macros-b908bfd27587a776.dylib","--cap-lints","allow","--error-format=json","--sysroot","/Users/Polly/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps/libtokio-4623909d9bff4112.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[1019775990760854541,0]},"crate_root":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src","external_crates":[{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8160662364186215271,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/wake_list.rs","num":2,"id":{"name":"core","disambiguator":[15508592535294299014,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17322933587189210298,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13179528220501159687,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14405461281750379523,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13415789777365414266,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14087240094303311622,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8480099122681864520,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7455356171819553965,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4032517352972638871,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[100442770310914164,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[10836884096018266442,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[8583823352757433821,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16157489773683242703,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[6201654522556613481,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15759299131545182078,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[10203585439616027660,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/seek.rs","num":18,"id":{"name":"pin_project_lite","disambiguator":[15885804937172283939,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","num":19,"id":{"name":"bytes","disambiguator":[14808528456276691465,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","num":20,"id":{"name":"serde","disambiguator":[2674988930338937467,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","num":21,"id":{"name":"serde_derive","disambiguator":[5084869341105120970,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","num":22,"id":{"name":"tokio_macros","disambiguator":[16050886374248383776,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_until.rs","num":23,"id":{"name":"memchr","disambiguator":[15287225856752822126,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/mod.rs","num":24,"id":{"name":"num_cpus","disambiguator":[7808353572791778972,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/mod.rs","num":25,"id":{"name":"libc","disambiguator":[3441425722186216159,0]}}],"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":0,"byte_end":20180,"line_start":1,"line_end":568,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":153},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/support.rs","byte_start":36988,"byte_end":36995,"line_start":2,"line_end":2,"column_start":28,"column_end":35},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":0,"index":121},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/support.rs","byte_start":37036,"byte_end":37046,"line_start":3,"line_end":3,"column_start":40,"column_end":50},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":0,"index":1089},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/support.rs","byte_start":37073,"byte_end":37085,"line_start":4,"line_end":4,"column_start":26,"column_end":38},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":2,"index":12917},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/support.rs","byte_start":37111,"byte_end":37117,"line_start":7,"line_end":7,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":2,"index":45212},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/support.rs","byte_start":37137,"byte_end":37140,"line_start":8,"line_end":8,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":2,"index":47902},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/support.rs","byte_start":37161,"byte_end":37165,"line_start":9,"line_end":9,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":91}},{"kind":"Use","ref_id":{"krate":0,"index":153},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/mod.rs","byte_start":37368,"byte_end":37375,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":101}},{"kind":"Use","ref_id":{"krate":0,"index":188},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":48604,"byte_end":48616,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":230},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":48661,"byte_end":48670,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":269},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":48715,"byte_end":48724,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":309},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":48771,"byte_end":48781,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":369},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":48822,"byte_end":48829,"line_start":200,"line_end":200,"column_start":25,"column_end":32},"alias_span":null,"name":"ReadBuf","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":1,"index":3816},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":48999,"byte_end":49004,"line_start":205,"line_end":205,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":1,"index":10393},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":49006,"byte_end":49015,"line_start":205,"line_end":205,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":1,"index":3814},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":49017,"byte_end":49023,"line_start":205,"line_end":205,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":1,"index":10521},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":49025,"byte_end":49033,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1382},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":49707,"byte_end":49713,"line_start":242,"line_end":242,"column_start":22,"column_end":28},"alias_span":null,"name":"stderr","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1383},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":49715,"byte_end":49721,"line_start":242,"line_end":242,"column_start":30,"column_end":36},"alias_span":null,"name":"Stderr","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1387},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":49760,"byte_end":49765,"line_start":245,"line_end":245,"column_start":21,"column_end":26},"alias_span":null,"name":"stdin","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1388},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":49767,"byte_end":49772,"line_start":245,"line_end":245,"column_start":28,"column_end":33},"alias_span":null,"name":"Stdin","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1392},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":49813,"byte_end":49819,"line_start":248,"line_end":248,"column_start":22,"column_end":28},"alias_span":null,"name":"stdout","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1393},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":49821,"byte_end":49827,"line_start":248,"line_end":248,"column_start":30,"column_end":36},"alias_span":null,"name":"Stdout","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1603},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":49883,"byte_end":49888,"line_start":253,"line_end":253,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1597},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":49890,"byte_end":49898,"line_start":253,"line_end":253,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1600},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":49900,"byte_end":49909,"line_start":253,"line_end":253,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":3555},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":49991,"byte_end":49995,"line_start":258,"line_end":258,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":2333},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":49997,"byte_end":50015,"line_start":258,"line_end":258,"column_start":15,"column_end":33},"alias_span":null,"name":"copy_bidirectional","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":3561},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":50017,"byte_end":50025,"line_start":258,"line_end":258,"column_start":35,"column_end":43},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":2530},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":50027,"byte_end":50033,"line_start":258,"line_end":258,"column_start":45,"column_end":51},"alias_span":null,"name":"duplex","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":3581},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":50035,"byte_end":50040,"line_start":258,"line_end":258,"column_start":53,"column_end":58},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":3781},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":50042,"byte_end":50048,"line_start":258,"line_end":258,"column_start":60,"column_end":66},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":3788},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":50050,"byte_end":50054,"line_start":258,"line_end":258,"column_start":68,"column_end":72},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":3371},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":50056,"byte_end":50071,"line_start":258,"line_end":258,"column_start":74,"column_end":89},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":3381},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":50073,"byte_end":50085,"line_start":258,"line_end":258,"column_start":91,"column_end":103},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":3440},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":50087,"byte_end":50099,"line_start":258,"line_end":258,"column_start":105,"column_end":117},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":3445},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":50101,"byte_end":50114,"line_start":258,"line_end":258,"column_start":119,"column_end":132},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":10834},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":50124,"byte_end":50133,"line_start":259,"line_end":259,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":10798},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":50135,"byte_end":50144,"line_start":259,"line_end":259,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":10753},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":50146,"byte_end":50155,"line_start":259,"line_end":259,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":3583},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":50157,"byte_end":50169,"line_start":259,"line_end":259,"column_start":42,"column_end":54},"alias_span":null,"name":"DuplexStream","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":3579},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":50171,"byte_end":50176,"line_start":259,"line_end":259,"column_start":56,"column_end":61},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":10607},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":50178,"byte_end":50183,"line_start":259,"line_end":259,"column_start":63,"column_end":68},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":3782},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":50185,"byte_end":50191,"line_start":259,"line_end":259,"column_start":70,"column_end":76},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":3786},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":50193,"byte_end":50197,"line_start":259,"line_end":259,"column_start":78,"column_end":82},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":8999},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":50199,"byte_end":50204,"line_start":259,"line_end":259,"column_start":84,"column_end":89},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":8959},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":50206,"byte_end":50210,"line_start":259,"line_end":259,"column_start":91,"column_end":95},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":442},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/mod.rs","byte_start":88244,"byte_end":88257,"line_start":28,"line_end":28,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":415}},{"kind":"Use","ref_id":{"krate":0,"index":5569},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13555079,"byte_end":13555086,"line_start":218,"line_end":218,"column_start":28,"column_end":35},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":4057}},{"kind":"Use","ref_id":{"krate":0,"index":5916},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13555200,"byte_end":13555210,"line_start":226,"line_end":226,"column_start":22,"column_end":32},"alias_span":null,"name":"EnterGuard","value":"","parent":{"krate":0,"index":4057}},{"kind":"Use","ref_id":{"krate":0,"index":5902},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13555212,"byte_end":13555218,"line_start":226,"line_end":226,"column_start":34,"column_end":40},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":4057}},{"kind":"Use","ref_id":{"krate":0,"index":5923},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13555220,"byte_end":13555235,"line_start":226,"line_end":226,"column_start":42,"column_end":57},"alias_span":null,"name":"TryCurrentError","value":"","parent":{"krate":0,"index":4057}},{"kind":"Use","ref_id":{"krate":0,"index":4979},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145801,"byte_end":145810,"line_start":279,"line_end":279,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":943}},{"kind":"Use","ref_id":{"krate":0,"index":5040},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145812,"byte_end":145822,"line_start":279,"line_end":279,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":943}},{"kind":"Use","ref_id":{"krate":0,"index":7237},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145866,"byte_end":145880,"line_start":282,"line_end":282,"column_start":23,"column_end":37},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":943}},{"kind":"Use","ref_id":{"krate":0,"index":7240},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145917,"byte_end":145922,"line_start":285,"line_end":285,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":943}},{"kind":"Use","ref_id":{"krate":0,"index":7234},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145978,"byte_end":145992,"line_start":288,"line_end":288,"column_start":27,"column_end":41},"alias_span":null,"name":"block_in_place","value":"","parent":{"krate":0,"index":943}},{"kind":"Use","ref_id":{"krate":0,"index":6980},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":146043,"byte_end":146052,"line_start":292,"line_end":292,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":943}},{"kind":"Use","ref_id":{"krate":0,"index":7263},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":146193,"byte_end":146204,"line_start":300,"line_end":300,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":943}},{"kind":"Use","ref_id":{"krate":0,"index":7254},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":146206,"byte_end":146214,"line_start":300,"line_end":300,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":943}},{"kind":"Use","ref_id":{"krate":0,"index":7145},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":146262,"byte_end":146270,"line_start":303,"line_end":303,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":943}},{"kind":"Use","ref_id":{"krate":0,"index":7221},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":146324,"byte_end":146337,"line_start":306,"line_end":306,"column_start":29,"column_end":42},"alias_span":null,"name":"unconstrained","value":"","parent":{"krate":0,"index":943}},{"kind":"Use","ref_id":{"krate":0,"index":7470},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":146339,"byte_end":146352,"line_start":306,"line_end":306,"column_start":44,"column_end":57},"alias_span":null,"name":"Unconstrained","value":"","parent":{"krate":0,"index":943}},{"kind":"Use","ref_id":{"krate":0,"index":7503},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":146690,"byte_end":146705,"line_start":322,"line_end":322,"column_start":36,"column_end":51},"alias_span":null,"name":"TaskLocalFuture","value":"","parent":{"krate":0,"index":7230}},{"kind":"Use","ref_id":{"krate":0,"index":7240},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":16692,"byte_end":16697,"line_start":449,"line_end":449,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1089},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/mod.rs","byte_start":148326,"byte_end":148338,"line_start":74,"line_end":74,"column_start":21,"column_end":33},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":944}},{"kind":"Use","ref_id":{"krate":22,"index":103},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":18906,"byte_end":18937,"line_start":524,"line_end":524,"column_start":27,"column_end":58},"alias_span":null,"name":"select_priv_declare_output_enum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":104},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":19151,"byte_end":19176,"line_start":530,"line_end":530,"column_start":27,"column_end":52},"alias_span":null,"name":"select_priv_clean_pattern","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":97},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":19414,"byte_end":19418,"line_start":537,"line_end":537,"column_start":31,"column_end":35},"alias_span":null,"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":99},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":19576,"byte_end":19580,"line_start":542,"line_end":542,"column_start":31,"column_end":35},"alias_span":null,"name":"test","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":0,"byte_end":20180,"line_start":1,"line_end":568,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":101},{"krate":0,"index":167},{"krate":0,"index":415},{"krate":0,"index":507},{"krate":0,"index":782},{"krate":0,"index":914},{"krate":0,"index":4057},{"krate":0,"index":915},{"krate":0,"index":6524},{"krate":0,"index":943},{"krate":0,"index":7282},{"krate":0,"index":944},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":7458},{"krate":0,"index":7461},{"krate":0,"index":7464},{"krate":0,"index":7467}],"decl_id":null,"docs":" A runtime for writing reliable network applications without compromising speed.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":0,"byte_end":112,"line_start":1,"line_end":5,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":113,"byte_end":219,"line_start":6,"line_end":11,"column_start":1,"column_end":3}},{"value":"deny(unused_must_use)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":220,"byte_end":245,"line_start":12,"line_end":12,"column_start":1,"column_end":26}},{"value":"/ A runtime for writing reliable network applications without compromising speed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":450,"byte_end":533,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":534,"byte_end":537,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":538,"byte_end":618,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":619,"byte_end":691,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":692,"byte_end":728,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":729,"byte_end":732,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":733,"byte_end":800,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, sleeps, and","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":801,"byte_end":881,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":882,"byte_end":905,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":906,"byte_end":993,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":994,"byte_end":1067,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1068,"byte_end":1146,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1147,"byte_end":1227,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1228,"byte_end":1278,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1279,"byte_end":1282,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1283,"byte_end":1339,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1340,"byte_end":1343,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1344,"byte_end":1376,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1377,"byte_end":1400,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1401,"byte_end":1424,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1425,"byte_end":1451,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1452,"byte_end":1473,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1474,"byte_end":1493,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1494,"byte_end":1523,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1524,"byte_end":1551,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1552,"byte_end":1571,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1572,"byte_end":1601,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/tokio/tutorial","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1602,"byte_end":1648,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1649,"byte_end":1652,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1653,"byte_end":1674,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1675,"byte_end":1678,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1679,"byte_end":1758,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1759,"byte_end":1832,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1833,"byte_end":1912,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1913,"byte_end":1928,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1929,"byte_end":1932,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":1933,"byte_end":2005,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2006,"byte_end":2043,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2044,"byte_end":2047,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2048,"byte_end":2059,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2060,"byte_end":2110,"line_start":60,"line_end":60,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2111,"byte_end":2118,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2119,"byte_end":2122,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2123,"byte_end":2153,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2154,"byte_end":2157,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2158,"byte_end":2239,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2240,"byte_end":2325,"line_start":66,"line_end":66,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2326,"byte_end":2410,"line_start":67,"line_end":67,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2411,"byte_end":2441,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2442,"byte_end":2445,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2446,"byte_end":2462,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2463,"byte_end":2466,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2467,"byte_end":2533,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2534,"byte_end":2537,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2538,"byte_end":2549,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2550,"byte_end":2600,"line_start":75,"line_end":75,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2601,"byte_end":2608,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2609,"byte_end":2612,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2613,"byte_end":2640,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2641,"byte_end":2644,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lightest weight crate","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2645,"byte_end":2725,"line_start":80,"line_end":80,"column_start":1,"column_end":81}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2726,"byte_end":2808,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2809,"byte_end":2890,"line_start":82,"line_end":82,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2891,"byte_end":2926,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2927,"byte_end":2930,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2931,"byte_end":2947,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2948,"byte_end":2951,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":2952,"byte_end":3034,"line_start":87,"line_end":87,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3035,"byte_end":3085,"line_start":88,"line_end":88,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3086,"byte_end":3089,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3090,"byte_end":3101,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"rt\", \"net\"] }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3102,"byte_end":3157,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3158,"byte_end":3165,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3166,"byte_end":3169,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3170,"byte_end":3195,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3196,"byte_end":3199,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3200,"byte_end":3276,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3277,"byte_end":3360,"line_start":97,"line_end":97,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3361,"byte_end":3404,"line_start":98,"line_end":98,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3405,"byte_end":3408,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3409,"byte_end":3488,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3489,"byte_end":3572,"line_start":101,"line_end":101,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3573,"byte_end":3651,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3652,"byte_end":3671,"line_start":103,"line_end":103,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3672,"byte_end":3675,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt\" feature flag","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3676,"byte_end":3749,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ is enabled.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3750,"byte_end":3765,"line_start":106,"line_end":106,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3766,"byte_end":3769,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3770,"byte_end":3813,"line_start":108,"line_end":108,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3814,"byte_end":3846,"line_start":109,"line_end":109,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3847,"byte_end":3882,"line_start":110,"line_end":110,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3883,"byte_end":3926,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3927,"byte_end":3980,"line_start":112,"line_end":112,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3981,"byte_end":3984,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":3985,"byte_end":4063,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":4064,"byte_end":4120,"line_start":115,"line_end":115,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":4121,"byte_end":4124,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], [`watch`], and [`broadcast`]), for sending values","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":4125,"byte_end":4213,"line_start":117,"line_end":117,"column_start":1,"column_end":89}},{"value":"/   between tasks,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":4214,"byte_end":4234,"line_start":118,"line_end":118,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":4235,"byte_end":4310,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":4311,"byte_end":4323,"line_start":120,"line_end":120,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":4324,"byte_end":4404,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":4405,"byte_end":4435,"line_start":122,"line_end":122,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":4436,"byte_end":4439,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":4440,"byte_end":4516,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":4517,"byte_end":4529,"line_start":125,"line_end":125,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":4530,"byte_end":4533,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":4534,"byte_end":4566,"line_start":127,"line_end":127,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":4567,"byte_end":4600,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":4601,"byte_end":4638,"line_start":129,"line_end":129,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":4639,"byte_end":4676,"line_start":130,"line_end":130,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":4677,"byte_end":4708,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":4709,"byte_end":4742,"line_start":132,"line_end":132,"column_start":1,"column_end":34}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":4743,"byte_end":4784,"line_start":133,"line_end":133,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":4785,"byte_end":4788,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":4789,"byte_end":4860,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":4861,"byte_end":4941,"line_start":136,"line_end":136,"column_start":1,"column_end":81}},{"value":"/ tasks, [sleeping][sleep] work to run in the future, or [repeating an operation at an","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":4942,"byte_end":5030,"line_start":137,"line_end":137,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":5031,"byte_end":5055,"line_start":138,"line_end":138,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":5056,"byte_end":5059,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":5060,"byte_end":5135,"line_start":140,"line_end":140,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":5136,"byte_end":5139,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":5140,"byte_end":5172,"line_start":142,"line_end":142,"column_start":1,"column_end":33}},{"value":"/ [sleep]: crate::time::sleep()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":5173,"byte_end":5206,"line_start":143,"line_end":143,"column_start":1,"column_end":34}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":5207,"byte_end":5246,"line_start":144,"line_end":144,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":5247,"byte_end":5284,"line_start":145,"line_end":145,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":5285,"byte_end":5288,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":5289,"byte_end":5367,"line_start":147,"line_end":147,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":5368,"byte_end":5452,"line_start":148,"line_end":148,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. However, this macro provides only basic configuration options. As","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":5453,"byte_end":5537,"line_start":149,"line_end":149,"column_start":1,"column_end":85}},{"value":"/ an alternative, the [`tokio::runtime`] module provides more powerful APIs for configuring","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":5538,"byte_end":5631,"line_start":150,"line_end":150,"column_start":1,"column_end":94}},{"value":"/ and managing runtimes. You should use that module if the `#[tokio::main]` macro doesn't","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":5632,"byte_end":5723,"line_start":151,"line_end":151,"column_start":1,"column_end":92}},{"value":"/ provide the functionality you need.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":5724,"byte_end":5763,"line_start":152,"line_end":152,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":5764,"byte_end":5767,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt\" or \"rt-multi-thread\" feature flags, to","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":5768,"byte_end":5846,"line_start":154,"line_end":154,"column_start":1,"column_end":79}},{"value":"/ enable the basic [single-threaded scheduler][rt] and the [thread-pool","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":5847,"byte_end":5920,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ scheduler][rt-multi-thread], respectively. See the [`runtime` module","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":5921,"byte_end":5993,"line_start":156,"line_end":156,"column_start":1,"column_end":73}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":5994,"byte_end":6072,"line_start":157,"line_end":157,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":6073,"byte_end":6143,"line_start":158,"line_end":158,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":6144,"byte_end":6147,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":6148,"byte_end":6174,"line_start":160,"line_end":160,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":6175,"byte_end":6213,"line_start":161,"line_end":161,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":6214,"byte_end":6254,"line_start":162,"line_end":162,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":6255,"byte_end":6295,"line_start":163,"line_end":163,"column_start":1,"column_end":41}},{"value":"/ [rt]: runtime/index.html#current-thread-scheduler","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":6296,"byte_end":6349,"line_start":164,"line_end":164,"column_start":1,"column_end":54}},{"value":"/ [rt-multi-thread]: runtime/index.html#multi-thread-scheduler","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":6350,"byte_end":6414,"line_start":165,"line_end":165,"column_start":1,"column_end":65}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":6415,"byte_end":6470,"line_start":166,"line_end":166,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":6471,"byte_end":6474,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":6475,"byte_end":6515,"line_start":168,"line_end":168,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":6516,"byte_end":6519,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":6520,"byte_end":6599,"line_start":170,"line_end":170,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":6600,"byte_end":6677,"line_start":171,"line_end":171,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":6678,"byte_end":6758,"line_start":172,"line_end":172,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":6759,"byte_end":6833,"line_start":173,"line_end":173,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":6834,"byte_end":6913,"line_start":174,"line_end":174,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":6914,"byte_end":6991,"line_start":175,"line_end":175,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":6992,"byte_end":7065,"line_start":176,"line_end":176,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, can be used to run blocking code that would otherwise","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":7066,"byte_end":7142,"line_start":177,"line_end":177,"column_start":1,"column_end":77}},{"value":"/ block other tasks from running and are kept alive when not used for a certain","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":7143,"byte_end":7224,"line_start":178,"line_end":178,"column_start":1,"column_end":82}},{"value":"/ amount of time which can be configured with [`thread_keep_alive`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":7225,"byte_end":7295,"line_start":179,"line_end":179,"column_start":1,"column_end":71}},{"value":"/ Since it is not possible for Tokio to swap out blocking tasks, like it","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":7296,"byte_end":7370,"line_start":180,"line_end":180,"column_start":1,"column_end":75}},{"value":"/ can do with asynchronous code, the upper limit on the number of blocking","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":7371,"byte_end":7447,"line_start":181,"line_end":181,"column_start":1,"column_end":77}},{"value":"/ threads is very large. These limits can be configured on the [`Builder`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":7448,"byte_end":7525,"line_start":182,"line_end":182,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":7526,"byte_end":7529,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":7530,"byte_end":7607,"line_start":184,"line_end":184,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":7608,"byte_end":7611,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":7612,"byte_end":7652,"line_start":186,"line_end":186,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":7653,"byte_end":7706,"line_start":187,"line_end":187,"column_start":1,"column_end":54}},{"value":"/ [`thread_keep_alive`]: crate::runtime::Builder::thread_keep_alive()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":7707,"byte_end":7778,"line_start":188,"line_end":188,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":7779,"byte_end":7782,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":7783,"byte_end":7790,"line_start":190,"line_end":190,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":7791,"byte_end":7809,"line_start":191,"line_end":191,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":7810,"byte_end":7831,"line_start":192,"line_end":192,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":7832,"byte_end":7876,"line_start":193,"line_end":193,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":7877,"byte_end":7880,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":7881,"byte_end":7941,"line_start":195,"line_end":195,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":7942,"byte_end":7994,"line_start":196,"line_end":196,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":7995,"byte_end":8030,"line_start":197,"line_end":197,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8031,"byte_end":8042,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8043,"byte_end":8046,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8047,"byte_end":8102,"line_start":200,"line_end":200,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8103,"byte_end":8178,"line_start":201,"line_end":201,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8179,"byte_end":8196,"line_start":202,"line_end":202,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8197,"byte_end":8234,"line_start":203,"line_end":203,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8235,"byte_end":8240,"line_start":204,"line_end":204,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8241,"byte_end":8248,"line_start":205,"line_end":205,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8249,"byte_end":8252,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8253,"byte_end":8331,"line_start":207,"line_end":207,"column_start":1,"column_end":79}},{"value":"/ to run it, you should use a separate thread pool dedicated to CPU bound tasks.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8332,"byte_end":8414,"line_start":208,"line_end":208,"column_start":1,"column_end":83}},{"value":"/ For example, you could consider using the [rayon] library for CPU-bound","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8415,"byte_end":8490,"line_start":209,"line_end":209,"column_start":1,"column_end":76}},{"value":"/ tasks. It is also possible to create an extra Tokio runtime dedicated to","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8491,"byte_end":8567,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ CPU-bound tasks, but if you do this, you should be careful that the extra","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8568,"byte_end":8645,"line_start":211,"line_end":211,"column_start":1,"column_end":78}},{"value":"/ runtime runs _only_ CPU-bound tasks, as IO-bound tasks on that runtime","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8646,"byte_end":8720,"line_start":212,"line_end":212,"column_start":1,"column_end":75}},{"value":"/ will behave poorly.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8721,"byte_end":8744,"line_start":213,"line_end":213,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8745,"byte_end":8748,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ Hint: If using rayon, you can use a [`oneshot`] channel to send the result back","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8749,"byte_end":8832,"line_start":215,"line_end":215,"column_start":1,"column_end":84}},{"value":"/ to Tokio when the rayon task finishes.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8833,"byte_end":8875,"line_start":216,"line_end":216,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8876,"byte_end":8879,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8880,"byte_end":8914,"line_start":218,"line_end":218,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8915,"byte_end":8952,"line_start":219,"line_end":219,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8953,"byte_end":8956,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8957,"byte_end":8979,"line_start":221,"line_end":221,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8980,"byte_end":8983,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":8984,"byte_end":9063,"line_start":223,"line_end":223,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":9064,"byte_end":9111,"line_start":224,"line_end":224,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":9112,"byte_end":9115,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":9116,"byte_end":9195,"line_start":226,"line_end":226,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":9196,"byte_end":9276,"line_start":227,"line_end":227,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":9277,"byte_end":9357,"line_start":228,"line_end":228,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":9358,"byte_end":9429,"line_start":229,"line_end":229,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":9430,"byte_end":9461,"line_start":230,"line_end":230,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":9462,"byte_end":9465,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":9466,"byte_end":9546,"line_start":232,"line_end":232,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":9547,"byte_end":9607,"line_start":233,"line_end":233,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":9608,"byte_end":9611,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":9612,"byte_end":9691,"line_start":235,"line_end":235,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":9692,"byte_end":9761,"line_start":236,"line_end":236,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":9762,"byte_end":9839,"line_start":237,"line_end":237,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":9840,"byte_end":9896,"line_start":238,"line_end":238,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":9897,"byte_end":9977,"line_start":239,"line_end":239,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":9978,"byte_end":10023,"line_start":240,"line_end":240,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10024,"byte_end":10103,"line_start":241,"line_end":241,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10104,"byte_end":10138,"line_start":242,"line_end":242,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10139,"byte_end":10142,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10143,"byte_end":10171,"line_start":244,"line_end":244,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10172,"byte_end":10211,"line_start":245,"line_end":245,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10212,"byte_end":10253,"line_start":246,"line_end":246,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10254,"byte_end":10299,"line_start":247,"line_end":247,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10300,"byte_end":10324,"line_start":248,"line_end":248,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10325,"byte_end":10355,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10356,"byte_end":10382,"line_start":250,"line_end":250,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::UdpSocket","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10383,"byte_end":10415,"line_start":251,"line_end":251,"column_start":1,"column_end":33}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10416,"byte_end":10443,"line_start":252,"line_end":252,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10444,"byte_end":10472,"line_start":253,"line_end":253,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10473,"byte_end":10497,"line_start":254,"line_end":254,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10498,"byte_end":10534,"line_start":255,"line_end":255,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10535,"byte_end":10573,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10574,"byte_end":10577,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10578,"byte_end":10592,"line_start":258,"line_end":258,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10593,"byte_end":10596,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10597,"byte_end":10626,"line_start":260,"line_end":260,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10627,"byte_end":10630,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10631,"byte_end":10644,"line_start":262,"line_end":262,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10645,"byte_end":10677,"line_start":263,"line_end":263,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10678,"byte_end":10727,"line_start":264,"line_end":264,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10728,"byte_end":10731,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10732,"byte_end":10750,"line_start":266,"line_end":266,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10751,"byte_end":10814,"line_start":267,"line_end":267,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10815,"byte_end":10881,"line_start":268,"line_end":268,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10882,"byte_end":10885,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10886,"byte_end":10900,"line_start":270,"line_end":270,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10901,"byte_end":10960,"line_start":271,"line_end":271,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10961,"byte_end":10964,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":10965,"byte_end":11002,"line_start":273,"line_end":273,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11003,"byte_end":11043,"line_start":274,"line_end":274,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11044,"byte_end":11047,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11048,"byte_end":11128,"line_start":276,"line_end":276,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11129,"byte_end":11151,"line_start":277,"line_end":277,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11152,"byte_end":11215,"line_start":278,"line_end":278,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11216,"byte_end":11256,"line_start":279,"line_end":279,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11257,"byte_end":11307,"line_start":280,"line_end":280,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11308,"byte_end":11343,"line_start":281,"line_end":281,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11344,"byte_end":11379,"line_start":282,"line_end":282,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11380,"byte_end":11463,"line_start":283,"line_end":283,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11464,"byte_end":11499,"line_start":284,"line_end":284,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11500,"byte_end":11525,"line_start":285,"line_end":285,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11526,"byte_end":11548,"line_start":286,"line_end":286,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11549,"byte_end":11552,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11553,"byte_end":11595,"line_start":288,"line_end":288,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11596,"byte_end":11668,"line_start":289,"line_end":289,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11669,"byte_end":11747,"line_start":290,"line_end":290,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11748,"byte_end":11779,"line_start":291,"line_end":291,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11780,"byte_end":11801,"line_start":292,"line_end":292,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11802,"byte_end":11819,"line_start":293,"line_end":293,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11820,"byte_end":11835,"line_start":294,"line_end":294,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11836,"byte_end":11845,"line_start":295,"line_end":295,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11846,"byte_end":11851,"line_start":296,"line_end":296,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11852,"byte_end":11859,"line_start":297,"line_end":297,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11860,"byte_end":11863,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11864,"byte_end":11884,"line_start":299,"line_end":299,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11885,"byte_end":11888,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11889,"byte_end":11970,"line_start":301,"line_end":301,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":11971,"byte_end":12049,"line_start":302,"line_end":302,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":12050,"byte_end":12130,"line_start":303,"line_end":303,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":12131,"byte_end":12208,"line_start":304,"line_end":304,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":12209,"byte_end":12292,"line_start":305,"line_end":305,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":12293,"byte_end":12370,"line_start":306,"line_end":306,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":12371,"byte_end":12458,"line_start":307,"line_end":307,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":12459,"byte_end":12540,"line_start":308,"line_end":308,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":12541,"byte_end":12550,"line_start":309,"line_end":309,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":12551,"byte_end":12554,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all features listed below except `test-util` and `tracing`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":12555,"byte_end":12636,"line_start":311,"line_end":311,"column_start":1,"column_end":82}},{"value":"/ - `rt`: Enables `tokio::spawn`, the basic (current thread) scheduler,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":12637,"byte_end":12710,"line_start":312,"line_end":312,"column_start":1,"column_end":74}},{"value":"/         and non-scheduler utilities.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":12711,"byte_end":12751,"line_start":313,"line_end":313,"column_start":1,"column_end":41}},{"value":"/ - `rt-multi-thread`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":12752,"byte_end":12838,"line_start":314,"line_end":314,"column_start":1,"column_end":87}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":12839,"byte_end":12890,"line_start":315,"line_end":315,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":12891,"byte_end":12951,"line_start":316,"line_end":316,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":12952,"byte_end":13029,"line_start":317,"line_end":317,"column_start":1,"column_end":78}},{"value":"/          `UdpSocket`, as well as (on Unix-like systems) `AsyncFd` and (on","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":13030,"byte_end":13107,"line_start":318,"line_end":318,"column_start":1,"column_end":78}},{"value":"/          FreeBSD) `PollAio`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":13108,"byte_end":13140,"line_start":319,"line_end":319,"column_start":1,"column_end":33}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":13141,"byte_end":13218,"line_start":320,"line_end":320,"column_start":1,"column_end":78}},{"value":"/           the built in timer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":13219,"byte_end":13252,"line_start":321,"line_end":321,"column_start":1,"column_end":34}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":13253,"byte_end":13301,"line_start":322,"line_end":322,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":13302,"byte_end":13371,"line_start":323,"line_end":323,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":13372,"byte_end":13418,"line_start":324,"line_end":324,"column_start":1,"column_end":47}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":13419,"byte_end":13469,"line_start":325,"line_end":325,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":13470,"byte_end":13508,"line_start":326,"line_end":326,"column_start":1,"column_end":39}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":13509,"byte_end":13587,"line_start":327,"line_end":327,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":13588,"byte_end":13591,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":13592,"byte_end":13674,"line_start":329,"line_end":329,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":13675,"byte_end":13697,"line_start":330,"line_end":330,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":13698,"byte_end":13701,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":13702,"byte_end":13727,"line_start":332,"line_end":332,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":13728,"byte_end":13731,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":13732,"byte_end":13800,"line_start":334,"line_end":334,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":13801,"byte_end":13864,"line_start":335,"line_end":335,"column_start":1,"column_end":64}},{"value":"/ dependencies.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":13865,"byte_end":13882,"line_start":336,"line_end":336,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":13883,"byte_end":13886,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":13887,"byte_end":13966,"line_start":338,"line_end":338,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":13967,"byte_end":14044,"line_start":339,"line_end":339,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14045,"byte_end":14078,"line_start":340,"line_end":340,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14079,"byte_end":14082,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ ### Unstable features","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14083,"byte_end":14108,"line_start":342,"line_end":342,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14109,"byte_end":14112,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Some feature flags are only available when specifying the `tokio_unstable` flag:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14113,"byte_end":14197,"line_start":344,"line_end":344,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14198,"byte_end":14201,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ - `tracing`: Enables tracing events.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14202,"byte_end":14242,"line_start":346,"line_end":346,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14243,"byte_end":14246,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ Likewise, some parts of the API are only available with the same flag:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14247,"byte_end":14321,"line_start":348,"line_end":348,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14322,"byte_end":14325,"line_start":349,"line_end":349,"column_start":1,"column_end":4}},{"value":"/ - [`task::JoinSet`]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14326,"byte_end":14349,"line_start":350,"line_end":350,"column_start":1,"column_end":24}},{"value":"/ - [`task::Builder`]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14350,"byte_end":14373,"line_start":351,"line_end":351,"column_start":1,"column_end":24}},{"value":"/  ","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14374,"byte_end":14379,"line_start":352,"line_end":352,"column_start":1,"column_end":6}},{"value":"/ This flag enables **unstable** features. The public API of these features","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14380,"byte_end":14457,"line_start":353,"line_end":353,"column_start":1,"column_end":78}},{"value":"/ may break in 1.x releases. To enable these features, the `--cfg","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14458,"byte_end":14525,"line_start":354,"line_end":354,"column_start":1,"column_end":68}},{"value":"/ tokio_unstable` argument must be passed to `rustc` when compiling. This","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14526,"byte_end":14601,"line_start":355,"line_end":355,"column_start":1,"column_end":76}},{"value":"/ serves to explicitly opt-in to features which may break semver conventions,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14602,"byte_end":14681,"line_start":356,"line_end":356,"column_start":1,"column_end":80}},{"value":"/ since Cargo [does not yet directly support such opt-ins][unstable features].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14682,"byte_end":14762,"line_start":357,"line_end":357,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14763,"byte_end":14766,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ You can specify it in your project's `.cargo/config.toml` file:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14767,"byte_end":14834,"line_start":359,"line_end":359,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14835,"byte_end":14838,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14839,"byte_end":14850,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ [build]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14851,"byte_end":14862,"line_start":362,"line_end":362,"column_start":1,"column_end":12}},{"value":"/ rustflags = [\"--cfg\", \"tokio_unstable\"]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14863,"byte_end":14906,"line_start":363,"line_end":363,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14907,"byte_end":14914,"line_start":364,"line_end":364,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14915,"byte_end":14918,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ Alternatively, you can specify it with an environment variable:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14919,"byte_end":14986,"line_start":366,"line_end":366,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14987,"byte_end":14990,"line_start":367,"line_end":367,"column_start":1,"column_end":4}},{"value":"/ ```sh","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":14991,"byte_end":15000,"line_start":368,"line_end":368,"column_start":1,"column_end":10}},{"value":"/ ## Many *nix shells:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":15001,"byte_end":15025,"line_start":369,"line_end":369,"column_start":1,"column_end":25}},{"value":"/ export RUSTFLAGS=\"--cfg tokio_unstable\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":15026,"byte_end":15069,"line_start":370,"line_end":370,"column_start":1,"column_end":44}},{"value":"/ cargo build","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":15070,"byte_end":15085,"line_start":371,"line_end":371,"column_start":1,"column_end":16}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":15086,"byte_end":15093,"line_start":372,"line_end":372,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":15094,"byte_end":15097,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ ```powershell","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":15098,"byte_end":15115,"line_start":374,"line_end":374,"column_start":1,"column_end":18}},{"value":"/ ## Windows PowerShell:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":15116,"byte_end":15142,"line_start":375,"line_end":375,"column_start":1,"column_end":27}},{"value":"/ $Env:RUSTFLAGS=\"--cfg tokio_unstable\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":15143,"byte_end":15184,"line_start":376,"line_end":376,"column_start":1,"column_end":42}},{"value":"/ cargo build","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":15185,"byte_end":15200,"line_start":377,"line_end":377,"column_start":1,"column_end":16}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":15201,"byte_end":15208,"line_start":378,"line_end":378,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":15209,"byte_end":15212,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/ [unstable features]: https://internals.rust-lang.org/t/feature-request-unstable-opt-in-non-transitive-crate-features/16193#why-not-a-crate-feature-2","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":15213,"byte_end":15365,"line_start":380,"line_end":380,"column_start":1,"column_end":153}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":15366,"byte_end":15463,"line_start":381,"line_end":381,"column_start":1,"column_end":98}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":1103},{"krate":0,"index":1107},{"krate":0,"index":1109},{"krate":0,"index":91}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":16096,"byte_end":16108,"line_start":400,"line_end":400,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/mod.rs","byte_start":20217,"byte_end":20237,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":91},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/support.rs","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1114},{"krate":0,"index":1117},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":98}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1122},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":37962,"byte_end":37968,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":1120},"children":[],"decl_id":null,"docs":" A not-yet-completed future.\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":37926,"byte_end":37957,"line_start":11,"line_end":11,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1125},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":38023,"byte_end":38027,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":1120},"children":[],"decl_id":null,"docs":" The output of the completed future.\n","sig":null,"attributes":[{"value":"/ The output of the completed future.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":37979,"byte_end":38018,"line_start":13,"line_end":13,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1128},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":38189,"byte_end":38193,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":1120},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":38046,"byte_end":38112,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":38117,"byte_end":38184,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":1120},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":37897,"byte_end":37906,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> { Future(Fut), Done(Fut::Output), Gone, }","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1125},{"krate":0,"index":1128}],"decl_id":null,"docs":" A future that may have completed.\n","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":37833,"byte_end":37870,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":121},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":38357,"byte_end":38367,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`.\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":38311,"byte_end":38349,"line_start":23,"line_end":23,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":38770,"byte_end":38780,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":38486,"byte_end":38571,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":38576,"byte_end":38647,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":38652,"byte_end":38725,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":38730,"byte_end":38758,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":39158,"byte_end":39169,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempts to take the output of a `MaybeDone` without driving it","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":39037,"byte_end":39104,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ towards completion.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":39109,"byte_end":39132,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":39137,"byte_end":39146,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":148},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/poll_fn.rs","byte_start":40404,"byte_end":40410,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":150}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/poll_fn.rs","byte_start":40352,"byte_end":40392,"line_start":10,"line_end":10,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":153},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/poll_fn.rs","byte_start":40540,"byte_end":40547,"line_start":18,"line_end":18,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].\n","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/poll_fn.rs","byte_start":40461,"byte_end":40532,"line_start":17,"line_end":17,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":167},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":1136},{"krate":0,"index":168},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":1246},{"krate":0,"index":1272},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1304},{"krate":0,"index":1307},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1338},{"krate":0,"index":1341},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1373},{"krate":0,"index":1397},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1490},{"krate":0,"index":1493},{"krate":0,"index":1496},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1537},{"krate":0,"index":1540},{"krate":0,"index":1543},{"krate":0,"index":1546},{"krate":0,"index":1549},{"krate":0,"index":1552},{"krate":0,"index":1555},{"krate":0,"index":1558},{"krate":0,"index":1561},{"krate":0,"index":1564},{"krate":0,"index":1567},{"krate":0,"index":1570},{"krate":0,"index":1573},{"krate":0,"index":1576},{"krate":0,"index":1579},{"krate":0,"index":1582},{"krate":0,"index":1585},{"krate":0,"index":1588},{"krate":0,"index":1591},{"krate":0,"index":1594},{"krate":0,"index":3963}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":41056,"byte_end":41133,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":41134,"byte_end":41137,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":41138,"byte_end":41209,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":41210,"byte_end":41290,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":41291,"byte_end":41365,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":41366,"byte_end":41369,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":41370,"byte_end":41400,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":41401,"byte_end":41404,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":41405,"byte_end":41485,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":41486,"byte_end":41563,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":41564,"byte_end":41641,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":41642,"byte_end":41722,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":41723,"byte_end":41801,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":41802,"byte_end":41867,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":41868,"byte_end":41871,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":41872,"byte_end":41944,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":41945,"byte_end":42012,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":42013,"byte_end":42092,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":42093,"byte_end":42167,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":42168,"byte_end":42242,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":42243,"byte_end":42260,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":42261,"byte_end":42264,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":42265,"byte_end":42329,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":42330,"byte_end":42405,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":42406,"byte_end":42481,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":42482,"byte_end":42559,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":42560,"byte_end":42563,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":42564,"byte_end":42640,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":42641,"byte_end":42716,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":42717,"byte_end":42797,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":42798,"byte_end":42869,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":42870,"byte_end":42939,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":42940,"byte_end":42943,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":42944,"byte_end":43016,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43017,"byte_end":43097,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43098,"byte_end":43151,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43152,"byte_end":43155,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43156,"byte_end":43169,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43170,"byte_end":43210,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43211,"byte_end":43235,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43236,"byte_end":43239,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43240,"byte_end":43258,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43259,"byte_end":43298,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43299,"byte_end":43348,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43349,"byte_end":43382,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43383,"byte_end":43386,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43387,"byte_end":43417,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43418,"byte_end":43461,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43462,"byte_end":43465,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43466,"byte_end":43516,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43517,"byte_end":43531,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43532,"byte_end":43537,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43538,"byte_end":43545,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43546,"byte_end":43549,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43550,"byte_end":43579,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43580,"byte_end":43620,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43621,"byte_end":43657,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43658,"byte_end":43699,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43700,"byte_end":43703,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43704,"byte_end":43739,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43740,"byte_end":43743,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43744,"byte_end":43825,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43826,"byte_end":43900,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43901,"byte_end":43979,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":43980,"byte_end":44024,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44025,"byte_end":44028,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44029,"byte_end":44099,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44100,"byte_end":44178,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44179,"byte_end":44257,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44258,"byte_end":44335,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44336,"byte_end":44339,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44340,"byte_end":44415,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44416,"byte_end":44454,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44455,"byte_end":44458,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44459,"byte_end":44472,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44473,"byte_end":44527,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44528,"byte_end":44552,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44553,"byte_end":44556,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44557,"byte_end":44575,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44576,"byte_end":44615,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44616,"byte_end":44661,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44662,"byte_end":44705,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44706,"byte_end":44745,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44746,"byte_end":44749,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44750,"byte_end":44784,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44785,"byte_end":44830,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44831,"byte_end":44834,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44835,"byte_end":44866,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44867,"byte_end":44881,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44882,"byte_end":44887,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44888,"byte_end":44895,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44896,"byte_end":44899,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44900,"byte_end":44981,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":44982,"byte_end":45060,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45061,"byte_end":45123,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45124,"byte_end":45127,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45128,"byte_end":45141,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45142,"byte_end":45194,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45195,"byte_end":45219,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45220,"byte_end":45223,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45224,"byte_end":45242,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45243,"byte_end":45282,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45283,"byte_end":45330,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45331,"byte_end":45340,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45341,"byte_end":45388,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45389,"byte_end":45392,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45393,"byte_end":45435,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45436,"byte_end":45477,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45478,"byte_end":45481,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45482,"byte_end":45542,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45543,"byte_end":45577,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45578,"byte_end":45581,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45582,"byte_end":45672,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45673,"byte_end":45676,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45677,"byte_end":45691,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45692,"byte_end":45697,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45698,"byte_end":45705,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45706,"byte_end":45709,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45710,"byte_end":45755,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45756,"byte_end":45798,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45799,"byte_end":45844,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45845,"byte_end":45884,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45885,"byte_end":45924,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45925,"byte_end":45928,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45929,"byte_end":45973,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45974,"byte_end":45977,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":45978,"byte_end":46060,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":46061,"byte_end":46140,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":46141,"byte_end":46215,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":46216,"byte_end":46289,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":46290,"byte_end":46350,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":46351,"byte_end":46354,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":46355,"byte_end":46396,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":46397,"byte_end":46400,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":46401,"byte_end":46469,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":46470,"byte_end":46539,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":46540,"byte_end":46606,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":46607,"byte_end":46670,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":46671,"byte_end":46738,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":46739,"byte_end":46808,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":46809,"byte_end":46879,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":46880,"byte_end":46958,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":46959,"byte_end":46984,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":46985,"byte_end":46988,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":46989,"byte_end":47065,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47066,"byte_end":47069,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47070,"byte_end":47101,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47102,"byte_end":47105,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47106,"byte_end":47186,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47187,"byte_end":47263,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47264,"byte_end":47311,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47312,"byte_end":47315,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47316,"byte_end":47389,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47390,"byte_end":47466,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47467,"byte_end":47543,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47544,"byte_end":47547,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47548,"byte_end":47569,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47570,"byte_end":47593,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47594,"byte_end":47616,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47617,"byte_end":47620,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47621,"byte_end":47643,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47644,"byte_end":47647,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], [`Result`], and [`SeekFrom`] are","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47648,"byte_end":47724,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ re-exported from `std::io` for ease of use.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47725,"byte_end":47772,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47773,"byte_end":47776,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47777,"byte_end":47811,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47812,"byte_end":47848,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47849,"byte_end":47889,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47890,"byte_end":47932,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":47933,"byte_end":48006,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Encoder.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":48007,"byte_end":48090,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Decoder.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":48091,"byte_end":48174,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":48175,"byte_end":48202,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":48203,"byte_end":48236,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":48237,"byte_end":48264,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":48265,"byte_end":48292,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ [`SeekFrom`]: enum@SeekFrom","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":48293,"byte_end":48324,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":48325,"byte_end":48395,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.3/futures/stream/trait.Stream.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":48396,"byte_end":48472,"line_start":181,"line_end":181,"column_start":1,"column_end":77}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/mod.rs","byte_start":48473,"byte_end":48502,"line_start":182,"line_end":182,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":188},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":51347,"byte_end":51359,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":50670,"byte_end":50701,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":50702,"byte_end":50705,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":50706,"byte_end":50778,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":50779,"byte_end":50857,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":50858,"byte_end":50944,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":50945,"byte_end":51022,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":51023,"byte_end":51034,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":51035,"byte_end":51038,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":51039,"byte_end":51107,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":51108,"byte_end":51132,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":51133,"byte_end":51136,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":51137,"byte_end":51179,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":51180,"byte_end":51230,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":51231,"byte_end":51284,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":51285,"byte_end":51336,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":52457,"byte_end":52470,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":51377,"byte_end":51462,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":51467,"byte_end":51508,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":51513,"byte_end":51516,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":51521,"byte_end":51568,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":51573,"byte_end":51576,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":51581,"byte_end":51640,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":51645,"byte_end":51703,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":51708,"byte_end":51789,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":51794,"byte_end":51820,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":51825,"byte_end":51828,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":51833,"byte_end":51904,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":51909,"byte_end":51971,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":51976,"byte_end":52047,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":52052,"byte_end":52133,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":52138,"byte_end":52214,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":52219,"byte_end":52270,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":52275,"byte_end":52278,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":52283,"byte_end":52354,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":52359,"byte_end":52362,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":52367,"byte_end":52406,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":52411,"byte_end":52449,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":53373,"byte_end":53380,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":188},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":52548,"byte_end":52622,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":52627,"byte_end":52694,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":52699,"byte_end":52702,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":52707,"byte_end":52778,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":52783,"byte_end":52852,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":52857,"byte_end":52931,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":52936,"byte_end":53013,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":53018,"byte_end":53088,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":53093,"byte_end":53146,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":53151,"byte_end":53154,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":53159,"byte_end":53231,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":53236,"byte_end":53258,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":53263,"byte_end":53266,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":53271,"byte_end":53310,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":53315,"byte_end":53365,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":230},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":56694,"byte_end":56703,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":231}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":55007,"byte_end":55037,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":55038,"byte_end":55041,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":55042,"byte_end":55121,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":55122,"byte_end":55196,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":55197,"byte_end":55276,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":55277,"byte_end":55354,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":55355,"byte_end":55366,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":55367,"byte_end":55370,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":55371,"byte_end":55448,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":55449,"byte_end":55467,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":55468,"byte_end":55471,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(()))` means that data was immediately read and placed into","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":55472,"byte_end":55552,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   the output buffer. The amount of data read can be determined by the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":55553,"byte_end":55626,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/   increase in the length of the slice returned by `ReadBuf::filled`. If the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":55627,"byte_end":55706,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   difference is 0, EOF has been reached.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":55707,"byte_end":55751,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":55752,"byte_end":55755,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":55756,"byte_end":55821,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":55822,"byte_end":55902,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":55903,"byte_end":55982,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":55983,"byte_end":56056,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":56057,"byte_end":56130,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":56131,"byte_end":56152,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":56153,"byte_end":56156,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":56157,"byte_end":56241,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":56242,"byte_end":56266,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":56267,"byte_end":56270,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":56271,"byte_end":56344,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":56345,"byte_end":56424,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":56425,"byte_end":56428,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":56429,"byte_end":56494,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":56495,"byte_end":56516,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":56517,"byte_end":56520,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":56521,"byte_end":56560,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":56561,"byte_end":56597,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":56598,"byte_end":56637,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":56638,"byte_end":56683,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":57220,"byte_end":57229,"line_start":53,"line_end":53,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":56710,"byte_end":56763,"line_start":44,"line_end":44,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":56768,"byte_end":56771,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))` and places data in the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":56776,"byte_end":56844,"line_start":46,"line_end":46,"column_start":5,"column_end":73}},{"value":"/ unfilled portion of `buf`. If no data was read (`buf.filled().len()` is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":56849,"byte_end":56924,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ unchanged), it implies that EOF has been reached.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":56929,"byte_end":56982,"line_start":48,"line_end":48,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":56987,"byte_end":56990,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns `Poll::Pending`","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":56995,"byte_end":57070,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ and arranges for the current task (via `cx.waker()`) to receive a","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":57075,"byte_end":57144,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ notification when the object becomes readable or is closed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":57149,"byte_end":57212,"line_start":52,"line_end":52,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":269},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":59825,"byte_end":59834,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":59343,"byte_end":59373,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":59374,"byte_end":59377,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":59378,"byte_end":59452,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":59453,"byte_end":59523,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":59524,"byte_end":59593,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":59594,"byte_end":59597,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":59598,"byte_end":59663,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":59664,"byte_end":59685,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":59686,"byte_end":59689,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":59690,"byte_end":59726,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":59727,"byte_end":59768,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":59769,"byte_end":59814,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":60476,"byte_end":60486,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, SeekFrom) -> io::Result<()>","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":59841,"byte_end":59898,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":59903,"byte_end":59906,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":59911,"byte_end":59984,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":59989,"byte_end":60015,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":60020,"byte_end":60023,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":60028,"byte_end":60103,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":60108,"byte_end":60164,"line_start":25,"line_end":25,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":60169,"byte_end":60172,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":60177,"byte_end":60189,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":60194,"byte_end":60197,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This function can return [`io::ErrorKind::Other`] in case there is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":60202,"byte_end":60272,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ another seek in progress. To avoid this, it is advisable that any call","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":60277,"byte_end":60351,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ to `start_seek` is preceded by a call to `poll_complete` to ensure all","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":60356,"byte_end":60430,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pending seeks have completed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":60435,"byte_end":60468,"line_start":32,"line_end":32,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":61009,"byte_end":61022,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":60553,"byte_end":60596,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":60601,"byte_end":60604,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":60609,"byte_end":60658,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":60663,"byte_end":60733,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`]. Repeatedly","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":60738,"byte_end":60810,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ calling this function without calling `start_seek` might return the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":60815,"byte_end":60886,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ same result.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":60891,"byte_end":60907,"line_start":41,"line_end":41,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":60912,"byte_end":60915,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":60920,"byte_end":60932,"line_start":43,"line_end":43,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":60937,"byte_end":60940,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":60945,"byte_end":61001,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":309},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":64313,"byte_end":64323,"line_start":45,"line_end":45,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":316}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":62450,"byte_end":62482,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":62483,"byte_end":62486,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":62487,"byte_end":62569,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":62570,"byte_end":62645,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":62646,"byte_end":62713,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":62714,"byte_end":62717,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":62718,"byte_end":62798,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":62799,"byte_end":62817,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":62818,"byte_end":62821,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":62822,"byte_end":62893,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":62894,"byte_end":62908,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":62909,"byte_end":62912,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":62913,"byte_end":62981,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":62982,"byte_end":63062,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":63063,"byte_end":63142,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":63143,"byte_end":63216,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":63217,"byte_end":63290,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":63291,"byte_end":63312,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":63313,"byte_end":63316,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":63317,"byte_end":63401,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":63402,"byte_end":63426,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":63427,"byte_end":63430,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":63431,"byte_end":63513,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":63514,"byte_end":63597,"line_start":29,"line_end":29,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":63598,"byte_end":63601,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":63602,"byte_end":63686,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":63687,"byte_end":63771,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":63772,"byte_end":63850,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":63851,"byte_end":63930,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":63931,"byte_end":63992,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":63993,"byte_end":63996,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":63997,"byte_end":64063,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":64064,"byte_end":64086,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":64087,"byte_end":64090,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":64091,"byte_end":64129,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":64130,"byte_end":64174,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":64175,"byte_end":64214,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":64215,"byte_end":64254,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":64255,"byte_end":64302,"line_start":44,"line_end":44,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":64995,"byte_end":65005,"line_start":58,"line_end":58,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":309},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":64330,"byte_end":64384,"line_start":46,"line_end":46,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":64389,"byte_end":64392,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`. If successful,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":64397,"byte_end":64473,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ then it must be guaranteed that `n <= buf.len()`. A return value of `0`","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":64478,"byte_end":64553,"line_start":49,"line_end":49,"column_start":5,"column_end":80}},{"value":"/ typically means that the underlying object is no longer able to accept","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":64558,"byte_end":64632,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ bytes and will likely not be able to in the future as well, or that the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":64637,"byte_end":64712,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ buffer provided is empty.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":64717,"byte_end":64746,"line_start":52,"line_end":52,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":64751,"byte_end":64754,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":64759,"byte_end":64821,"line_start":54,"line_end":54,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":64826,"byte_end":64884,"line_start":55,"line_end":55,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":64889,"byte_end":64956,"line_start":56,"line_end":56,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":64961,"byte_end":64987,"line_start":57,"line_end":57,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":65546,"byte_end":65556,"line_start":73,"line_end":73,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":309},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":65133,"byte_end":65204,"line_start":64,"line_end":64,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":65209,"byte_end":65231,"line_start":65,"line_end":65,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":65236,"byte_end":65239,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":65244,"byte_end":65290,"line_start":67,"line_end":67,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":65295,"byte_end":65298,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":65303,"byte_end":65367,"line_start":69,"line_end":69,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":65372,"byte_end":65430,"line_start":70,"line_end":70,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":65435,"byte_end":65503,"line_start":71,"line_end":71,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":65508,"byte_end":65538,"line_start":72,"line_end":72,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":68842,"byte_end":68855,"line_start":133,"line_end":133,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":309},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":65638,"byte_end":65712,"line_start":75,"line_end":75,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":65717,"byte_end":65765,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":65770,"byte_end":65773,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":65778,"byte_end":65849,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":65854,"byte_end":65930,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":65935,"byte_end":66011,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":66016,"byte_end":66091,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":66096,"byte_end":66167,"line_start":82,"line_end":82,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":66172,"byte_end":66248,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":66253,"byte_end":66281,"line_start":84,"line_end":84,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":66286,"byte_end":66289,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":66294,"byte_end":66355,"line_start":86,"line_end":86,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":66360,"byte_end":66431,"line_start":87,"line_end":87,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":66436,"byte_end":66508,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":66513,"byte_end":66588,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":66593,"byte_end":66666,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":66671,"byte_end":66746,"line_start":91,"line_end":91,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":66751,"byte_end":66823,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":66828,"byte_end":66839,"line_start":93,"line_end":93,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":66844,"byte_end":66847,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":66852,"byte_end":66926,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":66931,"byte_end":67003,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":67008,"byte_end":67077,"line_start":97,"line_end":97,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":67082,"byte_end":67150,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":67155,"byte_end":67216,"line_start":99,"line_end":99,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":67221,"byte_end":67224,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":67229,"byte_end":67247,"line_start":101,"line_end":101,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":67252,"byte_end":67255,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":67260,"byte_end":67330,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":67335,"byte_end":67338,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":67343,"byte_end":67406,"line_start":105,"line_end":105,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":67411,"byte_end":67480,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":67485,"byte_end":67560,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":67565,"byte_end":67638,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":67643,"byte_end":67694,"line_start":109,"line_end":109,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":67699,"byte_end":67702,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":67707,"byte_end":67777,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":67782,"byte_end":67857,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":67862,"byte_end":67934,"line_start":113,"line_end":113,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":67939,"byte_end":68009,"line_start":114,"line_end":114,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":68014,"byte_end":68089,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":68094,"byte_end":68097,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":68102,"byte_end":68183,"line_start":117,"line_end":117,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":68188,"byte_end":68263,"line_start":118,"line_end":118,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":68268,"byte_end":68335,"line_start":119,"line_end":119,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":68340,"byte_end":68343,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":68348,"byte_end":68360,"line_start":121,"line_end":121,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":68365,"byte_end":68368,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":68373,"byte_end":68444,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":68449,"byte_end":68515,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":68520,"byte_end":68594,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":68599,"byte_end":68663,"line_start":126,"line_end":126,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":68668,"byte_end":68707,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":68712,"byte_end":68715,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":68720,"byte_end":68732,"line_start":129,"line_end":129,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":68737,"byte_end":68740,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":68745,"byte_end":68820,"line_start":131,"line_end":131,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":68825,"byte_end":68834,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":69968,"byte_end":69987,"line_start":158,"line_end":158,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"::io::async_write::AsyncWrite::poll_write_vectored","value":"pub fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":309},"children":[],"decl_id":null,"docs":" Like [`poll_write`], except that it writes from a slice of buffers.","sig":null,"attributes":[{"value":"/ Like [`poll_write`], except that it writes from a slice of buffers.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":68937,"byte_end":69008,"line_start":135,"line_end":135,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":69013,"byte_end":69016,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Data is copied from each buffer in order, with the final buffer","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":69021,"byte_end":69088,"line_start":137,"line_end":137,"column_start":5,"column_end":72}},{"value":"/ read from possibly being only partially consumed. This method must","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":69093,"byte_end":69163,"line_start":138,"line_end":138,"column_start":5,"column_end":75}},{"value":"/ behave as a call to [`write`] with the buffers concatenated would.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":69168,"byte_end":69238,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":69243,"byte_end":69246,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ The default implementation calls [`poll_write`] with either the first nonempty","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":69251,"byte_end":69333,"line_start":141,"line_end":141,"column_start":5,"column_end":87}},{"value":"/ buffer provided, or an empty one if none exists.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":69338,"byte_end":69390,"line_start":142,"line_end":142,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":69395,"byte_end":69398,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":69403,"byte_end":69464,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":69469,"byte_end":69472,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":69477,"byte_end":69539,"line_start":146,"line_end":146,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":69544,"byte_end":69602,"line_start":147,"line_end":147,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":69607,"byte_end":69674,"line_start":148,"line_end":148,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":69679,"byte_end":69705,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":69710,"byte_end":69713,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":69718,"byte_end":69728,"line_start":151,"line_end":151,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":69733,"byte_end":69736,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This should be implemented as a single \"atomic\" write action. If any","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":69741,"byte_end":69813,"line_start":153,"line_end":153,"column_start":5,"column_end":77}},{"value":"/ data has been partially written, it is wrong to return an error or","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":69818,"byte_end":69888,"line_start":154,"line_end":154,"column_start":5,"column_end":75}},{"value":"/ pending.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":69893,"byte_end":69905,"line_start":155,"line_end":155,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":69910,"byte_end":69913,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":69918,"byte_end":69960,"line_start":157,"line_end":157,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":70755,"byte_end":70772,"line_start":180,"line_end":180,"column_start":8,"column_end":25},"name":"is_write_vectored","qualname":"::io::async_write::AsyncWrite::is_write_vectored","value":"pub fn is_write_vectored(&Self) -> bool","parent":{"krate":0,"index":309},"children":[],"decl_id":null,"docs":" Determines if this writer has an efficient [`poll_write_vectored`]\n implementation.","sig":null,"attributes":[{"value":"/ Determines if this writer has an efficient [`poll_write_vectored`]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":70285,"byte_end":70355,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ implementation.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":70360,"byte_end":70379,"line_start":171,"line_end":171,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":70384,"byte_end":70387,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ If a writer does not override the default [`poll_write_vectored`]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":70392,"byte_end":70461,"line_start":173,"line_end":173,"column_start":5,"column_end":74}},{"value":"/ implementation, code using it may want to avoid the method all together","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":70466,"byte_end":70541,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ and coalesce writes into a single buffer for higher performance.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":70546,"byte_end":70614,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":70619,"byte_end":70622,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The default implementation returns `false`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":70627,"byte_end":70674,"line_start":177,"line_end":177,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":70679,"byte_end":70682,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_vectored`]: AsyncWrite::poll_write_vectored","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":70687,"byte_end":70747,"line_start":179,"line_end":179,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":369},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":77845,"byte_end":77852,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"ReadBuf","qualname":"::io::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373}],"decl_id":null,"docs":" A wrapper around a byte buffer that is incrementally filled and initialized.","sig":null,"attributes":[{"value":"/ A wrapper around a byte buffer that is incrementally filled and initialized.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":76897,"byte_end":76977,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":76978,"byte_end":76981,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This type is a sort of \"double cursor\". It tracks three regions in the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":76982,"byte_end":77056,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ buffer: a region at the beginning of the buffer that has been logically","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":77057,"byte_end":77132,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ filled with data, a region that has been initialized at some point but not","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":77133,"byte_end":77211,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ yet logically filled, and a region at the end that may be uninitialized.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":77212,"byte_end":77288,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ The filled region is guaranteed to be a subset of the initialized region.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":77289,"byte_end":77366,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":77367,"byte_end":77370,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ In summary, the contents of the buffer can be visualized as:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":77371,"byte_end":77435,"line_start":12,"line_end":12,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":77436,"byte_end":77439,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```not_rust","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":77440,"byte_end":77455,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/ [             capacity              ]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":77456,"byte_end":77497,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ [ filled |         unfilled         ]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":77498,"byte_end":77539,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [    initialized    | uninitialized ]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":77540,"byte_end":77581,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":77582,"byte_end":77589,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":77590,"byte_end":77593,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ It is undefined behavior to de-initialize any bytes from the uninitialized","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":77594,"byte_end":77672,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ region, since it is merely unknown whether this region is uninitialized or","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":77673,"byte_end":77751,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ not, and if part of it turns out to be initialized, it must stay initialized.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":77752,"byte_end":77833,"line_start":22,"line_end":22,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":78054,"byte_end":78057,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadBuf>::new","value":"pub fn new(&'a mut [u8]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully initialized buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully initialized buffer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":77968,"byte_end":78028,"line_start":30,"line_end":30,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":78033,"byte_end":78042,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":78470,"byte_end":78476,"line_start":46,"line_end":46,"column_start":12,"column_end":18},"name":"uninit","qualname":"<ReadBuf>::uninit","value":"pub fn uninit(&'a mut [MaybeUninit<u8>]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully uninitialized buffer.","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully uninitialized buffer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":78290,"byte_end":78352,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":78357,"byte_end":78360,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Use `assume_init` if part of the buffer is known to be already initialized.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":78365,"byte_end":78444,"line_start":44,"line_end":44,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":78449,"byte_end":78458,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":78704,"byte_end":78712,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ReadBuf>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total capacity of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns the total capacity of the buffer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":78633,"byte_end":78678,"line_start":54,"line_end":54,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":78683,"byte_end":78692,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":78858,"byte_end":78864,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"filled","qualname":"<ReadBuf>::filled","value":"pub fn filled(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the filled portion of the buffer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":78765,"byte_end":78832,"line_start":60,"line_end":60,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":78837,"byte_end":78846,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":79212,"byte_end":79222,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"filled_mut","qualname":"<ReadBuf>::filled_mut","value":"pub fn filled_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the filled portion of the buffer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":79118,"byte_end":79186,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":79191,"byte_end":79200,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":79590,"byte_end":79594,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"take","qualname":"<ReadBuf>::take","value":"pub fn take(&mut Self, usize) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ReadBuf` comprised of the unfilled section up to `n`.\n","sig":null,"attributes":[{"value":"/ Returns a new `ReadBuf` comprised of the unfilled section up to `n`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":79492,"byte_end":79564,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":79569,"byte_end":79578,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":80000,"byte_end":80011,"line_start":90,"line_end":90,"column_start":12,"column_end":23},"name":"initialized","qualname":"<ReadBuf>::initialized","value":"pub fn initialized(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the initialized portion of the buffer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":79852,"byte_end":79924,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":79929,"byte_end":79932,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":79937,"byte_end":79974,"line_start":88,"line_end":88,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":79979,"byte_end":79988,"line_start":89,"line_end":89,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":80417,"byte_end":80432,"line_start":101,"line_end":101,"column_start":12,"column_end":27},"name":"initialized_mut","qualname":"<ReadBuf>::initialized_mut","value":"pub fn initialized_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the initialized portion of the buffer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":80268,"byte_end":80341,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":80346,"byte_end":80349,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":80354,"byte_end":80391,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":80396,"byte_end":80405,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":81544,"byte_end":81553,"line_start":123,"line_end":123,"column_start":19,"column_end":28},"name":"inner_mut","qualname":"<ReadBuf>::inner_mut","value":"pub unsafe fn inner_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the entire buffer, without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the entire buffer, without ensuring that it has been fully","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":80705,"byte_end":80798,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/ initialized.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":80803,"byte_end":80819,"line_start":109,"line_end":109,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":80824,"byte_end":80827,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The elements between 0 and `self.filled().len()` are filled, and those between 0 and","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":80832,"byte_end":80920,"line_start":111,"line_end":111,"column_start":5,"column_end":93}},{"value":"/ `self.initialized().len()` are initialized (and so can be converted to a `&mut [u8]`).","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":80925,"byte_end":81015,"line_start":112,"line_end":112,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":81020,"byte_end":81023,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ The caller of this method must ensure that these invariants are upheld. For example, if the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":81028,"byte_end":81123,"line_start":114,"line_end":114,"column_start":5,"column_end":100}},{"value":"/ caller initializes some of the uninitialized section of the buffer, it must call","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":81128,"byte_end":81212,"line_start":115,"line_end":115,"column_start":5,"column_end":89}},{"value":"/ [`assume_init`](Self::assume_init) with the number of bytes initialized.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":81217,"byte_end":81293,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":81298,"byte_end":81301,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":81306,"byte_end":81318,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":81323,"byte_end":81326,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":81331,"byte_end":81427,"line_start":120,"line_end":120,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":81432,"byte_end":81511,"line_start":121,"line_end":121,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":81516,"byte_end":81525,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":81999,"byte_end":82011,"line_start":135,"line_end":135,"column_start":19,"column_end":31},"name":"unfilled_mut","qualname":"<ReadBuf>::unfilled_mut","value":"pub unsafe fn unfilled_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":81621,"byte_end":81727,"line_start":127,"line_end":127,"column_start":5,"column_end":111}},{"value":"/ initialized.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":81732,"byte_end":81748,"line_start":128,"line_end":128,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":81753,"byte_end":81756,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":81761,"byte_end":81773,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":81778,"byte_end":81781,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":81786,"byte_end":81882,"line_start":132,"line_end":132,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":81887,"byte_end":81966,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":81971,"byte_end":81980,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":82373,"byte_end":82392,"line_start":144,"line_end":144,"column_start":12,"column_end":31},"name":"initialize_unfilled","qualname":"<ReadBuf>::initialize_unfilled","value":"pub fn initialize_unfilled(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":82099,"byte_end":82200,"line_start":139,"line_end":139,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":82205,"byte_end":82208,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Since `ReadBuf` tracks the region of the buffer that has been initialized, this is effectively \"free\" after","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":82213,"byte_end":82324,"line_start":141,"line_end":141,"column_start":5,"column_end":116}},{"value":"/ the first use.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":82329,"byte_end":82347,"line_start":142,"line_end":142,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":82352,"byte_end":82361,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":82730,"byte_end":82752,"line_start":155,"line_end":155,"column_start":12,"column_end":34},"name":"initialize_unfilled_to","qualname":"<ReadBuf>::initialize_unfilled_to","value":"pub fn initialize_unfilled_to(&mut Self, usize) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is\n fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":82484,"byte_end":82589,"line_start":148,"line_end":148,"column_start":5,"column_end":110}},{"value":"/ fully initialized.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":82594,"byte_end":82616,"line_start":149,"line_end":149,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":82621,"byte_end":82624,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":82629,"byte_end":82641,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":82646,"byte_end":82649,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `n`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":82654,"byte_end":82704,"line_start":153,"line_end":153,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":82709,"byte_end":82718,"line_start":154,"line_end":154,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":83567,"byte_end":83576,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"remaining","qualname":"<ReadBuf>::remaining","value":"pub fn remaining(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes at the end of the slice that have not yet been filled.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes at the end of the slice that have not yet been filled.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":83455,"byte_end":83541,"line_start":176,"line_end":176,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":83546,"byte_end":83555,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":83843,"byte_end":83848,"line_start":186,"line_end":186,"column_start":12,"column_end":17},"name":"clear","qualname":"<ReadBuf>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, resetting the filled region to empty.","sig":null,"attributes":[{"value":"/ Clears the buffer, resetting the filled region to empty.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":83644,"byte_end":83704,"line_start":182,"line_end":182,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":83709,"byte_end":83712,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed, and the contents of the buffer are not modified.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":83717,"byte_end":83817,"line_start":184,"line_end":184,"column_start":5,"column_end":105}},{"value":"inline","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":83822,"byte_end":83831,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":84177,"byte_end":84184,"line_start":198,"line_end":198,"column_start":12,"column_end":19},"name":"advance","qualname":"<ReadBuf>::advance","value":"pub fn advance(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Advances the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Advances the size of the filled region of the buffer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":83898,"byte_end":83955,"line_start":190,"line_end":190,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":83960,"byte_end":83963,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":83968,"byte_end":84019,"line_start":192,"line_end":192,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":84024,"byte_end":84027,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":84032,"byte_end":84044,"line_start":194,"line_end":194,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":84049,"byte_end":84052,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the initialized region.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":84057,"byte_end":84151,"line_start":196,"line_end":196,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":84156,"byte_end":84165,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":84795,"byte_end":84805,"line_start":214,"line_end":214,"column_start":12,"column_end":22},"name":"set_filled","qualname":"<ReadBuf>::set_filled","value":"pub fn set_filled(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Sets the size of the filled region of the buffer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":84321,"byte_end":84374,"line_start":203,"line_end":203,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":84379,"byte_end":84382,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":84387,"byte_end":84438,"line_start":205,"line_end":205,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":84443,"byte_end":84446,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Note that this can be used to *shrink* the filled region of the buffer in addition to growing it (for","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":84451,"byte_end":84556,"line_start":207,"line_end":207,"column_start":5,"column_end":110}},{"value":"/ example, by a `AsyncRead` implementation that compresses data in-place).","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":84561,"byte_end":84637,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":84642,"byte_end":84645,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":84650,"byte_end":84662,"line_start":210,"line_end":210,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":84667,"byte_end":84670,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the initialized region.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":84675,"byte_end":84769,"line_start":212,"line_end":212,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":84774,"byte_end":84783,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":85409,"byte_end":85420,"line_start":231,"line_end":231,"column_start":19,"column_end":30},"name":"assume_init","qualname":"<ReadBuf>::assume_init","value":"pub unsafe fn assume_init(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Asserts that the first `n` unfilled bytes of the buffer are initialized.","sig":null,"attributes":[{"value":"/ Asserts that the first `n` unfilled bytes of the buffer are initialized.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":84989,"byte_end":85065,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":85070,"byte_end":85073,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ `ReadBuf` assumes that bytes are never de-initialized, so this method does nothing when called with fewer","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":85078,"byte_end":85187,"line_start":224,"line_end":224,"column_start":5,"column_end":114}},{"value":"/ bytes than are already known to be initialized.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":85192,"byte_end":85243,"line_start":225,"line_end":225,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":85248,"byte_end":85251,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":85256,"byte_end":85268,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":85273,"byte_end":85276,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `n` unfilled bytes of the buffer have already been initialized.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":85281,"byte_end":85376,"line_start":229,"line_end":229,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":85381,"byte_end":85390,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":85800,"byte_end":85809,"line_start":244,"line_end":244,"column_start":12,"column_end":21},"name":"put_slice","qualname":"<ReadBuf>::put_slice","value":"pub fn put_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Appends data to the buffer, advancing the written position and possibly also the initialized position.","sig":null,"attributes":[{"value":"/ Appends data to the buffer, advancing the written position and possibly also the initialized position.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":85572,"byte_end":85678,"line_start":238,"line_end":238,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":85683,"byte_end":85686,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":85691,"byte_end":85703,"line_start":240,"line_end":240,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":85708,"byte_end":85711,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `buf.len()`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":85716,"byte_end":85774,"line_start":242,"line_end":242,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":85779,"byte_end":85788,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1383},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/stderr.rs","byte_start":13307886,"byte_end":13307892,"line_start":38,"line_end":38,"column_start":16,"column_end":22},"name":"Stderr","qualname":"::io::stderr::Stderr","value":"Stderr {  }","parent":null,"children":[{"krate":0,"index":1384}],"decl_id":null,"docs":" A handle to the standard error stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":23449,"byte_end":23475,"line_start":132,"line_end":132,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1382},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/stderr.rs","byte_start":13308971,"byte_end":13308977,"line_start":68,"line_end":68,"column_start":12,"column_end":18},"name":"stderr","qualname":"::io::stderr::stderr","value":"pub fn stderr() -> Stderr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard error of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":23449,"byte_end":23475,"line_start":132,"line_end":132,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1388},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/stdin.rs","byte_start":13311087,"byte_end":13311092,"line_start":29,"line_end":29,"column_start":16,"column_end":21},"name":"Stdin","qualname":"::io::stdin::Stdin","value":"Stdin {  }","parent":null,"children":[{"krate":0,"index":1389}],"decl_id":null,"docs":" A handle to the standard input stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":23449,"byte_end":23475,"line_start":132,"line_end":132,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1387},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/stdin.rs","byte_start":13311749,"byte_end":13311754,"line_start":43,"line_end":43,"column_start":12,"column_end":17},"name":"stdin","qualname":"::io::stdin::stdin","value":"pub fn stdin() -> Stdin","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard input of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":23449,"byte_end":23475,"line_start":132,"line_end":132,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1393},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/stdout.rs","byte_start":13313621,"byte_end":13313627,"line_start":37,"line_end":37,"column_start":16,"column_end":22},"name":"Stdout","qualname":"::io::stdout::Stdout","value":"Stdout {  }","parent":null,"children":[{"krate":0,"index":1394}],"decl_id":null,"docs":" A handle to the standard output stream of a process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":23449,"byte_end":23475,"line_start":132,"line_end":132,"column_start":13,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1392},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/stdout.rs","byte_start":13314695,"byte_end":13314701,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"stdout","qualname":"::io::stdout::stdout","value":"pub fn stdout() -> Stdout","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard output of the current process.","sig":null,"attributes":[{"value":"cfg(feature = \"io-std\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":23449,"byte_end":23475,"line_start":132,"line_end":132,"column_start":13,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1597},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13316358,"byte_end":13316366,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1599}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":23652,"byte_end":23679,"line_start":142,"line_end":142,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1600},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13316495,"byte_end":13316504,"line_start":25,"line_end":25,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1602}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":23652,"byte_end":23679,"line_start":142,"line_end":142,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1603},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13316818,"byte_end":13316823,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"pub fn split<T>(T) -> (ReadHalf<T>, WriteHalf<T>) where T: AsyncRead +\nAsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":23652,"byte_end":23679,"line_start":142,"line_end":142,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13317449,"byte_end":13317459,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13317346,"byte_end":13317421,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13317426,"byte_end":13317437,"line_start":64,"line_end":64,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13317865,"byte_end":13317872,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13317541,"byte_end":13317590,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13317595,"byte_end":13317598,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13317603,"byte_end":13317615,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13317620,"byte_end":13317623,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13317628,"byte_end":13317702,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13317707,"byte_end":13317757,"line_start":74,"line_end":74,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13317762,"byte_end":13317826,"line_start":75,"line_end":75,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13317831,"byte_end":13317853,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1454},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13318374,"byte_end":13318384,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13318271,"byte_end":13318346,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13318351,"byte_end":13318362,"line_start":94,"line_end":94,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":10883},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/seek.rs","byte_start":13321253,"byte_end":13321257,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":10886},{"krate":0,"index":10887},{"krate":0,"index":10888}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":3371},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_buf_read_ext.rs","byte_start":13324748,"byte_end":13324763,"line_start":12,"line_end":12,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":3372},{"krate":0,"index":3374},{"krate":0,"index":3376},{"krate":0,"index":3377},{"krate":0,"index":3378},{"krate":0,"index":3379}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":23652,"byte_end":23679,"line_start":142,"line_end":142,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3372},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_buf_read_ext.rs","byte_start":13328161,"byte_end":13328171,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":3371},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3374},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_buf_read_ext.rs","byte_start":13332376,"byte_end":13332385,"line_start":199,"line_end":199,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":3371},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3376},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_buf_read_ext.rs","byte_start":13333844,"byte_end":13333849,"line_start":240,"line_end":240,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":3371},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3377},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_buf_read_ext.rs","byte_start":13335077,"byte_end":13335085,"line_start":271,"line_end":271,"column_start":12,"column_end":20},"name":"fill_buf","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::fill_buf","value":"pub fn fill_buf(&mut Self) -> FillBuf<, Self> where Self: Unpin","parent":{"krate":0,"index":3371},"children":[],"decl_id":null,"docs":" Returns the contents of the internal buffer, filling it with more\n data from the inner reader if it is empty.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3378},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_buf_read_ext.rs","byte_start":13336086,"byte_end":13336093,"line_start":293,"line_end":293,"column_start":12,"column_end":19},"name":"consume","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::consume","value":"pub fn consume(&mut Self, usize) where Self: Unpin","parent":{"krate":0,"index":3371},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the\n buffer, so they should no longer be returned in calls to [`read`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3379},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_buf_read_ext.rs","byte_start":13337996,"byte_end":13338001,"line_start":342,"line_end":342,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":3371},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3381},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13340147,"byte_end":13340159,"line_start":62,"line_end":62,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":3382},{"krate":0,"index":3384},{"krate":0,"index":3386},{"krate":0,"index":3389},{"krate":0,"index":3396},{"krate":0,"index":3398},{"krate":0,"index":3400},{"krate":0,"index":3402},{"krate":0,"index":3404},{"krate":0,"index":3406},{"krate":0,"index":3408},{"krate":0,"index":3410},{"krate":0,"index":3412},{"krate":0,"index":3414},{"krate":0,"index":3416},{"krate":0,"index":3418},{"krate":0,"index":3420},{"krate":0,"index":3422},{"krate":0,"index":3424},{"krate":0,"index":3426},{"krate":0,"index":3428},{"krate":0,"index":3430},{"krate":0,"index":3432},{"krate":0,"index":3434},{"krate":0,"index":3436},{"krate":0,"index":3438},{"krate":0,"index":3391},{"krate":0,"index":3393},{"krate":0,"index":3395}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":23652,"byte_end":23679,"line_start":142,"line_end":142,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3382},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13341279,"byte_end":13341284,"line_start":92,"line_end":92,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3384},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13344421,"byte_end":13344425,"line_start":168,"line_end":168,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3386},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13347308,"byte_end":13347316,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"pub fn read_buf<'a, B>(&'a mut Self, &'a mut B) -> ReadBuf where Self: Sized +\nUnpin, B: BufMut","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3389},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13349528,"byte_end":13349538,"line_start":304,"line_end":304,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3396},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13350975,"byte_end":13350982,"line_start":348,"line_end":348,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"pub fn read_u8<'a>(&'a mut Self) -> ReadU8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3398},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13352271,"byte_end":13352278,"line_start":386,"line_end":386,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"pub fn read_i8<'a>(&'a mut Self) -> ReadI8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3400},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13353609,"byte_end":13353617,"line_start":424,"line_end":424,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"pub fn read_u16<'a>(&'a mut Self) -> ReadU16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3402},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13354957,"byte_end":13354965,"line_start":462,"line_end":462,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"pub fn read_i16<'a>(&'a mut Self) -> ReadI16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3404},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13356246,"byte_end":13356254,"line_start":499,"line_end":499,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"pub fn read_u32<'a>(&'a mut Self) -> ReadU32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3406},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13357549,"byte_end":13357557,"line_start":537,"line_end":537,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"pub fn read_i32<'a>(&'a mut Self) -> ReadI32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3408},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13358920,"byte_end":13358928,"line_start":576,"line_end":576,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"pub fn read_u64<'a>(&'a mut Self) -> ReadU64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3410},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13360213,"byte_end":13360221,"line_start":613,"line_end":613,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"pub fn read_i64<'a>(&'a mut Self) -> ReadI64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3412},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13361681,"byte_end":13361690,"line_start":653,"line_end":653,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"pub fn read_u128<'a>(&'a mut Self) -> ReadU128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3414},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13363076,"byte_end":13363085,"line_start":693,"line_end":693,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"pub fn read_i128<'a>(&'a mut Self) -> ReadI128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3416},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13364366,"byte_end":13364374,"line_start":730,"line_end":730,"column_start":16,"column_end":24},"name":"read_f32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_f32","value":"pub fn read_f32<'a>(&'a mut Self) -> ReadF32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads an 32-bit floating point type in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3418},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13365724,"byte_end":13365732,"line_start":769,"line_end":769,"column_start":16,"column_end":24},"name":"read_f64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_f64","value":"pub fn read_f64<'a>(&'a mut Self) -> ReadF64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads an 64-bit floating point type in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3420},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13367078,"byte_end":13367089,"line_start":807,"line_end":807,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"pub fn read_u16_le<'a>(&'a mut Self) -> ReadU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3422},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13368450,"byte_end":13368461,"line_start":845,"line_end":845,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"pub fn read_i16_le<'a>(&'a mut Self) -> ReadI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3424},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13369762,"byte_end":13369773,"line_start":882,"line_end":882,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"pub fn read_u32_le<'a>(&'a mut Self) -> ReadU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3426},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13371085,"byte_end":13371096,"line_start":920,"line_end":920,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"pub fn read_i32_le<'a>(&'a mut Self) -> ReadI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3428},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13372477,"byte_end":13372488,"line_start":959,"line_end":959,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"pub fn read_u64_le<'a>(&'a mut Self) -> ReadU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3430},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13373782,"byte_end":13373793,"line_start":996,"line_end":996,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"pub fn read_i64_le<'a>(&'a mut Self) -> ReadI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3432},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13375271,"byte_end":13375283,"line_start":1036,"line_end":1036,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"pub fn read_u128_le<'a>(&'a mut Self) -> ReadU128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3434},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13376677,"byte_end":13376689,"line_start":1076,"line_end":1076,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"pub fn read_i128_le<'a>(&'a mut Self) -> ReadI128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3436},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13377981,"byte_end":13377992,"line_start":1113,"line_end":1113,"column_start":16,"column_end":27},"name":"read_f32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_f32_le","value":"pub fn read_f32_le<'a>(&'a mut Self) -> ReadF32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads an 32-bit floating point type in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3438},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13379353,"byte_end":13379364,"line_start":1152,"line_end":1152,"column_start":16,"column_end":27},"name":"read_f64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_f64_le","value":"pub fn read_f64_le<'a>(&'a mut Self) -> ReadF64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads an 64-bit floating point type in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3391},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13381022,"byte_end":13381033,"line_start":1200,"line_end":1200,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3393},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13382588,"byte_end":13382602,"line_start":1247,"line_end":1247,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3395},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13383894,"byte_end":13383898,"line_start":1285,"line_end":1285,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3440},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_seek_ext.rs","byte_start":13384986,"byte_end":13384998,"line_start":33,"line_end":33,"column_start":15,"column_end":27},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":3441},{"krate":0,"index":3442},{"krate":0,"index":3443}],"decl_id":null,"docs":" An extension trait that adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":23652,"byte_end":23679,"line_start":142,"line_end":142,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3441},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_seek_ext.rs","byte_start":13385994,"byte_end":13385998,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":3440},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3442},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_seek_ext.rs","byte_start":13386323,"byte_end":13386329,"line_start":73,"line_end":73,"column_start":12,"column_end":18},"name":"rewind","qualname":"::io::util::async_seek_ext::AsyncSeekExt::rewind","value":"pub fn rewind(&mut Self) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":3440},"children":[],"decl_id":null,"docs":" Creates a future which will rewind to the beginning of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3443},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_seek_ext.rs","byte_start":13386668,"byte_end":13386683,"line_start":84,"line_end":84,"column_start":12,"column_end":27},"name":"stream_position","qualname":"::io::util::async_seek_ext::AsyncSeekExt::stream_position","value":"pub fn stream_position(&mut Self) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":3440},"children":[],"decl_id":null,"docs":" Creates a future which will return the current seek position from the\n start of the stream.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3445},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13389045,"byte_end":13389058,"line_start":69,"line_end":69,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":3446},{"krate":0,"index":3448},{"krate":0,"index":3451},{"krate":0,"index":3454},{"krate":0,"index":3457},{"krate":0,"index":3461},{"krate":0,"index":3463},{"krate":0,"index":3465},{"krate":0,"index":3467},{"krate":0,"index":3469},{"krate":0,"index":3471},{"krate":0,"index":3473},{"krate":0,"index":3475},{"krate":0,"index":3477},{"krate":0,"index":3479},{"krate":0,"index":3481},{"krate":0,"index":3483},{"krate":0,"index":3485},{"krate":0,"index":3487},{"krate":0,"index":3489},{"krate":0,"index":3491},{"krate":0,"index":3493},{"krate":0,"index":3495},{"krate":0,"index":3497},{"krate":0,"index":3499},{"krate":0,"index":3501},{"krate":0,"index":3503},{"krate":0,"index":3459},{"krate":0,"index":3460}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":23652,"byte_end":23679,"line_start":142,"line_end":142,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3446},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13391235,"byte_end":13391240,"line_start":123,"line_end":123,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3448},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13392780,"byte_end":13392794,"line_start":171,"line_end":171,"column_start":12,"column_end":26},"name":"write_vectored","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_vectored","value":"pub fn write_vectored<'a, 'b>(&'a mut Self, &'a [IoSlice]) -> WriteVectored\nwhere Self: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Like [`write`], except that it writes from a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3451},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13396021,"byte_end":13396030,"line_start":251,"line_end":251,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"pub fn write_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3454},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13398423,"byte_end":13398436,"line_start":315,"line_end":315,"column_start":12,"column_end":25},"name":"write_all_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all_buf","value":"pub fn write_all_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteAllBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3457},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13400186,"byte_end":13400195,"line_start":364,"line_end":364,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3461},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13401595,"byte_end":13401603,"line_start":407,"line_end":407,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"pub fn write_u8<'a>(&'a mut Self, u8) -> WriteU8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3463},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13402864,"byte_end":13402872,"line_start":444,"line_end":444,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"pub fn write_i8<'a>(&'a mut Self, i8) -> WriteI8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3465},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13404187,"byte_end":13404196,"line_start":482,"line_end":482,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"pub fn write_u16<'a>(&'a mut Self, u16) -> WriteU16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3467},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13405509,"byte_end":13405518,"line_start":520,"line_end":520,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"pub fn write_i16<'a>(&'a mut Self, i16) -> WriteI16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3469},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13406858,"byte_end":13406867,"line_start":558,"line_end":558,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"pub fn write_u32<'a>(&'a mut Self, u32) -> WriteU32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3471},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13408202,"byte_end":13408211,"line_start":596,"line_end":596,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"pub fn write_i32<'a>(&'a mut Self, i32) -> WriteI32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3473},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13409588,"byte_end":13409597,"line_start":634,"line_end":634,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"pub fn write_u64<'a>(&'a mut Self, u64) -> WriteU64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3475},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13410968,"byte_end":13410977,"line_start":672,"line_end":672,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"pub fn write_i64<'a>(&'a mut Self, i64) -> WriteI64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3477},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13412432,"byte_end":13412442,"line_start":712,"line_end":712,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"pub fn write_u128<'a>(&'a mut Self, u128) -> WriteU128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3479},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13413824,"byte_end":13413834,"line_start":752,"line_end":752,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"pub fn write_i128<'a>(&'a mut Self, i128) -> WriteI128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3481},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13415122,"byte_end":13415131,"line_start":789,"line_end":789,"column_start":16,"column_end":25},"name":"write_f32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_f32","value":"pub fn write_f32<'a>(&'a mut Self, f32) -> WriteF32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Writes an 32-bit floating point type in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3483},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13416487,"byte_end":13416496,"line_start":828,"line_end":828,"column_start":16,"column_end":25},"name":"write_f64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_f64","value":"pub fn write_f64<'a>(&'a mut Self, f64) -> WriteF64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Writes an 64-bit floating point type in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3485},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13417825,"byte_end":13417837,"line_start":866,"line_end":866,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"pub fn write_u16_le<'a>(&'a mut Self, u16) -> WriteU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3487},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13419164,"byte_end":13419176,"line_start":904,"line_end":904,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"pub fn write_i16_le<'a>(&'a mut Self, i16) -> WriteI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3489},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13420530,"byte_end":13420542,"line_start":942,"line_end":942,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"pub fn write_u32_le<'a>(&'a mut Self, u32) -> WriteU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3491},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13421891,"byte_end":13421903,"line_start":980,"line_end":980,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"pub fn write_i32_le<'a>(&'a mut Self, i32) -> WriteI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3493},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13423294,"byte_end":13423306,"line_start":1018,"line_end":1018,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"pub fn write_u64_le<'a>(&'a mut Self, u64) -> WriteU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3495},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13424691,"byte_end":13424703,"line_start":1056,"line_end":1056,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"pub fn write_i64_le<'a>(&'a mut Self, i64) -> WriteI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3497},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13426170,"byte_end":13426183,"line_start":1096,"line_end":1096,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"pub fn write_u128_le<'a>(&'a mut Self, u128) -> WriteU128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3499},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13427577,"byte_end":13427590,"line_start":1136,"line_end":1136,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"pub fn write_i128_le<'a>(&'a mut Self, i128) -> WriteI128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3501},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13428889,"byte_end":13428901,"line_start":1173,"line_end":1173,"column_start":16,"column_end":28},"name":"write_f32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_f32_le","value":"pub fn write_f32_le<'a>(&'a mut Self, f32) -> WriteF32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Writes an 32-bit floating point type in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3503},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13430268,"byte_end":13430280,"line_start":1212,"line_end":1212,"column_start":16,"column_end":28},"name":"write_f64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_f64_le","value":"pub fn write_f64_le<'a>(&'a mut Self, f64) -> WriteF64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Writes an 64-bit floating point type in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3459},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13431298,"byte_end":13431303,"line_start":1245,"line_end":1245,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3460},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13432593,"byte_end":13432601,"line_start":1284,"line_end":1284,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"pub fn shutdown(&mut Self) -> Shutdown<, Self> where Self: Unpin","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10834},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13434005,"byte_end":13434014,"line_start":27,"line_end":27,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":10836},{"krate":0,"index":10837},{"krate":0,"index":10838},{"krate":0,"index":10839},{"krate":0,"index":10840}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1986},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13434392,"byte_end":13434395,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13434250,"byte_end":13434342,"line_start":38,"line_end":38,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13434347,"byte_end":13434380,"line_start":39,"line_end":39,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1987},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13434557,"byte_end":13434570,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13434480,"byte_end":13434545,"line_start":44,"line_end":44,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1988},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13434965,"byte_end":13434972,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13434828,"byte_end":13434874,"line_start":56,"line_end":56,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13434879,"byte_end":13434882,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13434887,"byte_end":13434953,"line_start":58,"line_end":58,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1989},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13435164,"byte_end":13435171,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13435019,"byte_end":13435073,"line_start":63,"line_end":63,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13435078,"byte_end":13435081,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13435086,"byte_end":13435152,"line_start":65,"line_end":65,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1990},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13435382,"byte_end":13435393,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13435230,"byte_end":13435291,"line_start":70,"line_end":70,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13435296,"byte_end":13435299,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13435304,"byte_end":13435370,"line_start":72,"line_end":72,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1991},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13435624,"byte_end":13435634,"line_start":80,"line_end":80,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13435473,"byte_end":13435536,"line_start":77,"line_end":77,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13435541,"byte_end":13435544,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13435549,"byte_end":13435612,"line_start":79,"line_end":79,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1992},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13435838,"byte_end":13435844,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13435678,"byte_end":13435734,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13435739,"byte_end":13435742,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13435747,"byte_end":13435826,"line_start":86,"line_end":86,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":10798},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13445381,"byte_end":13445390,"line_start":19,"line_end":19,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":10800}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13445669,"byte_end":13445672,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"pub fn new(RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13445515,"byte_end":13445572,"line_start":26,"line_end":26,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13445577,"byte_end":13445580,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13445585,"byte_end":13445657,"line_start":28,"line_end":28,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13446004,"byte_end":13446017,"line_start":39,"line_end":39,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"pub fn with_capacity(usize, usize, RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13445804,"byte_end":13445889,"line_start":35,"line_end":35,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13445894,"byte_end":13445907,"line_start":36,"line_end":36,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13445912,"byte_end":13445915,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13445920,"byte_end":13445992,"line_start":38,"line_end":38,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13446474,"byte_end":13446481,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"pub fn get_ref(&Self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13446329,"byte_end":13446379,"line_start":52,"line_end":52,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13446384,"byte_end":13446387,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13446392,"byte_end":13446462,"line_start":54,"line_end":54,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13446701,"byte_end":13446708,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13446548,"byte_end":13446606,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13446611,"byte_end":13446614,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13446619,"byte_end":13446689,"line_start":61,"line_end":61,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13446943,"byte_end":13446954,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13446783,"byte_end":13446848,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13446853,"byte_end":13446856,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13446861,"byte_end":13446931,"line_start":68,"line_end":68,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13447218,"byte_end":13447228,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"pub fn into_inner(Self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13447063,"byte_end":13447130,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13447135,"byte_end":13447138,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13447143,"byte_end":13447206,"line_start":75,"line_end":75,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10753},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13452541,"byte_end":13452550,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":10755},{"krate":0,"index":10756},{"krate":0,"index":10757},{"krate":0,"index":10758}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2151},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13452900,"byte_end":13452903,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13452758,"byte_end":13452850,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13452855,"byte_end":13452888,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2152},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13453065,"byte_end":13453078,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13452988,"byte_end":13453053,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2154},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13454201,"byte_end":13454208,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13454143,"byte_end":13454189,"line_start":86,"line_end":86,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2155},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13454399,"byte_end":13454406,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13454255,"byte_end":13454309,"line_start":91,"line_end":91,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13454314,"byte_end":13454317,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13454322,"byte_end":13454387,"line_start":93,"line_end":93,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13454616,"byte_end":13454627,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13454465,"byte_end":13454526,"line_start":98,"line_end":98,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13454531,"byte_end":13454534,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13454539,"byte_end":13454604,"line_start":100,"line_end":100,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2157},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13454858,"byte_end":13454868,"line_start":108,"line_end":108,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13454707,"byte_end":13454770,"line_start":105,"line_end":105,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13454775,"byte_end":13454778,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13454783,"byte_end":13454846,"line_start":107,"line_end":107,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13454980,"byte_end":13454986,"line_start":113,"line_end":113,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13454912,"byte_end":13454968,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":10704},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13461979,"byte_end":13461984,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":10707},{"krate":0,"index":10708},{"krate":0,"index":10709}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2222},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13462425,"byte_end":13462432,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13462351,"byte_end":13462413,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13462764,"byte_end":13462771,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13462501,"byte_end":13462571,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13462576,"byte_end":13462579,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13462584,"byte_end":13462657,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13462662,"byte_end":13462735,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13462740,"byte_end":13462752,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2224},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13463130,"byte_end":13463141,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13462860,"byte_end":13462937,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13462942,"byte_end":13462945,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13462950,"byte_end":13463023,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13463028,"byte_end":13463101,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13463106,"byte_end":13463118,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2225},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13463338,"byte_end":13463348,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13463270,"byte_end":13463326,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":3555},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy.rs","byte_start":13469823,"byte_end":13469827,"line_start":149,"line_end":149,"column_start":18,"column_end":22},"name":"copy","qualname":"::io::util::copy::copy","value":"pub async fn copy<'a, R, W>(&'a mut R, &'a mut W) -> /*impl Trait*/ where\nR: AsyncRead + Unpin + ?Sized, W: AsyncWrite + Unpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":23652,"byte_end":23679,"line_start":142,"line_end":142,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2333},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13473901,"byte_end":13473919,"line_start":108,"line_end":108,"column_start":14,"column_end":32},"name":"copy_bidirectional","qualname":"::io::util::copy_bidirectional::copy_bidirectional","value":"pub async fn copy_bidirectional<A, B, '_, '_>(&'_ mut A, &'_ mut B)\n-> /*impl Trait*/ where A: AsyncRead + AsyncWrite + Unpin + ?Sized,\nB: AsyncRead + AsyncWrite + Unpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Copies data in both directions between `a` and `b`.","sig":null,"attributes":[{"value":"/ Copies data in both directions between `a` and `b`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13472649,"byte_end":13472704,"line_start":80,"line_end":80,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13472705,"byte_end":13472708,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This function returns a future that will read from both streams,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13472709,"byte_end":13472777,"line_start":82,"line_end":82,"column_start":1,"column_end":69}},{"value":"/ writing any data read to the opposing stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13472778,"byte_end":13472827,"line_start":83,"line_end":83,"column_start":1,"column_end":50}},{"value":"/ This happens in both directions concurrently.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13472828,"byte_end":13472877,"line_start":84,"line_end":84,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13472878,"byte_end":13472881,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ If an EOF is observed on one stream, [`shutdown()`] will be invoked on","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13472882,"byte_end":13472956,"line_start":86,"line_end":86,"column_start":1,"column_end":75}},{"value":"/ the other, and reading from that stream will stop. Copying of data in","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13472957,"byte_end":13473030,"line_start":87,"line_end":87,"column_start":1,"column_end":74}},{"value":"/ the other direction will continue.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13473031,"byte_end":13473069,"line_start":88,"line_end":88,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13473070,"byte_end":13473073,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ The future will complete successfully once both directions of communication has been shut down.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13473074,"byte_end":13473173,"line_start":90,"line_end":90,"column_start":1,"column_end":100}},{"value":"/ A direction is shut down when the reader reports EOF,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13473174,"byte_end":13473231,"line_start":91,"line_end":91,"column_start":1,"column_end":58}},{"value":"/ at which point [`shutdown()`] is called on the corresponding writer. When finished,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13473232,"byte_end":13473319,"line_start":92,"line_end":92,"column_start":1,"column_end":88}},{"value":"/ it will return a tuple of the number of bytes copied from a to b","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13473320,"byte_end":13473388,"line_start":93,"line_end":93,"column_start":1,"column_end":69}},{"value":"/ and the number of bytes copied from b to a, in that order.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13473389,"byte_end":13473451,"line_start":94,"line_end":94,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13473452,"byte_end":13473455,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [`shutdown()`]: crate::io::AsyncWriteExt::shutdown","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13473456,"byte_end":13473510,"line_start":96,"line_end":96,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13473511,"byte_end":13473514,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13473515,"byte_end":13473527,"line_start":98,"line_end":98,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13473528,"byte_end":13473531,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The future will immediately return an error if any IO operation on `a`","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13473532,"byte_end":13473606,"line_start":100,"line_end":100,"column_start":1,"column_end":75}},{"value":"/ or `b` returns an error. Some data read from either stream may be lost (not","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13473607,"byte_end":13473686,"line_start":101,"line_end":101,"column_start":1,"column_end":80}},{"value":"/ written to the other stream) in this case.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13473687,"byte_end":13473733,"line_start":102,"line_end":102,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13473734,"byte_end":13473737,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ # Return value","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13473738,"byte_end":13473756,"line_start":104,"line_end":104,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13473757,"byte_end":13473760,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Returns a tuple of bytes copied `a` to `b` and bytes copied `b` to `a`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13473761,"byte_end":13473836,"line_start":106,"line_end":106,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":3561},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_buf.rs","byte_start":13475915,"byte_end":13475923,"line_start":54,"line_end":54,"column_start":18,"column_end":26},"name":"copy_buf","qualname":"::io::util::copy_buf::copy_buf","value":"pub async fn copy_buf<'a, R, W>(&'a mut R, &'a mut W) -> /*impl Trait*/ where\nR: AsyncBufRead + Unpin + ?Sized, W: AsyncWrite + Unpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":23652,"byte_end":23679,"line_start":142,"line_end":142,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3579},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/empty.rs","byte_start":13477732,"byte_end":13477737,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3580}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":23652,"byte_end":23679,"line_start":142,"line_end":142,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3581},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/empty.rs","byte_start":13478416,"byte_end":13478421,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":23652,"byte_end":23679,"line_start":142,"line_end":142,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":10655},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/flush.rs","byte_start":13480097,"byte_end":13480102,"line_start":17,"line_end":17,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":10658},{"krate":0,"index":10659}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10607},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13481537,"byte_end":13481542,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":10609},{"krate":0,"index":10610},{"krate":0,"index":10611},{"krate":0,"index":10612}],"decl_id":null,"docs":" Reads lines from an [`AsyncBufRead`].","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2476},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13482471,"byte_end":13482480,"line_start":69,"line_end":69,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"pub async fn next_line<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13481899,"byte_end":13481939,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13481944,"byte_end":13481947,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13481952,"byte_end":13481971,"line_start":50,"line_end":50,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13481976,"byte_end":13481979,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This method is cancellation safe.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13481984,"byte_end":13482021,"line_start":52,"line_end":52,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13482026,"byte_end":13482029,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13482034,"byte_end":13482048,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13482053,"byte_end":13482056,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13482061,"byte_end":13482068,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13482073,"byte_end":13482107,"line_start":57,"line_end":57,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13482112,"byte_end":13482147,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13482152,"byte_end":13482155,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13482160,"byte_end":13482243,"line_start":60,"line_end":60,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13482248,"byte_end":13482288,"line_start":61,"line_end":61,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13482293,"byte_end":13482296,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13482301,"byte_end":13482354,"line_start":63,"line_end":63,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13482359,"byte_end":13482402,"line_start":64,"line_end":64,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13482407,"byte_end":13482412,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13482417,"byte_end":13482429,"line_start":66,"line_end":66,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13482434,"byte_end":13482441,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13482446,"byte_end":13482453,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2483},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13482709,"byte_end":13482716,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtains a mutable reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Obtains a mutable reference to the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13482640,"byte_end":13482697,"line_start":75,"line_end":75,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2484},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13482837,"byte_end":13482844,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"pub fn get_ref(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtains a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Obtains a reference to the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13482776,"byte_end":13482825,"line_start":80,"line_end":80,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2485},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13483131,"byte_end":13483141,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13482896,"byte_end":13482957,"line_start":85,"line_end":85,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13482962,"byte_end":13482965,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13482970,"byte_end":13483033,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13483038,"byte_end":13483119,"line_start":88,"line_end":88,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2488},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13484012,"byte_end":13484026,"line_start":112,"line_end":112,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"pub fn poll_next_line(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next line in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next line in the stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13483234,"byte_end":13483276,"line_start":98,"line_end":98,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13483281,"byte_end":13483284,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13483289,"byte_end":13483313,"line_start":100,"line_end":100,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13483318,"byte_end":13483321,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next line is not yet available.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13483326,"byte_end":13483387,"line_start":102,"line_end":102,"column_start":5,"column_end":66}},{"value":"/  * `Poll::Ready(Ok(Some(line)))` if the next line is available.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13483392,"byte_end":13483459,"line_start":103,"line_end":103,"column_start":5,"column_end":72}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more lines in this stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13483464,"byte_end":13483537,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the next line.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13483542,"byte_end":13483625,"line_start":105,"line_end":105,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13483630,"byte_end":13483633,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13483638,"byte_end":13483710,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when more bytes become","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13483715,"byte_end":13483784,"line_start":108,"line_end":108,"column_start":5,"column_end":74}},{"value":"/ available on the underlying IO resource.  Note that on multiple calls to","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13483789,"byte_end":13483865,"line_start":109,"line_end":109,"column_start":5,"column_end":81}},{"value":"/ `poll_next_line`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13483870,"byte_end":13483946,"line_start":110,"line_end":110,"column_start":5,"column_end":81}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13483951,"byte_end":13484000,"line_start":111,"line_end":111,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3583},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13486183,"byte_end":13486195,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"DuplexStream","qualname":"::io::util::mem::DuplexStream","value":"DuplexStream {  }","parent":null,"children":[{"krate":0,"index":3584},{"krate":0,"index":3585}],"decl_id":null,"docs":" A bidirectional pipe to read and write bytes in memory.","sig":null,"attributes":[{"value":"/ A bidirectional pipe to read and write bytes in memory.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13484948,"byte_end":13485007,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485008,"byte_end":13485011,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A pair of `DuplexStream`s are created together, and they act as a \"channel\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485012,"byte_end":13485091,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ that can be used as in-memory IO types. Writing to one of the pairs will","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485092,"byte_end":13485168,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ allow that data to be read from the other, and vice versa.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485169,"byte_end":13485231,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485232,"byte_end":13485235,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Closing a `DuplexStream`","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485236,"byte_end":13485266,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485267,"byte_end":13485270,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If one end of the `DuplexStream` channel is dropped, any pending reads on","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485271,"byte_end":13485348,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ the other side will continue to read data until the buffer is drained, then","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485349,"byte_end":13485428,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ they will signal EOF by returning 0 bytes. Any writes to the other side,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485429,"byte_end":13485505,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ including pending ones (that are waiting for free space in the buffer) will","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485506,"byte_end":13485585,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ return `Err(BrokenPipe)` immediately.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485586,"byte_end":13485627,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485628,"byte_end":13485631,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485632,"byte_end":13485645,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485646,"byte_end":13485649,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485650,"byte_end":13485657,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # async fn ex() -> std::io::Result<()> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485658,"byte_end":13485702,"line_start":30,"line_end":30,"column_start":1,"column_end":45}},{"value":"/ # use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485703,"byte_end":13485754,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ let (mut client, mut server) = tokio::io::duplex(64);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485755,"byte_end":13485812,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485813,"byte_end":13485816,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ client.write_all(b\"ping\").await?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485817,"byte_end":13485854,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485855,"byte_end":13485858,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0u8; 4];","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485859,"byte_end":13485886,"line_start":36,"line_end":36,"column_start":1,"column_end":28}},{"value":"/ server.read_exact(&mut buf).await?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485887,"byte_end":13485926,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"ping\");","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485927,"byte_end":13485957,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485958,"byte_end":13485961,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ server.write_all(b\"pong\").await?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13485962,"byte_end":13485999,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13486000,"byte_end":13486003,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ client.read_exact(&mut buf).await?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13486004,"byte_end":13486043,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"pong\");","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13486044,"byte_end":13486074,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/ # Ok(())","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13486075,"byte_end":13486087,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13486088,"byte_end":13486095,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13486096,"byte_end":13486103,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2530},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13487543,"byte_end":13487549,"line_start":85,"line_end":85,"column_start":8,"column_end":14},"name":"duplex","qualname":"::io::util::mem::duplex","value":"pub fn duplex(usize) -> (DuplexStream, DuplexStream)","parent":null,"children":[],"decl_id":null,"docs":" Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","sig":null,"attributes":[{"value":"/ Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13487258,"byte_end":13487341,"line_start":80,"line_end":80,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13487342,"byte_end":13487345,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ The `max_buf_size` argument is the maximum amount of bytes that can be","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13487346,"byte_end":13487420,"line_start":82,"line_end":82,"column_start":1,"column_end":75}},{"value":"/ written to a side before the write returns `Poll::Pending`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13487421,"byte_end":13487484,"line_start":83,"line_end":83,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":10554},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read.rs","byte_start":13494314,"byte_end":13494318,"line_start":34,"line_end":34,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":10557},{"krate":0,"index":10558},{"krate":0,"index":10559}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10492},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_buf.rs","byte_start":13495535,"byte_end":13495542,"line_start":27,"line_end":27,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":10496},{"krate":0,"index":10497},{"krate":0,"index":10498}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10439},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_exact.rs","byte_start":13497747,"byte_end":13497756,"line_start":34,"line_end":34,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":10442},{"krate":0,"index":10443},{"krate":0,"index":10444}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10402},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_int.rs","byte_start":13502771,"byte_end":13502777,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":10404},{"krate":0,"index":10405}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10365},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_int.rs","byte_start":13502793,"byte_end":13502799,"line_start":133,"line_end":133,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":10367},{"krate":0,"index":10368}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10316},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_int.rs","byte_start":13502815,"byte_end":13502822,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":10318},{"krate":0,"index":10319},{"krate":0,"index":10321},{"krate":0,"index":10322}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10267},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_int.rs","byte_start":13502847,"byte_end":13502854,"line_start":136,"line_end":136,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":10269},{"krate":0,"index":10270},{"krate":0,"index":10272},{"krate":0,"index":10273}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10218},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_int.rs","byte_start":13502879,"byte_end":13502886,"line_start":137,"line_end":137,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":10220},{"krate":0,"index":10221},{"krate":0,"index":10223},{"krate":0,"index":10224}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10169},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_int.rs","byte_start":13502911,"byte_end":13502919,"line_start":138,"line_end":138,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":10171},{"krate":0,"index":10172},{"krate":0,"index":10174},{"krate":0,"index":10175}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10120},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_int.rs","byte_start":13502947,"byte_end":13502954,"line_start":140,"line_end":140,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":10122},{"krate":0,"index":10123},{"krate":0,"index":10125},{"krate":0,"index":10126}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10071},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_int.rs","byte_start":13502979,"byte_end":13502986,"line_start":141,"line_end":141,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":10073},{"krate":0,"index":10074},{"krate":0,"index":10076},{"krate":0,"index":10077}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10022},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_int.rs","byte_start":13503011,"byte_end":13503018,"line_start":142,"line_end":142,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":10024},{"krate":0,"index":10025},{"krate":0,"index":10027},{"krate":0,"index":10028}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9973},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_int.rs","byte_start":13503043,"byte_end":13503051,"line_start":143,"line_end":143,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":9975},{"krate":0,"index":9976},{"krate":0,"index":9978},{"krate":0,"index":9979}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9924},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_int.rs","byte_start":13503079,"byte_end":13503086,"line_start":145,"line_end":145,"column_start":9,"column_end":16},"name":"ReadF32","qualname":"::io::util::read_int::ReadF32","value":"ReadF32 {  }","parent":null,"children":[{"krate":0,"index":9926},{"krate":0,"index":9927},{"krate":0,"index":9929},{"krate":0,"index":9930}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9875},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_int.rs","byte_start":13503111,"byte_end":13503118,"line_start":146,"line_end":146,"column_start":9,"column_end":16},"name":"ReadF64","qualname":"::io::util::read_int::ReadF64","value":"ReadF64 {  }","parent":null,"children":[{"krate":0,"index":9877},{"krate":0,"index":9878},{"krate":0,"index":9880},{"krate":0,"index":9881}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9826},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_int.rs","byte_start":13503144,"byte_end":13503153,"line_start":148,"line_end":148,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":9828},{"krate":0,"index":9829},{"krate":0,"index":9831},{"krate":0,"index":9832}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9777},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_int.rs","byte_start":13503181,"byte_end":13503190,"line_start":149,"line_end":149,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":9779},{"krate":0,"index":9780},{"krate":0,"index":9782},{"krate":0,"index":9783}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9728},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_int.rs","byte_start":13503218,"byte_end":13503227,"line_start":150,"line_end":150,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":9730},{"krate":0,"index":9731},{"krate":0,"index":9733},{"krate":0,"index":9734}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9679},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_int.rs","byte_start":13503255,"byte_end":13503265,"line_start":151,"line_end":151,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":9681},{"krate":0,"index":9682},{"krate":0,"index":9684},{"krate":0,"index":9685}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9630},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_int.rs","byte_start":13503296,"byte_end":13503305,"line_start":153,"line_end":153,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":9632},{"krate":0,"index":9633},{"krate":0,"index":9635},{"krate":0,"index":9636}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9581},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_int.rs","byte_start":13503333,"byte_end":13503342,"line_start":154,"line_end":154,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":9583},{"krate":0,"index":9584},{"krate":0,"index":9586},{"krate":0,"index":9587}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9532},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_int.rs","byte_start":13503370,"byte_end":13503379,"line_start":155,"line_end":155,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":9534},{"krate":0,"index":9535},{"krate":0,"index":9537},{"krate":0,"index":9538}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9483},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_int.rs","byte_start":13503407,"byte_end":13503417,"line_start":156,"line_end":156,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":9485},{"krate":0,"index":9486},{"krate":0,"index":9488},{"krate":0,"index":9489}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9434},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_int.rs","byte_start":13503448,"byte_end":13503457,"line_start":158,"line_end":158,"column_start":9,"column_end":18},"name":"ReadF32Le","qualname":"::io::util::read_int::ReadF32Le","value":"ReadF32Le {  }","parent":null,"children":[{"krate":0,"index":9436},{"krate":0,"index":9437},{"krate":0,"index":9439},{"krate":0,"index":9440}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9385},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_int.rs","byte_start":13503485,"byte_end":13503494,"line_start":159,"line_end":159,"column_start":9,"column_end":18},"name":"ReadF64Le","qualname":"::io::util::read_int::ReadF64Le","value":"ReadF64Le {  }","parent":null,"children":[{"krate":0,"index":9387},{"krate":0,"index":9388},{"krate":0,"index":9390},{"krate":0,"index":9391}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9324},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_line.rs","byte_start":13504009,"byte_end":13504017,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":9327},{"krate":0,"index":9328},{"krate":0,"index":9329},{"krate":0,"index":9330},{"krate":0,"index":9331}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9275},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/fill_buf.rs","byte_start":13507918,"byte_end":13507925,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"FillBuf","qualname":"::io::util::fill_buf::FillBuf","value":"FillBuf {  }","parent":null,"children":[{"krate":0,"index":9278},{"krate":0,"index":9279}],"decl_id":null,"docs":" Future for the [`fill_buf`](crate::io::AsyncBufReadExt::fill_buf) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9218},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_to_end.rs","byte_start":13509945,"byte_end":13509954,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":9221},{"krate":0,"index":9222},{"krate":0,"index":9223},{"krate":0,"index":9224}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9157},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_to_string.rs","byte_start":13518225,"byte_end":13518237,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":9160},{"krate":0,"index":9161},{"krate":0,"index":9162},{"krate":0,"index":9163},{"krate":0,"index":9164}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9096},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_until.rs","byte_start":13520629,"byte_end":13520638,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":9099},{"krate":0,"index":9100},{"krate":0,"index":9101},{"krate":0,"index":9102},{"krate":0,"index":9103}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimiter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3782},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/repeat.rs","byte_start":13522980,"byte_end":13522986,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":3783}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":23652,"byte_end":23679,"line_start":142,"line_end":142,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3781},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/repeat.rs","byte_start":13523672,"byte_end":13523678,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":23652,"byte_end":23679,"line_start":142,"line_end":142,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9047},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/shutdown.rs","byte_start":13524717,"byte_end":13524725,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":9050},{"krate":0,"index":9051}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3786},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/sink.rs","byte_start":13525871,"byte_end":13525875,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":3787}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":23652,"byte_end":23679,"line_start":142,"line_end":142,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3788},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/sink.rs","byte_start":13526716,"byte_end":13526720,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":23652,"byte_end":23679,"line_start":142,"line_end":142,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":8999},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13528157,"byte_end":13528162,"line_start":19,"line_end":19,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":9001},{"krate":0,"index":9002},{"krate":0,"index":9003},{"krate":0,"index":9004}],"decl_id":null,"docs":" Splitter for the [`split`](crate::io::AsyncBufReadExt::split) method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3089},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13529023,"byte_end":13529035,"line_start":61,"line_end":61,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"pub async fn next_segment<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13528511,"byte_end":13528554,"line_start":44,"line_end":44,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13528559,"byte_end":13528562,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13528567,"byte_end":13528581,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13528586,"byte_end":13528589,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13528594,"byte_end":13528601,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13528606,"byte_end":13528640,"line_start":49,"line_end":49,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13528645,"byte_end":13528680,"line_start":50,"line_end":50,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13528685,"byte_end":13528688,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13528693,"byte_end":13528776,"line_start":52,"line_end":52,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13528781,"byte_end":13528828,"line_start":53,"line_end":53,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13528833,"byte_end":13528836,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13528841,"byte_end":13528903,"line_start":55,"line_end":55,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13528908,"byte_end":13528954,"line_start":56,"line_end":56,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13528959,"byte_end":13528964,"line_start":57,"line_end":57,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13528969,"byte_end":13528981,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13528986,"byte_end":13528993,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13528998,"byte_end":13529005,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3098},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13530072,"byte_end":13530089,"line_start":89,"line_end":89,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"pub fn poll_next_segment(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next segment in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next segment in the stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13529247,"byte_end":13529292,"line_start":72,"line_end":72,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13529297,"byte_end":13529300,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13529305,"byte_end":13529329,"line_start":74,"line_end":74,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13529334,"byte_end":13529337,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next segment is not yet available.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13529342,"byte_end":13529406,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/  * `Poll::Ready(Ok(Some(segment)))` if the next segment is available.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13529411,"byte_end":13529484,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more segments in this stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13529489,"byte_end":13529565,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13529570,"byte_end":13529642,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/    next segment.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13529647,"byte_end":13529667,"line_start":80,"line_end":80,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13529672,"byte_end":13529675,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13529680,"byte_end":13529752,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when more bytes become","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13529757,"byte_end":13529826,"line_start":83,"line_end":83,"column_start":5,"column_end":74}},{"value":"/ available on the underlying IO resource.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13529831,"byte_end":13529875,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13529880,"byte_end":13529883,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_segment`, only the `Waker`","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13529888,"byte_end":13529960,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/ from the `Context` passed to the most recent call is scheduled to","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13529965,"byte_end":13530034,"line_start":87,"line_end":87,"column_start":5,"column_end":74}},{"value":"/ receive a wakeup.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13530039,"byte_end":13530060,"line_start":88,"line_end":88,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":8959},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13531231,"byte_end":13531235,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":8961},{"krate":0,"index":8962}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3137},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13531825,"byte_end":13531830,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13531522,"byte_end":13531575,"line_start":29,"line_end":29,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13531580,"byte_end":13531626,"line_start":30,"line_end":30,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13531631,"byte_end":13531634,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13531639,"byte_end":13531649,"line_start":32,"line_end":32,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13531654,"byte_end":13531657,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13531662,"byte_end":13531739,"line_start":34,"line_end":34,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13531744,"byte_end":13531813,"line_start":35,"line_end":35,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3138},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13532149,"byte_end":13532158,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13531878,"byte_end":13531949,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13531954,"byte_end":13532028,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13532033,"byte_end":13532108,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13532113,"byte_end":13532137,"line_start":43,"line_end":43,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3139},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13532281,"byte_end":13532288,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13532223,"byte_end":13532269,"line_start":48,"line_end":48,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3140},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13532580,"byte_end":13532587,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13532335,"byte_end":13532389,"line_start":53,"line_end":53,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13532394,"byte_end":13532397,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13532402,"byte_end":13532475,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13532480,"byte_end":13532552,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13532557,"byte_end":13532568,"line_start":57,"line_end":57,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3141},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13532898,"byte_end":13532909,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13532646,"byte_end":13532707,"line_start":62,"line_end":62,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13532712,"byte_end":13532715,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13532720,"byte_end":13532793,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13532798,"byte_end":13532870,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13532875,"byte_end":13532886,"line_start":66,"line_end":66,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3142},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13533055,"byte_end":13533065,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13532989,"byte_end":13533043,"line_start":71,"line_end":71,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":8906},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write.rs","byte_start":13535144,"byte_end":13535149,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":8909},{"krate":0,"index":8910},{"krate":0,"index":8911}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8844},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_vectored.rs","byte_start":13536353,"byte_end":13536366,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"name":"WriteVectored","qualname":"::io::util::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":8848},{"krate":0,"index":8849},{"krate":0,"index":8850}],"decl_id":null,"docs":" A future to write a slice of buffers to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8791},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_all.rs","byte_start":13537479,"byte_end":13537487,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":8794},{"krate":0,"index":8795},{"krate":0,"index":8796}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8729},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_buf.rs","byte_start":13538920,"byte_end":13538928,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":8733},{"krate":0,"index":8734},{"krate":0,"index":8735}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8667},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_all_buf.rs","byte_start":13540242,"byte_end":13540253,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"WriteAllBuf","qualname":"::io::util::write_all_buf::WriteAllBuf","value":"WriteAllBuf {  }","parent":null,"children":[{"krate":0,"index":8671},{"krate":0,"index":8672},{"krate":0,"index":8673}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8626},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_int.rs","byte_start":13545110,"byte_end":13545117,"line_start":125,"line_end":125,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":8628},{"krate":0,"index":8629},{"krate":0,"index":8630}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8585},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_int.rs","byte_start":13545133,"byte_end":13545140,"line_start":126,"line_end":126,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":8587},{"krate":0,"index":8588},{"krate":0,"index":8589}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8536},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_int.rs","byte_start":13545156,"byte_end":13545164,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":8538},{"krate":0,"index":8539},{"krate":0,"index":8541},{"krate":0,"index":8542}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8487},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_int.rs","byte_start":13545189,"byte_end":13545197,"line_start":129,"line_end":129,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":8489},{"krate":0,"index":8490},{"krate":0,"index":8492},{"krate":0,"index":8493}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8438},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_int.rs","byte_start":13545222,"byte_end":13545230,"line_start":130,"line_end":130,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":8440},{"krate":0,"index":8441},{"krate":0,"index":8443},{"krate":0,"index":8444}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8389},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_int.rs","byte_start":13545255,"byte_end":13545264,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":8391},{"krate":0,"index":8392},{"krate":0,"index":8394},{"krate":0,"index":8395}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8340},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_int.rs","byte_start":13545292,"byte_end":13545300,"line_start":133,"line_end":133,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":8342},{"krate":0,"index":8343},{"krate":0,"index":8345},{"krate":0,"index":8346}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8291},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_int.rs","byte_start":13545325,"byte_end":13545333,"line_start":134,"line_end":134,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":8293},{"krate":0,"index":8294},{"krate":0,"index":8296},{"krate":0,"index":8297}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8242},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_int.rs","byte_start":13545358,"byte_end":13545366,"line_start":135,"line_end":135,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":8244},{"krate":0,"index":8245},{"krate":0,"index":8247},{"krate":0,"index":8248}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8193},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_int.rs","byte_start":13545391,"byte_end":13545400,"line_start":136,"line_end":136,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":8195},{"krate":0,"index":8196},{"krate":0,"index":8198},{"krate":0,"index":8199}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8144},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_int.rs","byte_start":13545428,"byte_end":13545436,"line_start":138,"line_end":138,"column_start":9,"column_end":17},"name":"WriteF32","qualname":"::io::util::write_int::WriteF32","value":"WriteF32 {  }","parent":null,"children":[{"krate":0,"index":8146},{"krate":0,"index":8147},{"krate":0,"index":8149},{"krate":0,"index":8150}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8095},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_int.rs","byte_start":13545461,"byte_end":13545469,"line_start":139,"line_end":139,"column_start":9,"column_end":17},"name":"WriteF64","qualname":"::io::util::write_int::WriteF64","value":"WriteF64 {  }","parent":null,"children":[{"krate":0,"index":8097},{"krate":0,"index":8098},{"krate":0,"index":8100},{"krate":0,"index":8101}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8046},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_int.rs","byte_start":13545495,"byte_end":13545505,"line_start":141,"line_end":141,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":8048},{"krate":0,"index":8049},{"krate":0,"index":8051},{"krate":0,"index":8052}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7997},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_int.rs","byte_start":13545533,"byte_end":13545543,"line_start":142,"line_end":142,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":7999},{"krate":0,"index":8000},{"krate":0,"index":8002},{"krate":0,"index":8003}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7948},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_int.rs","byte_start":13545571,"byte_end":13545581,"line_start":143,"line_end":143,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":7950},{"krate":0,"index":7951},{"krate":0,"index":7953},{"krate":0,"index":7954}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7899},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_int.rs","byte_start":13545609,"byte_end":13545620,"line_start":144,"line_end":144,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":7901},{"krate":0,"index":7902},{"krate":0,"index":7904},{"krate":0,"index":7905}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7850},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_int.rs","byte_start":13545651,"byte_end":13545661,"line_start":146,"line_end":146,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":7852},{"krate":0,"index":7853},{"krate":0,"index":7855},{"krate":0,"index":7856}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7801},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_int.rs","byte_start":13545689,"byte_end":13545699,"line_start":147,"line_end":147,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":7803},{"krate":0,"index":7804},{"krate":0,"index":7806},{"krate":0,"index":7807}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7752},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_int.rs","byte_start":13545727,"byte_end":13545737,"line_start":148,"line_end":148,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":7754},{"krate":0,"index":7755},{"krate":0,"index":7757},{"krate":0,"index":7758}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7703},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_int.rs","byte_start":13545765,"byte_end":13545776,"line_start":149,"line_end":149,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":7705},{"krate":0,"index":7706},{"krate":0,"index":7708},{"krate":0,"index":7709}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7654},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_int.rs","byte_start":13545807,"byte_end":13545817,"line_start":151,"line_end":151,"column_start":9,"column_end":19},"name":"WriteF32Le","qualname":"::io::util::write_int::WriteF32Le","value":"WriteF32Le {  }","parent":null,"children":[{"krate":0,"index":7656},{"krate":0,"index":7657},{"krate":0,"index":7659},{"krate":0,"index":7660}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7605},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_int.rs","byte_start":13545845,"byte_end":13545855,"line_start":152,"line_end":152,"column_start":9,"column_end":19},"name":"WriteF64Le","qualname":"::io::util::write_int::WriteF64Le","value":"WriteF64Le {  }","parent":null,"children":[{"krate":0,"index":7607},{"krate":0,"index":7608},{"krate":0,"index":7610},{"krate":0,"index":7611}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":415},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":504}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/mod.rs","byte_start":87283,"byte_end":87301,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/mod.rs","byte_start":87303,"byte_end":87341,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/mod.rs","byte_start":87342,"byte_end":87345,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/mod.rs","byte_start":87346,"byte_end":87429,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/mod.rs","byte_start":87430,"byte_end":87495,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/mod.rs","byte_start":87496,"byte_end":87499,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/mod.rs","byte_start":87500,"byte_end":87518,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/mod.rs","byte_start":87519,"byte_end":87522,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/mod.rs","byte_start":87523,"byte_end":87611,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/mod.rs","byte_start":87612,"byte_end":87681,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/mod.rs","byte_start":87682,"byte_end":87770,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/mod.rs","byte_start":87771,"byte_end":87829,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/mod.rs","byte_start":87830,"byte_end":87893,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/mod.rs","byte_start":87894,"byte_end":87959,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/mod.rs","byte_start":87961,"byte_end":87964,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/mod.rs","byte_start":87965,"byte_end":87997,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/mod.rs","byte_start":87998,"byte_end":88026,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/mod.rs","byte_start":88027,"byte_end":88055,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/mod.rs","byte_start":88056,"byte_end":88090,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/mod.rs","byte_start":88091,"byte_end":88121,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/mod.rs","byte_start":88122,"byte_end":88156,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":442},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":89418,"byte_end":89431,"line_start":19,"line_end":19,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":88830,"byte_end":88907,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":88908,"byte_end":88911,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":88912,"byte_end":88921,"line_start":7,"line_end":7,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":88922,"byte_end":88925,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":88926,"byte_end":89003,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":89004,"byte_end":89007,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":89008,"byte_end":89021,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":89022,"byte_end":89025,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":89026,"byte_end":89103,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":89104,"byte_end":89176,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":89177,"byte_end":89246,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":89247,"byte_end":89250,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":89251,"byte_end":89330,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":89331,"byte_end":89407,"line_start":18,"line_end":18,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":498},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":96688,"byte_end":96705,"line_start":262,"line_end":262,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":499},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":96721,"byte_end":96725,"line_start":263,"line_end":263,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":500},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":96786,"byte_end":96792,"line_start":264,"line_end":264,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":96864,"byte_end":96879,"line_start":266,"line_end":266,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self, Internal) -> Self::Future","parent":{"krate":0,"index":498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":502},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":96990,"byte_end":96998,"line_start":270,"line_end":270,"column_start":16,"column_end":24},"name":"Internal","qualname":"::net::addr::sealed::Internal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":96935,"byte_end":96974,"line_start":269,"line_end":269,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":902},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/mod.rs","byte_start":112787,"byte_end":112793,"line_start":51,"line_end":51,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":901},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/mod.rs","byte_start":112724,"byte_end":112777,"line_start":50,"line_end":50,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":903},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/mod.rs","byte_start":112847,"byte_end":112852,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error: Debug;","parent":{"krate":0,"index":901},"children":[],"decl_id":null,"docs":" Error returned by `park`.\n","sig":null,"attributes":[{"value":"/ Error returned by `park`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/mod.rs","byte_start":112808,"byte_end":112837,"line_start":53,"line_end":53,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":4057},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","parent":null,"children":[{"krate":0,"index":4058},{"krate":0,"index":4081},{"krate":0,"index":5102},{"krate":0,"index":5103},{"krate":0,"index":5104},{"krate":0,"index":5107},{"krate":0,"index":5110},{"krate":0,"index":5143},{"krate":0,"index":5340},{"krate":0,"index":5343},{"krate":0,"index":5534},{"krate":0,"index":5537},{"krate":0,"index":5540},{"krate":0,"index":5636},{"krate":0,"index":5639},{"krate":0,"index":5659},{"krate":0,"index":5692},{"krate":0,"index":5695},{"krate":0,"index":5786},{"krate":0,"index":5787},{"krate":0,"index":5790},{"krate":0,"index":5793},{"krate":0,"index":5796},{"krate":0,"index":5797},{"krate":0,"index":5800},{"krate":0,"index":5803},{"krate":0,"index":5825},{"krate":0,"index":5941},{"krate":0,"index":5944},{"krate":0,"index":6430},{"krate":0,"index":6448},{"krate":0,"index":6451},{"krate":0,"index":6454},{"krate":0,"index":6473},{"krate":0,"index":6477},{"krate":0,"index":6479},{"krate":0,"index":6486},{"krate":0,"index":6457},{"krate":0,"index":6458},{"krate":0,"index":6471}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":27518,"byte_end":27540,"line_start":321,"line_end":321,"column_start":13,"column_end":35}},{"value":"/ The Tokio runtime.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13547506,"byte_end":13547528,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13547529,"byte_end":13547532,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unlike other Rust programs, asynchronous applications require runtime","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13547533,"byte_end":13547606,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ support. In particular, the following runtime services are necessary:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13547607,"byte_end":13547680,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13547681,"byte_end":13547684,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13547685,"byte_end":13547763,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/   dispatches I/O events to tasks that depend on them.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13547764,"byte_end":13547821,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13547822,"byte_end":13547892,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13547893,"byte_end":13547965,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13547966,"byte_end":13547969,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13547970,"byte_end":13548050,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ them to be started, shut down, and configured together. However, often it is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548051,"byte_end":13548131,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ not required to configure a [`Runtime`] manually, and a user may just use the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548132,"byte_end":13548213,"line_start":13,"line_end":13,"column_start":1,"column_end":82}},{"value":"/ [`tokio::main`] attribute macro, which creates a [`Runtime`] under the hood.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548214,"byte_end":13548294,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548295,"byte_end":13548298,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548299,"byte_end":13548310,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548311,"byte_end":13548314,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When no fine tuning is required, the [`tokio::main`] attribute macro can be","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548315,"byte_end":13548394,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ used.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548395,"byte_end":13548404,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548405,"byte_end":13548408,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548409,"byte_end":13548422,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548423,"byte_end":13548455,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548456,"byte_end":13548505,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548506,"byte_end":13548509,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548510,"byte_end":13548528,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548529,"byte_end":13548592,"line_start":26,"line_end":26,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548593,"byte_end":13548659,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548660,"byte_end":13548663,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548664,"byte_end":13548678,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548679,"byte_end":13548738,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548739,"byte_end":13548742,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548743,"byte_end":13548780,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548781,"byte_end":13548821,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548822,"byte_end":13548825,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548826,"byte_end":13548906,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548907,"byte_end":13548929,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548930,"byte_end":13548993,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13548994,"byte_end":13549034,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549035,"byte_end":13549085,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549086,"byte_end":13549121,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549122,"byte_end":13549157,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549158,"byte_end":13549240,"line_start":42,"line_end":42,"column_start":1,"column_end":83}},{"value":"/                         return;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549241,"byte_end":13549276,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549277,"byte_end":13549302,"line_start":44,"line_end":44,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549303,"byte_end":13549325,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549326,"byte_end":13549329,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549330,"byte_end":13549372,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549373,"byte_end":13549445,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549446,"byte_end":13549523,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/                     return;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549524,"byte_end":13549555,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549556,"byte_end":13549577,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549578,"byte_end":13549595,"line_start":52,"line_end":52,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549596,"byte_end":13549611,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549612,"byte_end":13549621,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549622,"byte_end":13549627,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549628,"byte_end":13549635,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549636,"byte_end":13549639,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549640,"byte_end":13549718,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549719,"byte_end":13549797,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549798,"byte_end":13549859,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549860,"byte_end":13549863,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A [`Runtime`] instance can also be used directly.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549864,"byte_end":13549917,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549918,"byte_end":13549921,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549922,"byte_end":13549935,"line_start":64,"line_end":64,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549936,"byte_end":13549968,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13549969,"byte_end":13550018,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550019,"byte_end":13550051,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550052,"byte_end":13550055,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550056,"byte_end":13550113,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/     // Create the runtime","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550114,"byte_end":13550143,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/     let rt  = Runtime::new()?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550144,"byte_end":13550178,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550179,"byte_end":13550182,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/     // Spawn the root task","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550183,"byte_end":13550213,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/     rt.block_on(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550214,"byte_end":13550241,"line_start":74,"line_end":74,"column_start":1,"column_end":28}},{"value":"/         let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550242,"byte_end":13550312,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550313,"byte_end":13550316,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/         loop {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550317,"byte_end":13550335,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550336,"byte_end":13550399,"line_start":78,"line_end":78,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550400,"byte_end":13550403,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550404,"byte_end":13550445,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/                 let mut buf = [0; 1024];","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550446,"byte_end":13550490,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550491,"byte_end":13550494,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550495,"byte_end":13550579,"line_start":83,"line_end":83,"column_start":1,"column_end":85}},{"value":"/                 loop {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550580,"byte_end":13550606,"line_start":84,"line_end":84,"column_start":1,"column_end":27}},{"value":"/                     let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550607,"byte_end":13550674,"line_start":85,"line_end":85,"column_start":1,"column_end":68}},{"value":"/                         // socket closed","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550675,"byte_end":13550719,"line_start":86,"line_end":86,"column_start":1,"column_end":45}},{"value":"/                         Ok(n) if n == 0 => return,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550720,"byte_end":13550774,"line_start":87,"line_end":87,"column_start":1,"column_end":55}},{"value":"/                         Ok(n) => n,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550775,"byte_end":13550814,"line_start":88,"line_end":88,"column_start":1,"column_end":40}},{"value":"/                         Err(e) => {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550815,"byte_end":13550854,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550855,"byte_end":13550941,"line_start":90,"line_end":90,"column_start":1,"column_end":87}},{"value":"/                             return;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550942,"byte_end":13550981,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/                         }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13550982,"byte_end":13551011,"line_start":92,"line_end":92,"column_start":1,"column_end":30}},{"value":"/                     };","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551012,"byte_end":13551038,"line_start":93,"line_end":93,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551039,"byte_end":13551042,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/                     // Write the data back","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551043,"byte_end":13551089,"line_start":95,"line_end":95,"column_start":1,"column_end":47}},{"value":"/                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551090,"byte_end":13551166,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551167,"byte_end":13551248,"line_start":97,"line_end":97,"column_start":1,"column_end":82}},{"value":"/                         return;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551249,"byte_end":13551284,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551285,"byte_end":13551310,"line_start":99,"line_end":99,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551311,"byte_end":13551332,"line_start":100,"line_end":100,"column_start":1,"column_end":22}},{"value":"/             });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551333,"byte_end":13551352,"line_start":101,"line_end":101,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551353,"byte_end":13551366,"line_start":102,"line_end":102,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551367,"byte_end":13551377,"line_start":103,"line_end":103,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551378,"byte_end":13551383,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551384,"byte_end":13551391,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551392,"byte_end":13551395,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configurations","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551396,"byte_end":13551425,"line_start":107,"line_end":107,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551426,"byte_end":13551429,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551430,"byte_end":13551508,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551509,"byte_end":13551585,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ used to select which scheduler to use.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551586,"byte_end":13551628,"line_start":111,"line_end":111,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551629,"byte_end":13551632,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ #### Multi-Thread Scheduler","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551633,"byte_end":13551664,"line_start":113,"line_end":113,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551665,"byte_end":13551668,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ The multi-thread scheduler executes futures on a _thread pool_, using a","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551669,"byte_end":13551744,"line_start":115,"line_end":115,"column_start":1,"column_end":76}},{"value":"/ work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551745,"byte_end":13551823,"line_start":116,"line_end":116,"column_start":1,"column_end":79}},{"value":"/ CPU core available on the system. This tends to be the ideal configuration","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551824,"byte_end":13551902,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/ for most applications. The multi-thread scheduler requires the `rt-multi-thread`","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551903,"byte_end":13551987,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/ feature flag, and is selected by default:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13551988,"byte_end":13552033,"line_start":119,"line_end":119,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552034,"byte_end":13552041,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552042,"byte_end":13552065,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552066,"byte_end":13552069,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552070,"byte_end":13552129,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/ let threaded_rt = runtime::Runtime::new()?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552130,"byte_end":13552177,"line_start":124,"line_end":124,"column_start":1,"column_end":48}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552178,"byte_end":13552192,"line_start":125,"line_end":125,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552193,"byte_end":13552200,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552201,"byte_end":13552204,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ Most applications should use the multi-thread scheduler, except in some","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552205,"byte_end":13552280,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ niche use-cases, such as when running only a single thread is required.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552281,"byte_end":13552356,"line_start":129,"line_end":129,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552357,"byte_end":13552360,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ #### Current-Thread Scheduler","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552361,"byte_end":13552394,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552395,"byte_end":13552398,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The current-thread scheduler provides a _single-threaded_ future executor.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552399,"byte_end":13552477,"line_start":133,"line_end":133,"column_start":1,"column_end":79}},{"value":"/ All tasks will be created and executed on the current thread. This requires","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552478,"byte_end":13552557,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/ the `rt` feature flag.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552558,"byte_end":13552584,"line_start":135,"line_end":135,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552585,"byte_end":13552592,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552593,"byte_end":13552616,"line_start":137,"line_end":137,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552617,"byte_end":13552620,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552621,"byte_end":13552680,"line_start":139,"line_end":139,"column_start":1,"column_end":60}},{"value":"/ let basic_rt = runtime::Builder::new_current_thread()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552681,"byte_end":13552738,"line_start":140,"line_end":140,"column_start":1,"column_end":58}},{"value":"/     .build()?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552739,"byte_end":13552757,"line_start":141,"line_end":141,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552758,"byte_end":13552772,"line_start":142,"line_end":142,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552773,"byte_end":13552780,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552781,"byte_end":13552784,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #### Resource drivers","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552785,"byte_end":13552810,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552811,"byte_end":13552814,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552815,"byte_end":13552889,"line_start":147,"line_end":147,"column_start":1,"column_end":75}},{"value":"/ default. In this case, attempting to use networking types or time types will","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552890,"byte_end":13552970,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/ fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13552971,"byte_end":13553050,"line_start":149,"line_end":149,"column_start":1,"column_end":80}},{"value":"/ This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13553051,"byte_end":13553130,"line_start":150,"line_end":150,"column_start":1,"column_end":80}},{"value":"/ shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13553131,"byte_end":13553200,"line_start":151,"line_end":151,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13553201,"byte_end":13553204,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ## Lifetime of spawned threads","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13553205,"byte_end":13553239,"line_start":153,"line_end":153,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13553240,"byte_end":13553243,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13553244,"byte_end":13553323,"line_start":155,"line_end":155,"column_start":1,"column_end":80}},{"value":"/ multi-thread scheduler spawns threads to schedule tasks and for `spawn_blocking`","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13553324,"byte_end":13553408,"line_start":156,"line_end":156,"column_start":1,"column_end":85}},{"value":"/ calls.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13553409,"byte_end":13553419,"line_start":157,"line_end":157,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13553420,"byte_end":13553423,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13553424,"byte_end":13553502,"line_start":159,"line_end":159,"column_start":1,"column_end":79}},{"value":"/ idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13553503,"byte_end":13553582,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ Any tasks that have not yet completed will be dropped.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13553583,"byte_end":13553641,"line_start":161,"line_end":161,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13553642,"byte_end":13553645,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13553646,"byte_end":13553670,"line_start":163,"line_end":163,"column_start":1,"column_end":25}},{"value":"/ [`Runtime`]: Runtime","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13553671,"byte_end":13553695,"line_start":164,"line_end":164,"column_start":1,"column_end":25}},{"value":"/ [`tokio::spawn`]: crate::spawn","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13553696,"byte_end":13553730,"line_start":165,"line_end":165,"column_start":1,"column_end":35}},{"value":"/ [`tokio::main`]: ../attr.main.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13553731,"byte_end":13553769,"line_start":166,"line_end":166,"column_start":1,"column_end":39}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13553770,"byte_end":13553816,"line_start":167,"line_end":167,"column_start":1,"column_end":47}},{"value":"/ [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13553817,"byte_end":13553867,"line_start":168,"line_end":168,"column_start":1,"column_end":51}},{"value":"/ [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13553868,"byte_end":13553942,"line_start":169,"line_end":169,"column_start":1,"column_end":75}},{"value":"/ [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13553943,"byte_end":13554023,"line_start":170,"line_end":170,"column_start":1,"column_end":81}},{"value":"/ [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13554024,"byte_end":13554086,"line_start":171,"line_end":171,"column_start":1,"column_end":63}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13554087,"byte_end":13554153,"line_start":172,"line_end":172,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13554154,"byte_end":13554218,"line_start":173,"line_end":173,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":4979},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13600744,"byte_end":13600753,"line_start":9,"line_end":9,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":4980},{"krate":0,"index":4981}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":27518,"byte_end":27540,"line_start":321,"line_end":321,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4223},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13601317,"byte_end":13601329,"line_start":36,"line_end":36,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled.\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13601236,"byte_end":13601305,"line_start":35,"line_end":35,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":4224},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13601784,"byte_end":13601792,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking.","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13601404,"byte_end":13601467,"line_start":40,"line_end":40,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13601472,"byte_end":13601475,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13601480,"byte_end":13601494,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13601499,"byte_end":13601502,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13601507,"byte_end":13601514,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13601519,"byte_end":13601538,"line_start":45,"line_end":45,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13601543,"byte_end":13601546,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13601551,"byte_end":13601569,"line_start":47,"line_end":47,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13601574,"byte_end":13601595,"line_start":48,"line_end":48,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13601600,"byte_end":13601638,"line_start":49,"line_end":49,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13601643,"byte_end":13601670,"line_start":50,"line_end":50,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13601675,"byte_end":13601705,"line_start":51,"line_end":51,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13601710,"byte_end":13601713,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13601718,"byte_end":13601750,"line_start":53,"line_end":53,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13601755,"byte_end":13601760,"line_start":54,"line_end":54,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13601765,"byte_end":13601772,"line_start":55,"line_end":55,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4225},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602647,"byte_end":13602657,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<dyn Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13601866,"byte_end":13601945,"line_start":60,"line_end":60,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13601950,"byte_end":13601953,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13601958,"byte_end":13601970,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13601975,"byte_end":13601978,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13601983,"byte_end":13602057,"line_start":64,"line_end":64,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602062,"byte_end":13602137,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602142,"byte_end":13602200,"line_start":66,"line_end":66,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602205,"byte_end":13602208,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602213,"byte_end":13602227,"line_start":68,"line_end":68,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602232,"byte_end":13602235,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602240,"byte_end":13602259,"line_start":70,"line_end":70,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602264,"byte_end":13602283,"line_start":71,"line_end":71,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602288,"byte_end":13602291,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602296,"byte_end":13602314,"line_start":73,"line_end":73,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602319,"byte_end":13602340,"line_start":74,"line_end":74,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602345,"byte_end":13602383,"line_start":75,"line_end":75,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602388,"byte_end":13602415,"line_start":76,"line_end":76,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602420,"byte_end":13602450,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602455,"byte_end":13602458,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602463,"byte_end":13602490,"line_start":79,"line_end":79,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602495,"byte_end":13602543,"line_start":80,"line_end":80,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602548,"byte_end":13602599,"line_start":81,"line_end":81,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602604,"byte_end":13602613,"line_start":82,"line_end":82,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602618,"byte_end":13602623,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602628,"byte_end":13602635,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4226},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13603422,"byte_end":13603436,"line_start":111,"line_end":111,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self)\n-> Result<Box<dyn Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602798,"byte_end":13602867,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602872,"byte_end":13602944,"line_start":91,"line_end":91,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602949,"byte_end":13602962,"line_start":92,"line_end":92,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602967,"byte_end":13602970,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602975,"byte_end":13602989,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13602994,"byte_end":13602997,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13603002,"byte_end":13603021,"line_start":96,"line_end":96,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13603026,"byte_end":13603045,"line_start":97,"line_end":97,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13603050,"byte_end":13603053,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13603058,"byte_end":13603076,"line_start":99,"line_end":99,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13603081,"byte_end":13603102,"line_start":100,"line_end":100,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13603107,"byte_end":13603145,"line_start":101,"line_end":101,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13603150,"byte_end":13603177,"line_start":102,"line_end":102,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13603182,"byte_end":13603212,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13603217,"byte_end":13603220,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13603225,"byte_end":13603275,"line_start":105,"line_end":105,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13603280,"byte_end":13603328,"line_start":106,"line_end":106,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13603333,"byte_end":13603374,"line_start":107,"line_end":107,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13603379,"byte_end":13603388,"line_start":108,"line_end":108,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13603393,"byte_end":13603398,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13603403,"byte_end":13603410,"line_start":110,"line_end":110,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5040},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13627165,"byte_end":13627175,"line_start":145,"line_end":145,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":5042},{"krate":0,"index":5043},{"krate":0,"index":5044}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":27518,"byte_end":27540,"line_start":321,"line_end":321,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4420},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628660,"byte_end":13628665,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"abort","qualname":"<JoinHandle<T>>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the task associated with the handle.","sig":null,"attributes":[{"value":"/ Abort the task associated with the handle.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13627645,"byte_end":13627691,"line_start":167,"line_end":167,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13627696,"byte_end":13627699,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Awaiting a cancelled task might complete as usual if the task was","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13627704,"byte_end":13627773,"line_start":169,"line_end":169,"column_start":5,"column_end":74}},{"value":"/ already completed at the time it was cancelled, but most likely it","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13627778,"byte_end":13627848,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ will fail with a [cancelled] `JoinError`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13627853,"byte_end":13627898,"line_start":171,"line_end":171,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13627903,"byte_end":13627906,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13627911,"byte_end":13627922,"line_start":173,"line_end":173,"column_start":5,"column_end":16}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13627927,"byte_end":13627947,"line_start":174,"line_end":174,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13627952,"byte_end":13627955,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13627960,"byte_end":13627978,"line_start":176,"line_end":176,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13627983,"byte_end":13628004,"line_start":177,"line_end":177,"column_start":5,"column_end":26}},{"value":"/    let mut handles = Vec::new();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628009,"byte_end":13628045,"line_start":178,"line_end":178,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628050,"byte_end":13628053,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/    handles.push(tokio::spawn(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628058,"byte_end":13628098,"line_start":180,"line_end":180,"column_start":5,"column_end":45}},{"value":"/       time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628103,"byte_end":13628162,"line_start":181,"line_end":181,"column_start":5,"column_end":64}},{"value":"/       true","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628167,"byte_end":13628181,"line_start":182,"line_end":182,"column_start":5,"column_end":19}},{"value":"/    }));","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628186,"byte_end":13628197,"line_start":183,"line_end":183,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628202,"byte_end":13628205,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/    handles.push(tokio::spawn(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628210,"byte_end":13628250,"line_start":185,"line_end":185,"column_start":5,"column_end":45}},{"value":"/       time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628255,"byte_end":13628314,"line_start":186,"line_end":186,"column_start":5,"column_end":64}},{"value":"/       false","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628319,"byte_end":13628334,"line_start":187,"line_end":187,"column_start":5,"column_end":20}},{"value":"/    }));","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628339,"byte_end":13628350,"line_start":188,"line_end":188,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628355,"byte_end":13628358,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/    for handle in &handles {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628363,"byte_end":13628394,"line_start":190,"line_end":190,"column_start":5,"column_end":36}},{"value":"/        handle.abort();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628399,"byte_end":13628425,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/    }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628430,"byte_end":13628438,"line_start":192,"line_end":192,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628443,"byte_end":13628446,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/    for handle in handles {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628451,"byte_end":13628481,"line_start":194,"line_end":194,"column_start":5,"column_end":35}},{"value":"/        assert!(handle.await.unwrap_err().is_cancelled());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628486,"byte_end":13628547,"line_start":195,"line_end":195,"column_start":5,"column_end":66}},{"value":"/    }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628552,"byte_end":13628560,"line_start":196,"line_end":196,"column_start":5,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628565,"byte_end":13628570,"line_start":197,"line_end":197,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628575,"byte_end":13628582,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ [cancelled]: method@super::error::JoinError::is_cancelled","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628587,"byte_end":13628648,"line_start":199,"line_end":199,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4421},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629784,"byte_end":13629795,"line_start":234,"line_end":234,"column_start":12,"column_end":23},"name":"is_finished","qualname":"<JoinHandle<T>>::is_finished","value":"pub fn is_finished(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the task associated with this `JoinHandle` has finished.","sig":null,"attributes":[{"value":"/ Checks if the task associated with this `JoinHandle` has finished.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628766,"byte_end":13628836,"line_start":206,"line_end":206,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628841,"byte_end":13628844,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Please note that this method can return `false` even if [`abort`] has been","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628849,"byte_end":13628927,"line_start":208,"line_end":208,"column_start":5,"column_end":83}},{"value":"/ called on the task. This is because the cancellation process may take","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13628932,"byte_end":13629005,"line_start":209,"line_end":209,"column_start":5,"column_end":78}},{"value":"/ some time, and this method does not return `true` until it has","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629010,"byte_end":13629076,"line_start":210,"line_end":210,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629081,"byte_end":13629095,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629100,"byte_end":13629103,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629108,"byte_end":13629119,"line_start":213,"line_end":213,"column_start":5,"column_end":16}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629124,"byte_end":13629144,"line_start":214,"line_end":214,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629149,"byte_end":13629152,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629157,"byte_end":13629204,"line_start":216,"line_end":216,"column_start":5,"column_end":52}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629209,"byte_end":13629232,"line_start":217,"line_end":217,"column_start":5,"column_end":28}},{"value":"/ # time::pause();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629237,"byte_end":13629257,"line_start":218,"line_end":218,"column_start":5,"column_end":25}},{"value":"/ let handle1 = tokio::spawn(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629262,"byte_end":13629300,"line_start":219,"line_end":219,"column_start":5,"column_end":43}},{"value":"/     // do some stuff here","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629305,"byte_end":13629334,"line_start":220,"line_end":220,"column_start":5,"column_end":34}},{"value":"/ });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629339,"byte_end":13629346,"line_start":221,"line_end":221,"column_start":5,"column_end":12}},{"value":"/ let handle2 = tokio::spawn(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629351,"byte_end":13629389,"line_start":222,"line_end":222,"column_start":5,"column_end":43}},{"value":"/     // do some other stuff here","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629394,"byte_end":13629429,"line_start":223,"line_end":223,"column_start":5,"column_end":40}},{"value":"/     time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629434,"byte_end":13629491,"line_start":224,"line_end":224,"column_start":5,"column_end":62}},{"value":"/ });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629496,"byte_end":13629503,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ // Wait for the task to finish","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629508,"byte_end":13629542,"line_start":226,"line_end":226,"column_start":5,"column_end":39}},{"value":"/ handle2.abort();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629547,"byte_end":13629567,"line_start":227,"line_end":227,"column_start":5,"column_end":25}},{"value":"/ time::sleep(time::Duration::from_secs(1)).await;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629572,"byte_end":13629624,"line_start":228,"line_end":228,"column_start":5,"column_end":57}},{"value":"/ assert!(handle1.is_finished());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629629,"byte_end":13629664,"line_start":229,"line_end":229,"column_start":5,"column_end":40}},{"value":"/ assert!(handle2.is_finished());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629669,"byte_end":13629704,"line_start":230,"line_end":230,"column_start":5,"column_end":40}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629709,"byte_end":13629716,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629721,"byte_end":13629728,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/ [`abort`]: method@JoinHandle::abort","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13629733,"byte_end":13629772,"line_start":233,"line_end":233,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":5569},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715723,"byte_end":13715730,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":5570},{"krate":0,"index":5571},{"krate":0,"index":5572},{"krate":0,"index":5573},{"krate":0,"index":5574},{"krate":0,"index":5575},{"krate":0,"index":5576},{"krate":0,"index":5577},{"krate":0,"index":5578},{"krate":0,"index":5579},{"krate":0,"index":5580},{"krate":0,"index":5581},{"krate":0,"index":5582},{"krate":0,"index":5583},{"krate":0,"index":5584}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13714767,"byte_end":13714825,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13714826,"byte_end":13714829,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13714830,"byte_end":13714902,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13714903,"byte_end":13714951,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13714952,"byte_end":13714955,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new_multi_thread`]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13714956,"byte_end":13715033,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ or [`Builder::new_current_thread`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715034,"byte_end":13715073,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715074,"byte_end":13715077,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715078,"byte_end":13715155,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715156,"byte_end":13715169,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715170,"byte_end":13715173,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715174,"byte_end":13715207,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new_multi_thread`]: method@Self::new_multi_thread","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715208,"byte_end":13715272,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/ [`Builder::new_current_thread`]: method@Self::new_current_thread","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715273,"byte_end":13715341,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715342,"byte_end":13715345,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715346,"byte_end":13715360,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715361,"byte_end":13715364,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715365,"byte_end":13715372,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715373,"byte_end":13715405,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715406,"byte_end":13715409,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715410,"byte_end":13715425,"line_start":28,"line_end":28,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715426,"byte_end":13715450,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new_multi_thread()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715451,"byte_end":13715500,"line_start":30,"line_end":30,"column_start":1,"column_end":50}},{"value":"/         .worker_threads(4)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715501,"byte_end":13715531,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715532,"byte_end":13715574,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715575,"byte_end":13715622,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715623,"byte_end":13715643,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715644,"byte_end":13715666,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715667,"byte_end":13715670,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715671,"byte_end":13715697,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715698,"byte_end":13715703,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13715704,"byte_end":13715711,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5592},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13717679,"byte_end":13717697,"line_start":106,"line_end":106,"column_start":12,"column_end":30},"name":"new_current_thread","qualname":"<Builder>::new_current_thread","value":"pub fn new_current_thread() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new builder with the current thread scheduler selected.","sig":null,"attributes":[{"value":"/ Returns a new builder with the current thread scheduler selected.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13717364,"byte_end":13717433,"line_start":98,"line_end":98,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13717438,"byte_end":13717441,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13717446,"byte_end":13717507,"line_start":100,"line_end":100,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13717512,"byte_end":13717515,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ To spawn non-`Send` tasks on the resulting runtime, combine it with a","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13717520,"byte_end":13717593,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/ [`LocalSet`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13717598,"byte_end":13717615,"line_start":103,"line_end":103,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13717620,"byte_end":13717623,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ [`LocalSet`]: crate::task::LocalSet","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13717628,"byte_end":13717667,"line_start":105,"line_end":105,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5594},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13718262,"byte_end":13718278,"line_start":121,"line_end":121,"column_start":12,"column_end":28},"name":"new_multi_thread","qualname":"<Builder>::new_multi_thread","value":"pub fn new_multi_thread() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new builder with the multi thread scheduler selected.","sig":null,"attributes":[{"value":"/ Returns a new builder with the multi thread scheduler selected.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13718006,"byte_end":13718073,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13718078,"byte_end":13718081,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13718086,"byte_end":13718147,"line_start":118,"line_end":118,"column_start":5,"column_end":66}},{"value":"cfg(feature = \"rt-multi-thread\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13718152,"byte_end":13718187,"line_start":119,"line_end":119,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5597},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720201,"byte_end":13720211,"line_start":185,"line_end":185,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13719708,"byte_end":13719746,"line_start":169,"line_end":169,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13719751,"byte_end":13719754,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13719759,"byte_end":13719830,"line_start":171,"line_end":171,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13719835,"byte_end":13719911,"line_start":172,"line_end":172,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13719916,"byte_end":13719970,"line_start":173,"line_end":173,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13719975,"byte_end":13719978,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13719983,"byte_end":13719997,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720002,"byte_end":13720005,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720010,"byte_end":13720017,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720022,"byte_end":13720045,"line_start":178,"line_end":178,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720050,"byte_end":13720053,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720058,"byte_end":13720107,"line_start":180,"line_end":180,"column_start":5,"column_end":54}},{"value":"/     .enable_all()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720112,"byte_end":13720133,"line_start":181,"line_end":181,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720138,"byte_end":13720154,"line_start":182,"line_end":182,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720159,"byte_end":13720177,"line_start":183,"line_end":183,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720182,"byte_end":13720189,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5598},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721888,"byte_end":13721902,"line_start":243,"line_end":243,"column_start":12,"column_end":26},"name":"worker_threads","qualname":"<Builder>::worker_threads","value":"pub fn worker_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of worker threads the `Runtime` will use.","sig":null,"attributes":[{"value":"/ Sets the number of worker threads the `Runtime` will use.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720439,"byte_end":13720500,"line_start":194,"line_end":194,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720505,"byte_end":13720508,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This can be any number above 0 though it is advised to keep this value","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720513,"byte_end":13720587,"line_start":196,"line_end":196,"column_start":5,"column_end":79}},{"value":"/ on the smaller side.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720592,"byte_end":13720616,"line_start":197,"line_end":197,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720621,"byte_end":13720624,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Default","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720629,"byte_end":13720642,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720647,"byte_end":13720650,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720655,"byte_end":13720724,"line_start":201,"line_end":201,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720729,"byte_end":13720732,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720737,"byte_end":13720748,"line_start":203,"line_end":203,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720753,"byte_end":13720756,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ When using the `current_thread` runtime this method will panic, since","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720761,"byte_end":13720834,"line_start":205,"line_end":205,"column_start":5,"column_end":78}},{"value":"/ those variants do not allow setting worker thread counts.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720839,"byte_end":13720900,"line_start":206,"line_end":206,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720905,"byte_end":13720908,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720913,"byte_end":13720916,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720921,"byte_end":13720935,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720940,"byte_end":13720943,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ## Multi threaded runtime with 4 threads","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720948,"byte_end":13720992,"line_start":211,"line_end":211,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13720997,"byte_end":13721000,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721005,"byte_end":13721012,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721017,"byte_end":13721040,"line_start":214,"line_end":214,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721045,"byte_end":13721048,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ // This will spawn a work-stealing runtime with 4 worker threads.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721053,"byte_end":13721122,"line_start":216,"line_end":216,"column_start":5,"column_end":74}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721127,"byte_end":13721176,"line_start":217,"line_end":217,"column_start":5,"column_end":54}},{"value":"/     .worker_threads(4)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721181,"byte_end":13721207,"line_start":218,"line_end":218,"column_start":5,"column_end":31}},{"value":"/     .build()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721212,"byte_end":13721228,"line_start":219,"line_end":219,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721233,"byte_end":13721251,"line_start":220,"line_end":220,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721256,"byte_end":13721259,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ rt.spawn(async move {});","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721264,"byte_end":13721292,"line_start":222,"line_end":222,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721297,"byte_end":13721304,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721309,"byte_end":13721312,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ## Current thread runtime (will only run on the current thread via `Runtime::block_on`)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721317,"byte_end":13721408,"line_start":225,"line_end":225,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721413,"byte_end":13721416,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721421,"byte_end":13721428,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721433,"byte_end":13721456,"line_start":228,"line_end":228,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721461,"byte_end":13721464,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ // Create a runtime that _must_ be driven from a call","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721469,"byte_end":13721526,"line_start":230,"line_end":230,"column_start":5,"column_end":62}},{"value":"/ // to `Runtime::block_on`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721531,"byte_end":13721561,"line_start":231,"line_end":231,"column_start":5,"column_end":35}},{"value":"/ let rt = runtime::Builder::new_current_thread()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721566,"byte_end":13721617,"line_start":232,"line_end":232,"column_start":5,"column_end":56}},{"value":"/     .build()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721622,"byte_end":13721638,"line_start":233,"line_end":233,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721643,"byte_end":13721661,"line_start":234,"line_end":234,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721666,"byte_end":13721669,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ // This will run the runtime and future on the current thread","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721674,"byte_end":13721739,"line_start":236,"line_end":236,"column_start":5,"column_end":70}},{"value":"/ rt.block_on(async move {});","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721744,"byte_end":13721775,"line_start":237,"line_end":237,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721780,"byte_end":13721787,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721792,"byte_end":13721795,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721800,"byte_end":13721811,"line_start":240,"line_end":240,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721816,"byte_end":13721819,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This will panic if `val` is not larger than `0`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13721824,"byte_end":13721876,"line_start":242,"line_end":242,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5599},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13723027,"byte_end":13723047,"line_start":271,"line_end":271,"column_start":12,"column_end":32},"name":"max_blocking_threads","qualname":"<Builder>::max_blocking_threads","value":"pub fn max_blocking_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the limit for additional threads spawned by the Runtime.","sig":null,"attributes":[{"value":"/ Specifies the limit for additional threads spawned by the Runtime.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13722069,"byte_end":13722139,"line_start":249,"line_end":249,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13722144,"byte_end":13722147,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ These threads are used for blocking operations like tasks spawned","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13722152,"byte_end":13722221,"line_start":251,"line_end":251,"column_start":5,"column_end":74}},{"value":"/ through [`spawn_blocking`]. Unlike the [`worker_threads`], they are not","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13722226,"byte_end":13722301,"line_start":252,"line_end":252,"column_start":5,"column_end":80}},{"value":"/ always active and will exit if left idle for too long. You can change","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13722306,"byte_end":13722379,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ this timeout duration with [`thread_keep_alive`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13722384,"byte_end":13722437,"line_start":254,"line_end":254,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13722442,"byte_end":13722445,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13722450,"byte_end":13722479,"line_start":256,"line_end":256,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13722484,"byte_end":13722487,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13722492,"byte_end":13722503,"line_start":258,"line_end":258,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13722508,"byte_end":13722511,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This will panic if `val` is not larger than `0`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13722516,"byte_end":13722568,"line_start":260,"line_end":260,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13722573,"byte_end":13722576,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Upgrading from 0.x","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13722581,"byte_end":13722605,"line_start":262,"line_end":262,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13722610,"byte_end":13722613,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ In old versions `max_threads` limited both blocking and worker threads, but the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13722618,"byte_end":13722701,"line_start":264,"line_end":264,"column_start":5,"column_end":88}},{"value":"/ current `max_blocking_threads` does not include async worker threads in the count.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13722706,"byte_end":13722792,"line_start":265,"line_end":265,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13722797,"byte_end":13722800,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13722805,"byte_end":13722859,"line_start":267,"line_end":267,"column_start":5,"column_end":59}},{"value":"/ [`worker_threads`]: Self::worker_threads","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13722864,"byte_end":13722908,"line_start":268,"line_end":268,"column_start":5,"column_end":49}},{"value":"/ [`thread_keep_alive`]: Self::thread_keep_alive","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13722913,"byte_end":13722963,"line_start":269,"line_end":269,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5600},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13723603,"byte_end":13723614,"line_start":292,"line_end":292,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\n                                                    impl Into<String>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13723220,"byte_end":13723284,"line_start":277,"line_end":277,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13723289,"byte_end":13723292,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13723297,"byte_end":13723344,"line_start":279,"line_end":279,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13723349,"byte_end":13723352,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13723357,"byte_end":13723371,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13723376,"byte_end":13723379,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13723384,"byte_end":13723391,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13723396,"byte_end":13723421,"line_start":284,"line_end":284,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13723426,"byte_end":13723429,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13723434,"byte_end":13723455,"line_start":286,"line_end":286,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13723460,"byte_end":13723509,"line_start":287,"line_end":287,"column_start":5,"column_end":54}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13723514,"byte_end":13723545,"line_start":288,"line_end":288,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13723550,"byte_end":13723567,"line_start":289,"line_end":289,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13723572,"byte_end":13723579,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13723584,"byte_end":13723591,"line_start":291,"line_end":291,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5603},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13724455,"byte_end":13724469,"line_start":317,"line_end":317,"column_start":12,"column_end":26},"name":"thread_name_fn","qualname":"<Builder>::thread_name_fn","value":"pub fn thread_name_fn<F>(&mut Self, F) -> &mut Self where F: Fn() -> String +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a function used to generate the name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets a function used to generate the name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13723788,"byte_end":13723884,"line_start":298,"line_end":298,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13723889,"byte_end":13723892,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ The default name fn is `|| \"tokio-runtime-worker\".into()`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13723897,"byte_end":13723959,"line_start":300,"line_end":300,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13723964,"byte_end":13723967,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13723972,"byte_end":13723986,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13723991,"byte_end":13723994,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13723999,"byte_end":13724006,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13724011,"byte_end":13724036,"line_start":305,"line_end":305,"column_start":5,"column_end":30}},{"value":"/ # use std::sync::atomic::{AtomicUsize, Ordering};","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13724041,"byte_end":13724094,"line_start":306,"line_end":306,"column_start":5,"column_end":58}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13724099,"byte_end":13724120,"line_start":307,"line_end":307,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13724125,"byte_end":13724174,"line_start":308,"line_end":308,"column_start":5,"column_end":54}},{"value":"/     .thread_name_fn(|| {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13724179,"byte_end":13724207,"line_start":309,"line_end":309,"column_start":5,"column_end":33}},{"value":"/        static ATOMIC_ID: AtomicUsize = AtomicUsize::new(0);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13724212,"byte_end":13724275,"line_start":310,"line_end":310,"column_start":5,"column_end":68}},{"value":"/        let id = ATOMIC_ID.fetch_add(1, Ordering::SeqCst);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13724280,"byte_end":13724341,"line_start":311,"line_end":311,"column_start":5,"column_end":66}},{"value":"/        format!(\"my-pool-{}\", id)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13724346,"byte_end":13724382,"line_start":312,"line_end":312,"column_start":5,"column_end":41}},{"value":"/     })","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13724387,"byte_end":13724397,"line_start":313,"line_end":313,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13724402,"byte_end":13724419,"line_start":314,"line_end":314,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13724424,"byte_end":13724431,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13724436,"byte_end":13724443,"line_start":316,"line_end":316,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5605},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725234,"byte_end":13725251,"line_start":344,"line_end":344,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13724645,"byte_end":13724699,"line_start":325,"line_end":325,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13724704,"byte_end":13724707,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13724712,"byte_end":13724784,"line_start":327,"line_end":327,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13724789,"byte_end":13724822,"line_start":328,"line_end":328,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13724827,"byte_end":13724830,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13724835,"byte_end":13724903,"line_start":330,"line_end":330,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13724908,"byte_end":13724969,"line_start":331,"line_end":331,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13724974,"byte_end":13724977,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13724982,"byte_end":13724996,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725001,"byte_end":13725004,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725009,"byte_end":13725016,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725021,"byte_end":13725046,"line_start":336,"line_end":336,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725051,"byte_end":13725054,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725059,"byte_end":13725080,"line_start":338,"line_end":338,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725085,"byte_end":13725134,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725139,"byte_end":13725176,"line_start":340,"line_end":340,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725181,"byte_end":13725198,"line_start":341,"line_end":341,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725203,"byte_end":13725210,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725215,"byte_end":13725222,"line_start":343,"line_end":343,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5606},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725863,"byte_end":13725878,"line_start":367,"line_end":367,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725358,"byte_end":13725433,"line_start":349,"line_end":349,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725438,"byte_end":13725453,"line_start":350,"line_end":350,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725458,"byte_end":13725461,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725466,"byte_end":13725528,"line_start":352,"line_end":352,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725533,"byte_end":13725536,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725541,"byte_end":13725555,"line_start":354,"line_end":354,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725560,"byte_end":13725563,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725568,"byte_end":13725575,"line_start":356,"line_end":356,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725580,"byte_end":13725605,"line_start":357,"line_end":357,"column_start":5,"column_end":30}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725610,"byte_end":13725631,"line_start":358,"line_end":358,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725636,"byte_end":13725690,"line_start":359,"line_end":359,"column_start":5,"column_end":59}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725695,"byte_end":13725724,"line_start":360,"line_end":360,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725729,"byte_end":13725768,"line_start":361,"line_end":361,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725773,"byte_end":13725783,"line_start":362,"line_end":362,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725788,"byte_end":13725805,"line_start":363,"line_end":363,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725810,"byte_end":13725817,"line_start":364,"line_end":364,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725822,"byte_end":13725829,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13725834,"byte_end":13725851,"line_start":366,"line_end":366,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5608},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13726511,"byte_end":13726525,"line_start":392,"line_end":392,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13726050,"byte_end":13726101,"line_start":375,"line_end":375,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13726106,"byte_end":13726109,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13726114,"byte_end":13726176,"line_start":377,"line_end":377,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13726181,"byte_end":13726184,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13726189,"byte_end":13726203,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13726208,"byte_end":13726211,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13726216,"byte_end":13726223,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13726228,"byte_end":13726253,"line_start":382,"line_end":382,"column_start":5,"column_end":30}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13726258,"byte_end":13726279,"line_start":383,"line_end":383,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13726284,"byte_end":13726338,"line_start":384,"line_end":384,"column_start":5,"column_end":59}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13726343,"byte_end":13726371,"line_start":385,"line_end":385,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13726376,"byte_end":13726416,"line_start":386,"line_end":386,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13726421,"byte_end":13726431,"line_start":387,"line_end":387,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13726436,"byte_end":13726453,"line_start":388,"line_end":388,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13726458,"byte_end":13726465,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13726470,"byte_end":13726477,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13726482,"byte_end":13726499,"line_start":391,"line_end":391,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5610},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13729120,"byte_end":13729134,"line_start":470,"line_end":470,"column_start":12,"column_end":26},"name":"on_thread_park","qualname":"<Builder>::on_thread_park","value":"pub fn on_thread_park<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` just before a thread is parked (goes idle).\n `f` is called within the Tokio context, so functions like [`tokio::spawn`](crate::spawn)\n can be called, and may result in this thread being unparked immediately.","sig":null,"attributes":[{"value":"/ Executes function `f` just before a thread is parked (goes idle).","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13726697,"byte_end":13726766,"line_start":400,"line_end":400,"column_start":5,"column_end":74}},{"value":"/ `f` is called within the Tokio context, so functions like [`tokio::spawn`](crate::spawn)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13726771,"byte_end":13726863,"line_start":401,"line_end":401,"column_start":5,"column_end":97}},{"value":"/ can be called, and may result in this thread being unparked immediately.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13726868,"byte_end":13726944,"line_start":402,"line_end":402,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13726949,"byte_end":13726952,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This can be used to start work only when the executor is idle, or for bookkeeping","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13726957,"byte_end":13727042,"line_start":404,"line_end":404,"column_start":5,"column_end":90}},{"value":"/ and monitoring purposes.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727047,"byte_end":13727075,"line_start":405,"line_end":405,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727080,"byte_end":13727083,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note: There can only be one park callback for a runtime; calling this function","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727088,"byte_end":13727170,"line_start":407,"line_end":407,"column_start":5,"column_end":87}},{"value":"/ more than once replaces the last callback defined, rather than adding to it.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727175,"byte_end":13727255,"line_start":408,"line_end":408,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727260,"byte_end":13727263,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727268,"byte_end":13727282,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727287,"byte_end":13727290,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ## Multithreaded executor","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727295,"byte_end":13727324,"line_start":412,"line_end":412,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727329,"byte_end":13727336,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727341,"byte_end":13727366,"line_start":414,"line_end":414,"column_start":5,"column_end":30}},{"value":"/ # use std::sync::atomic::{AtomicBool, Ordering};","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727371,"byte_end":13727423,"line_start":415,"line_end":415,"column_start":5,"column_end":57}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727428,"byte_end":13727453,"line_start":416,"line_end":416,"column_start":5,"column_end":30}},{"value":"/ # use tokio::sync::Barrier;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727458,"byte_end":13727489,"line_start":417,"line_end":417,"column_start":5,"column_end":36}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727494,"byte_end":13727515,"line_start":418,"line_end":418,"column_start":5,"column_end":26}},{"value":"/ let once = AtomicBool::new(true);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727520,"byte_end":13727557,"line_start":419,"line_end":419,"column_start":5,"column_end":42}},{"value":"/ let barrier = Arc::new(Barrier::new(2));","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727562,"byte_end":13727606,"line_start":420,"line_end":420,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727611,"byte_end":13727614,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727619,"byte_end":13727673,"line_start":422,"line_end":422,"column_start":5,"column_end":59}},{"value":"/     .worker_threads(1)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727678,"byte_end":13727704,"line_start":423,"line_end":423,"column_start":5,"column_end":31}},{"value":"/     .on_thread_park({","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727709,"byte_end":13727734,"line_start":424,"line_end":424,"column_start":5,"column_end":30}},{"value":"/         let barrier = barrier.clone();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727739,"byte_end":13727781,"line_start":425,"line_end":425,"column_start":5,"column_end":47}},{"value":"/         move || {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727786,"byte_end":13727807,"line_start":426,"line_end":426,"column_start":5,"column_end":26}},{"value":"/             let barrier = barrier.clone();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727812,"byte_end":13727858,"line_start":427,"line_end":427,"column_start":5,"column_end":51}},{"value":"/             if once.swap(false, Ordering::Relaxed) {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727863,"byte_end":13727919,"line_start":428,"line_end":428,"column_start":5,"column_end":61}},{"value":"/                 tokio::spawn(async move { barrier.wait().await; });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13727924,"byte_end":13727995,"line_start":429,"line_end":429,"column_start":5,"column_end":76}},{"value":"/            }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728000,"byte_end":13728016,"line_start":430,"line_end":430,"column_start":5,"column_end":21}},{"value":"/         }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728021,"byte_end":13728034,"line_start":431,"line_end":431,"column_start":5,"column_end":18}},{"value":"/     })","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728039,"byte_end":13728049,"line_start":432,"line_end":432,"column_start":5,"column_end":15}},{"value":"/     .build()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728054,"byte_end":13728070,"line_start":433,"line_end":433,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728075,"byte_end":13728093,"line_start":434,"line_end":434,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728098,"byte_end":13728101,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ runtime.block_on(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728106,"byte_end":13728134,"line_start":436,"line_end":436,"column_start":5,"column_end":33}},{"value":"/    barrier.wait().await;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728139,"byte_end":13728167,"line_start":437,"line_end":437,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728172,"byte_end":13728178,"line_start":438,"line_end":438,"column_start":5,"column_end":11}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728183,"byte_end":13728190,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728195,"byte_end":13728202,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"/ ## Current thread executor","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728207,"byte_end":13728237,"line_start":441,"line_end":441,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728242,"byte_end":13728249,"line_start":442,"line_end":442,"column_start":5,"column_end":12}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728254,"byte_end":13728279,"line_start":443,"line_end":443,"column_start":5,"column_end":30}},{"value":"/ # use std::sync::atomic::{AtomicBool, Ordering};","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728284,"byte_end":13728336,"line_start":444,"line_end":444,"column_start":5,"column_end":57}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728341,"byte_end":13728366,"line_start":445,"line_end":445,"column_start":5,"column_end":30}},{"value":"/ # use tokio::sync::Barrier;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728371,"byte_end":13728402,"line_start":446,"line_end":446,"column_start":5,"column_end":36}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728407,"byte_end":13728428,"line_start":447,"line_end":447,"column_start":5,"column_end":26}},{"value":"/ let once = AtomicBool::new(true);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728433,"byte_end":13728470,"line_start":448,"line_end":448,"column_start":5,"column_end":42}},{"value":"/ let barrier = Arc::new(Barrier::new(2));","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728475,"byte_end":13728519,"line_start":449,"line_end":449,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728524,"byte_end":13728527,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ let runtime = runtime::Builder::new_current_thread()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728532,"byte_end":13728588,"line_start":451,"line_end":451,"column_start":5,"column_end":61}},{"value":"/     .on_thread_park({","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728593,"byte_end":13728618,"line_start":452,"line_end":452,"column_start":5,"column_end":30}},{"value":"/         let barrier = barrier.clone();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728623,"byte_end":13728665,"line_start":453,"line_end":453,"column_start":5,"column_end":47}},{"value":"/         move || {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728670,"byte_end":13728691,"line_start":454,"line_end":454,"column_start":5,"column_end":26}},{"value":"/             let barrier = barrier.clone();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728696,"byte_end":13728742,"line_start":455,"line_end":455,"column_start":5,"column_end":51}},{"value":"/             if once.swap(false, Ordering::Relaxed) {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728747,"byte_end":13728803,"line_start":456,"line_end":456,"column_start":5,"column_end":61}},{"value":"/                 tokio::spawn(async move { barrier.wait().await; });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728808,"byte_end":13728879,"line_start":457,"line_end":457,"column_start":5,"column_end":76}},{"value":"/            }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728884,"byte_end":13728900,"line_start":458,"line_end":458,"column_start":5,"column_end":21}},{"value":"/         }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728905,"byte_end":13728918,"line_start":459,"line_end":459,"column_start":5,"column_end":18}},{"value":"/     })","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728923,"byte_end":13728933,"line_start":460,"line_end":460,"column_start":5,"column_end":15}},{"value":"/     .build()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728938,"byte_end":13728954,"line_start":461,"line_end":461,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728959,"byte_end":13728977,"line_start":462,"line_end":462,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728982,"byte_end":13728985,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ runtime.block_on(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13728990,"byte_end":13729018,"line_start":464,"line_end":464,"column_start":5,"column_end":33}},{"value":"/    barrier.wait().await;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13729023,"byte_end":13729051,"line_start":465,"line_end":465,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13729056,"byte_end":13729062,"line_start":466,"line_end":466,"column_start":5,"column_end":11}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13729067,"byte_end":13729074,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13729079,"byte_end":13729086,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13729091,"byte_end":13729108,"line_start":469,"line_end":469,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5612},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730271,"byte_end":13730287,"line_start":505,"line_end":505,"column_start":12,"column_end":28},"name":"on_thread_unpark","qualname":"<Builder>::on_thread_unpark","value":"pub fn on_thread_unpark<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` just after a thread unparks (starts executing tasks).","sig":null,"attributes":[{"value":"/ Executes function `f` just after a thread unparks (starts executing tasks).","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13729306,"byte_end":13729385,"line_start":478,"line_end":478,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13729390,"byte_end":13729393,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases; note that work","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13729398,"byte_end":13729475,"line_start":480,"line_end":480,"column_start":5,"column_end":82}},{"value":"/ in this callback will increase latencies when the application has allowed one or","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13729480,"byte_end":13729564,"line_start":481,"line_end":481,"column_start":5,"column_end":89}},{"value":"/ more runtime threads to go idle.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13729569,"byte_end":13729605,"line_start":482,"line_end":482,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13729610,"byte_end":13729613,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ Note: There can only be one unpark callback for a runtime; calling this function","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13729618,"byte_end":13729702,"line_start":484,"line_end":484,"column_start":5,"column_end":89}},{"value":"/ more than once replaces the last callback defined, rather than adding to it.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13729707,"byte_end":13729787,"line_start":485,"line_end":485,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13729792,"byte_end":13729795,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13729800,"byte_end":13729814,"line_start":487,"line_end":487,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13729819,"byte_end":13729822,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13729827,"byte_end":13729834,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13729839,"byte_end":13729864,"line_start":490,"line_end":490,"column_start":5,"column_end":30}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13729869,"byte_end":13729890,"line_start":491,"line_end":491,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13729895,"byte_end":13729949,"line_start":492,"line_end":492,"column_start":5,"column_end":59}},{"value":"/     .on_thread_unpark(|| {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13729954,"byte_end":13729984,"line_start":493,"line_end":493,"column_start":5,"column_end":35}},{"value":"/         println!(\"thread unparking\");","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13729989,"byte_end":13730030,"line_start":494,"line_end":494,"column_start":5,"column_end":46}},{"value":"/     })","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730035,"byte_end":13730045,"line_start":495,"line_end":495,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730050,"byte_end":13730067,"line_start":496,"line_end":496,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730072,"byte_end":13730075,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ runtime.unwrap().block_on(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730080,"byte_end":13730117,"line_start":498,"line_end":498,"column_start":5,"column_end":42}},{"value":"/    tokio::task::yield_now().await;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730122,"byte_end":13730160,"line_start":499,"line_end":499,"column_start":5,"column_end":43}},{"value":"/    println!(\"Hello from Tokio!\");","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730165,"byte_end":13730202,"line_start":500,"line_end":500,"column_start":5,"column_end":42}},{"value":"/ })","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730207,"byte_end":13730213,"line_start":501,"line_end":501,"column_start":5,"column_end":11}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730218,"byte_end":13730225,"line_start":502,"line_end":502,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730230,"byte_end":13730237,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730242,"byte_end":13730259,"line_start":504,"line_end":504,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5614},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730852,"byte_end":13730857,"line_start":528,"line_end":528,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730460,"byte_end":13730497,"line_start":513,"line_end":513,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730502,"byte_end":13730505,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ The returned `Runtime` instance is ready to spawn tasks.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730510,"byte_end":13730570,"line_start":515,"line_end":515,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730575,"byte_end":13730578,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730583,"byte_end":13730597,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730602,"byte_end":13730605,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730610,"byte_end":13730617,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730622,"byte_end":13730654,"line_start":520,"line_end":520,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730659,"byte_end":13730662,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ let rt  = Builder::new_multi_thread().build().unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730667,"byte_end":13730726,"line_start":522,"line_end":522,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730731,"byte_end":13730734,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730739,"byte_end":13730762,"line_start":524,"line_end":524,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730767,"byte_end":13730816,"line_start":525,"line_end":525,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730821,"byte_end":13730828,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13730833,"byte_end":13730840,"line_start":527,"line_end":527,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5616},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13732029,"byte_end":13732046,"line_start":565,"line_end":565,"column_start":12,"column_end":29},"name":"thread_keep_alive","qualname":"<Builder>::thread_keep_alive","value":"pub fn thread_keep_alive(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a custom timeout for a thread in the blocking pool.","sig":null,"attributes":[{"value":"/ Sets a custom timeout for a thread in the blocking pool.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13731527,"byte_end":13731587,"line_start":549,"line_end":549,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13731592,"byte_end":13731595,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ By default, the timeout for a thread is set to 10 seconds. This can","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13731600,"byte_end":13731671,"line_start":551,"line_end":551,"column_start":5,"column_end":76}},{"value":"/ be overridden using .thread_keep_alive().","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13731676,"byte_end":13731721,"line_start":552,"line_end":552,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13731726,"byte_end":13731729,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13731734,"byte_end":13731747,"line_start":554,"line_end":554,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13731752,"byte_end":13731755,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13731760,"byte_end":13731767,"line_start":556,"line_end":556,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13731772,"byte_end":13731797,"line_start":557,"line_end":557,"column_start":5,"column_end":30}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13731802,"byte_end":13731832,"line_start":558,"line_end":558,"column_start":5,"column_end":35}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13731837,"byte_end":13731858,"line_start":559,"line_end":559,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13731863,"byte_end":13731912,"line_start":560,"line_end":560,"column_start":5,"column_end":54}},{"value":"/     .thread_keep_alive(Duration::from_millis(100))","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13731917,"byte_end":13731971,"line_start":561,"line_end":561,"column_start":5,"column_end":59}},{"value":"/     .build();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13731976,"byte_end":13731993,"line_start":562,"line_end":562,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13731998,"byte_end":13732005,"line_start":563,"line_end":563,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13732010,"byte_end":13732017,"line_start":564,"line_end":564,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5617},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13733317,"byte_end":13733338,"line_start":597,"line_end":597,"column_start":12,"column_end":33},"name":"global_queue_interval","qualname":"<Builder>::global_queue_interval","value":"pub fn global_queue_interval(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of scheduler ticks after which the scheduler will poll the global\n task queue.","sig":null,"attributes":[{"value":"/ Sets the number of scheduler ticks after which the scheduler will poll the global","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13732159,"byte_end":13732244,"line_start":570,"line_end":570,"column_start":5,"column_end":90}},{"value":"/ task queue.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13732249,"byte_end":13732264,"line_start":571,"line_end":571,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13732269,"byte_end":13732272,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ A scheduler \"tick\" roughly corresponds to one `poll` invocation on a task.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13732277,"byte_end":13732355,"line_start":573,"line_end":573,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13732360,"byte_end":13732363,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ By default the global queue interval is:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13732368,"byte_end":13732412,"line_start":575,"line_end":575,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13732417,"byte_end":13732420,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ * `31` for the current-thread scheduler.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13732425,"byte_end":13732469,"line_start":577,"line_end":577,"column_start":5,"column_end":49}},{"value":"/ * `61` for the multithreaded scheduler.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13732474,"byte_end":13732517,"line_start":578,"line_end":578,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13732522,"byte_end":13732525,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ Schedulers have a local queue of already-claimed tasks, and a global queue of incoming","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13732530,"byte_end":13732620,"line_start":580,"line_end":580,"column_start":5,"column_end":95}},{"value":"/ tasks. Setting the interval to a smaller value increases the fairness of the scheduler,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13732625,"byte_end":13732716,"line_start":581,"line_end":581,"column_start":5,"column_end":96}},{"value":"/ at the cost of more synchronization overhead. That can be beneficial for prioritizing","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13732721,"byte_end":13732810,"line_start":582,"line_end":582,"column_start":5,"column_end":94}},{"value":"/ getting started on new work, especially if tasks frequently yield rather than complete","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13732815,"byte_end":13732905,"line_start":583,"line_end":583,"column_start":5,"column_end":95}},{"value":"/ or await on further I/O. Conversely, a higher value prioritizes existing work, and","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13732910,"byte_end":13732996,"line_start":584,"line_end":584,"column_start":5,"column_end":91}},{"value":"/ is a good choice when most tasks quickly complete polling.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13733001,"byte_end":13733063,"line_start":585,"line_end":585,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13733068,"byte_end":13733071,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13733076,"byte_end":13733090,"line_start":587,"line_end":587,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13733095,"byte_end":13733098,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13733103,"byte_end":13733110,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13733115,"byte_end":13733140,"line_start":590,"line_end":590,"column_start":5,"column_end":30}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13733145,"byte_end":13733166,"line_start":591,"line_end":591,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13733171,"byte_end":13733220,"line_start":592,"line_end":592,"column_start":5,"column_end":54}},{"value":"/     .global_queue_interval(31)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13733225,"byte_end":13733259,"line_start":593,"line_end":593,"column_start":5,"column_end":39}},{"value":"/     .build();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13733264,"byte_end":13733281,"line_start":594,"line_end":594,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13733286,"byte_end":13733293,"line_start":595,"line_end":595,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13733298,"byte_end":13733305,"line_start":596,"line_end":596,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5618},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13734675,"byte_end":13734689,"line_start":629,"line_end":629,"column_start":12,"column_end":26},"name":"event_interval","qualname":"<Builder>::event_interval","value":"pub fn event_interval(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of scheduler ticks after which the scheduler will poll for\n external events (timers, I/O, and so on).","sig":null,"attributes":[{"value":"/ Sets the number of scheduler ticks after which the scheduler will poll for","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13733441,"byte_end":13733519,"line_start":602,"line_end":602,"column_start":5,"column_end":83}},{"value":"/ external events (timers, I/O, and so on).","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13733524,"byte_end":13733569,"line_start":603,"line_end":603,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13733574,"byte_end":13733577,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ A scheduler \"tick\" roughly corresponds to one `poll` invocation on a task.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13733582,"byte_end":13733660,"line_start":605,"line_end":605,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13733665,"byte_end":13733668,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ By default, the event interval is `61` for all scheduler types.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13733673,"byte_end":13733740,"line_start":607,"line_end":607,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13733745,"byte_end":13733748,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ Setting the event interval determines the effective \"priority\" of delivering","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13733753,"byte_end":13733833,"line_start":609,"line_end":609,"column_start":5,"column_end":85}},{"value":"/ these external events (which may wake up additional tasks), compared to","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13733838,"byte_end":13733913,"line_start":610,"line_end":610,"column_start":5,"column_end":80}},{"value":"/ executing tasks that are currently ready to run. A smaller value is useful","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13733918,"byte_end":13733996,"line_start":611,"line_end":611,"column_start":5,"column_end":83}},{"value":"/ when tasks frequently spend a long time in polling, or frequently yield,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13734001,"byte_end":13734077,"line_start":612,"line_end":612,"column_start":5,"column_end":81}},{"value":"/ which can result in overly long delays picking up I/O events. Conversely,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13734082,"byte_end":13734159,"line_start":613,"line_end":613,"column_start":5,"column_end":82}},{"value":"/ picking up new events requires extra synchronization and syscall overhead,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13734164,"byte_end":13734242,"line_start":614,"line_end":614,"column_start":5,"column_end":83}},{"value":"/ so if tasks generally complete their polling quickly, a higher event interval","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13734247,"byte_end":13734328,"line_start":615,"line_end":615,"column_start":5,"column_end":86}},{"value":"/ will minimize that overhead while still keeping the scheduler responsive to","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13734333,"byte_end":13734412,"line_start":616,"line_end":616,"column_start":5,"column_end":84}},{"value":"/ events.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13734417,"byte_end":13734428,"line_start":617,"line_end":617,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13734433,"byte_end":13734436,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13734441,"byte_end":13734455,"line_start":619,"line_end":619,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13734460,"byte_end":13734463,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13734468,"byte_end":13734475,"line_start":621,"line_end":621,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13734480,"byte_end":13734505,"line_start":622,"line_end":622,"column_start":5,"column_end":30}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13734510,"byte_end":13734531,"line_start":623,"line_end":623,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13734536,"byte_end":13734585,"line_start":624,"line_end":624,"column_start":5,"column_end":54}},{"value":"/     .event_interval(31)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13734590,"byte_end":13734617,"line_start":625,"line_end":625,"column_start":5,"column_end":32}},{"value":"/     .build();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13734622,"byte_end":13734639,"line_start":626,"line_end":626,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13734644,"byte_end":13734651,"line_start":627,"line_end":627,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13734656,"byte_end":13734663,"line_start":628,"line_end":628,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5902},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13749944,"byte_end":13749950,"line_start":17,"line_end":17,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":5903}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13749675,"byte_end":13749701,"line_start":10,"line_end":10,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13749702,"byte_end":13749705,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13749706,"byte_end":13749794,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13749795,"byte_end":13749845,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13749846,"byte_end":13749849,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13749850,"byte_end":13749908,"line_start":15,"line_end":15,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":5916},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13751375,"byte_end":13751385,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"EnterGuard","qualname":"::runtime::handle::EnterGuard","value":"EnterGuard {  }","parent":null,"children":[{"krate":0,"index":5918},{"krate":0,"index":5919}],"decl_id":null,"docs":" Runtime context guard.","sig":null,"attributes":[{"value":"/ Runtime context guard.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13751080,"byte_end":13751106,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13751107,"byte_end":13751110,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Returned by [`Runtime::enter`] and [`Handle::enter`], the context guard exits","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13751111,"byte_end":13751192,"line_start":61,"line_end":61,"column_start":1,"column_end":82}},{"value":"/ the runtime context on drop.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13751193,"byte_end":13751225,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13751226,"byte_end":13751229,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13751230,"byte_end":13751287,"line_start":64,"line_end":64,"column_start":1,"column_end":58}},{"value":"must_use = \"Creating and dropping a guard does nothing\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13751305,"byte_end":13751363,"line_start":66,"line_end":66,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":5746},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13751934,"byte_end":13751939,"line_start":81,"line_end":81,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter(&Self) -> EnterGuard","parent":null,"children":[],"decl_id":null,"docs":" Enters the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Sleep`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`] and [`Handle::current`]\n without panicking.","sig":null,"attributes":[{"value":"/ Enters the runtime context. This allows you to construct types that must","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13751493,"byte_end":13751569,"line_start":73,"line_end":73,"column_start":5,"column_end":81}},{"value":"/ have an executor available on creation such as [`Sleep`] or [`TcpStream`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13751574,"byte_end":13751652,"line_start":74,"line_end":74,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`] and [`Handle::current`]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13751657,"byte_end":13751748,"line_start":75,"line_end":75,"column_start":5,"column_end":96}},{"value":"/ without panicking.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13751753,"byte_end":13751775,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13751780,"byte_end":13751783,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ [`Sleep`]: struct@crate::time::Sleep","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13751788,"byte_end":13751828,"line_start":78,"line_end":78,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13751833,"byte_end":13751880,"line_start":79,"line_end":79,"column_start":5,"column_end":52}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13751885,"byte_end":13751922,"line_start":80,"line_end":80,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5747},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753841,"byte_end":13753848,"line_start":132,"line_end":132,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`.","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13752102,"byte_end":13752167,"line_start":88,"line_end":88,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13752172,"byte_end":13752175,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13752180,"byte_end":13752191,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13752196,"byte_end":13752199,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13752204,"byte_end":13752298,"line_start":92,"line_end":92,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**, or from a thread with an active","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13752303,"byte_end":13752400,"line_start":93,"line_end":93,"column_start":5,"column_end":102}},{"value":"/ `EnterGuard`. Calling this from within a thread created by `std::thread::spawn` (for example)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13752405,"byte_end":13752502,"line_start":94,"line_end":94,"column_start":5,"column_end":102}},{"value":"/ will cause a panic unless that thread has an active `EnterGuard`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13752507,"byte_end":13752576,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13752581,"byte_end":13752584,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13752589,"byte_end":13752603,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13752608,"byte_end":13752611,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13752616,"byte_end":13752698,"line_start":99,"line_end":99,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13752703,"byte_end":13752749,"line_start":100,"line_end":100,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13752754,"byte_end":13752757,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13752762,"byte_end":13752769,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13752774,"byte_end":13752796,"line_start":103,"line_end":103,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13752801,"byte_end":13752835,"line_start":104,"line_end":104,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13752840,"byte_end":13752856,"line_start":105,"line_end":105,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13752861,"byte_end":13752900,"line_start":106,"line_end":106,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13752905,"byte_end":13752927,"line_start":107,"line_end":107,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13752932,"byte_end":13752963,"line_start":108,"line_end":108,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13752968,"byte_end":13752971,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13752976,"byte_end":13753017,"line_start":110,"line_end":110,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753022,"byte_end":13753057,"line_start":111,"line_end":111,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753062,"byte_end":13753086,"line_start":112,"line_end":112,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753091,"byte_end":13753147,"line_start":113,"line_end":113,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753152,"byte_end":13753159,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753164,"byte_end":13753167,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753172,"byte_end":13753190,"line_start":116,"line_end":116,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753195,"byte_end":13753222,"line_start":117,"line_end":117,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753227,"byte_end":13753312,"line_start":118,"line_end":118,"column_start":5,"column_end":90}},{"value":"/     handle.spawn(async { /* ... */ });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753317,"byte_end":13753359,"line_start":119,"line_end":119,"column_start":5,"column_end":47}},{"value":"/     // This next line would cause a panic because we haven't entered the runtime","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753364,"byte_end":13753448,"line_start":120,"line_end":120,"column_start":5,"column_end":89}},{"value":"/     // and created an EnterGuard","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753453,"byte_end":13753489,"line_start":121,"line_end":121,"column_start":5,"column_end":41}},{"value":"/     // let handle2 = Handle::current(); // panic","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753494,"byte_end":13753546,"line_start":122,"line_end":122,"column_start":5,"column_end":57}},{"value":"/     // So we create a guard here with Handle::enter();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753551,"byte_end":13753609,"line_start":123,"line_end":123,"column_start":5,"column_end":63}},{"value":"/     let _guard = handle.enter();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753614,"byte_end":13753650,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/     // Now we can call Handle::current();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753655,"byte_end":13753700,"line_start":125,"line_end":125,"column_start":5,"column_end":50}},{"value":"/     let handle2 = Handle::current();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753705,"byte_end":13753745,"line_start":126,"line_end":126,"column_start":5,"column_end":45}},{"value":"/ });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753750,"byte_end":13753757,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753762,"byte_end":13753791,"line_start":128,"line_end":128,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753796,"byte_end":13753805,"line_start":129,"line_end":129,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753810,"byte_end":13753817,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753822,"byte_end":13753829,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5748},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754092,"byte_end":13754103,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753899,"byte_end":13753959,"line_start":136,"line_end":136,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753964,"byte_end":13753967,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13753972,"byte_end":13754023,"line_start":138,"line_end":138,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754028,"byte_end":13754031,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754036,"byte_end":13754080,"line_start":140,"line_end":140,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5749},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13755006,"byte_end":13755011,"line_start":173,"line_end":173,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawns a future onto the Tokio runtime.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754183,"byte_end":13754226,"line_start":145,"line_end":145,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754231,"byte_end":13754234,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754239,"byte_end":13754310,"line_start":147,"line_end":147,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754315,"byte_end":13754390,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754395,"byte_end":13754418,"line_start":149,"line_end":149,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754423,"byte_end":13754426,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754431,"byte_end":13754490,"line_start":151,"line_end":151,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754495,"byte_end":13754498,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754503,"byte_end":13754524,"line_start":153,"line_end":153,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754529,"byte_end":13754532,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754537,"byte_end":13754551,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754556,"byte_end":13754559,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754564,"byte_end":13754571,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754576,"byte_end":13754608,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754613,"byte_end":13754616,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754621,"byte_end":13754637,"line_start":160,"line_end":160,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754642,"byte_end":13754667,"line_start":161,"line_end":161,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754672,"byte_end":13754709,"line_start":162,"line_end":162,"column_start":5,"column_end":42}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754714,"byte_end":13754751,"line_start":163,"line_end":163,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754756,"byte_end":13754785,"line_start":164,"line_end":164,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754790,"byte_end":13754793,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime using the handle","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754798,"byte_end":13754853,"line_start":166,"line_end":166,"column_start":5,"column_end":60}},{"value":"/ handle.spawn(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754858,"byte_end":13754882,"line_start":167,"line_end":167,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754887,"byte_end":13754938,"line_start":168,"line_end":168,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754943,"byte_end":13754950,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754955,"byte_end":13754962,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754967,"byte_end":13754974,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13754979,"byte_end":13754994,"line_start":172,"line_end":172,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5751},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13755770,"byte_end":13755784,"line_start":201,"line_end":201,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"<Handle>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided function on an executor dedicated to blocking.\n operations.","sig":null,"attributes":[{"value":"/ Runs the provided function on an executor dedicated to blocking.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13755195,"byte_end":13755263,"line_start":181,"line_end":181,"column_start":5,"column_end":73}},{"value":"/ operations.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13755268,"byte_end":13755283,"line_start":182,"line_end":182,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13755288,"byte_end":13755291,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13755296,"byte_end":13755310,"line_start":184,"line_end":184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13755315,"byte_end":13755318,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13755323,"byte_end":13755330,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13755335,"byte_end":13755367,"line_start":187,"line_end":187,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13755372,"byte_end":13755375,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13755380,"byte_end":13755396,"line_start":189,"line_end":189,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13755401,"byte_end":13755426,"line_start":190,"line_end":190,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13755431,"byte_end":13755468,"line_start":191,"line_end":191,"column_start":5,"column_end":42}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13755473,"byte_end":13755510,"line_start":192,"line_end":192,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13755515,"byte_end":13755544,"line_start":193,"line_end":193,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13755549,"byte_end":13755552,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ // Spawn a blocking function onto the runtime using the handle","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13755557,"byte_end":13755623,"line_start":195,"line_end":195,"column_start":5,"column_end":71}},{"value":"/ handle.spawn_blocking(|| {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13755628,"byte_end":13755658,"line_start":196,"line_end":196,"column_start":5,"column_end":35}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13755663,"byte_end":13755714,"line_start":197,"line_end":197,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13755719,"byte_end":13755726,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13755731,"byte_end":13755738,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13755743,"byte_end":13755758,"line_start":200,"line_end":200,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5755},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13758918,"byte_end":13758926,"line_start":284,"line_end":284,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Handle>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on this `Handle`'s associated `Runtime`.","sig":null,"attributes":[{"value":"/ Runs a future to completion on this `Handle`'s associated `Runtime`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13756070,"byte_end":13756142,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13756147,"byte_end":13756150,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the current thread, blocking until it is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13756155,"byte_end":13756229,"line_start":215,"line_end":215,"column_start":5,"column_end":79}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13756234,"byte_end":13756307,"line_start":216,"line_end":216,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13756312,"byte_end":13756377,"line_start":217,"line_end":217,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13756382,"byte_end":13756385,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ When this is used on a `current_thread` runtime, only the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13756390,"byte_end":13756451,"line_start":219,"line_end":219,"column_start":5,"column_end":66}},{"value":"/ [`Runtime::block_on`] method can drive the IO and timer drivers, but the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13756456,"byte_end":13756532,"line_start":220,"line_end":220,"column_start":5,"column_end":81}},{"value":"/ `Handle::block_on` method cannot drive them. This means that, when using","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13756537,"byte_end":13756613,"line_start":221,"line_end":221,"column_start":5,"column_end":81}},{"value":"/ this method on a current_thread runtime, anything that relies on IO or","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13756618,"byte_end":13756692,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ timers will not work unless there is another thread currently calling","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13756697,"byte_end":13756770,"line_start":223,"line_end":223,"column_start":5,"column_end":78}},{"value":"/ [`Runtime::block_on`] on the same runtime.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13756775,"byte_end":13756821,"line_start":224,"line_end":224,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13756826,"byte_end":13756829,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # If the runtime has been shut down","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13756834,"byte_end":13756873,"line_start":226,"line_end":226,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13756878,"byte_end":13756881,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ If the `Handle`'s associated `Runtime` has been shut down (through","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13756886,"byte_end":13756956,"line_start":228,"line_end":228,"column_start":5,"column_end":75}},{"value":"/ [`Runtime::shutdown_background`], [`Runtime::shutdown_timeout`], or by","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13756961,"byte_end":13757035,"line_start":229,"line_end":229,"column_start":5,"column_end":79}},{"value":"/ dropping it) and `Handle::block_on` is used it might return an error or","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757040,"byte_end":13757115,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ panic. Specifically IO resources will return an error and timers will","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757120,"byte_end":13757193,"line_start":231,"line_end":231,"column_start":5,"column_end":78}},{"value":"/ panic. Runtime independent futures will run as normal.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757198,"byte_end":13757256,"line_start":232,"line_end":232,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757261,"byte_end":13757264,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757269,"byte_end":13757281,"line_start":234,"line_end":234,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757286,"byte_end":13757289,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function panics if the provided future panics, if called within an","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757294,"byte_end":13757369,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"/ asynchronous execution context, or if a timer future is executed on a","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757374,"byte_end":13757447,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/ runtime that has been shut down.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757452,"byte_end":13757488,"line_start":238,"line_end":238,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757493,"byte_end":13757496,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757501,"byte_end":13757515,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757520,"byte_end":13757523,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757528,"byte_end":13757535,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757540,"byte_end":13757572,"line_start":243,"line_end":243,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757577,"byte_end":13757580,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ // Create the runtime","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757585,"byte_end":13757610,"line_start":245,"line_end":245,"column_start":5,"column_end":30}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757615,"byte_end":13757653,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757658,"byte_end":13757661,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757666,"byte_end":13757703,"line_start":248,"line_end":248,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757708,"byte_end":13757737,"line_start":249,"line_end":249,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757742,"byte_end":13757745,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ // Execute the future, blocking the current thread until completion","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757750,"byte_end":13757821,"line_start":251,"line_end":251,"column_start":5,"column_end":76}},{"value":"/ handle.block_on(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757826,"byte_end":13757853,"line_start":252,"line_end":252,"column_start":5,"column_end":32}},{"value":"/     println!(\"hello\");","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757858,"byte_end":13757884,"line_start":253,"line_end":253,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757889,"byte_end":13757896,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757901,"byte_end":13757908,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757913,"byte_end":13757916,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ Or using `Handle::current`:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757921,"byte_end":13757952,"line_start":257,"line_end":257,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757957,"byte_end":13757960,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757965,"byte_end":13757972,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13757977,"byte_end":13758008,"line_start":260,"line_end":260,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13758013,"byte_end":13758016,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13758021,"byte_end":13758039,"line_start":262,"line_end":262,"column_start":5,"column_end":23}},{"value":"/ async fn main () {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13758044,"byte_end":13758066,"line_start":263,"line_end":263,"column_start":5,"column_end":27}},{"value":"/     let handle = Handle::current();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13758071,"byte_end":13758110,"line_start":264,"line_end":264,"column_start":5,"column_end":44}},{"value":"/     std::thread::spawn(move || {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13758115,"byte_end":13758151,"line_start":265,"line_end":265,"column_start":5,"column_end":41}},{"value":"/         // Using Handle::block_on to run async code in the new thread.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13758156,"byte_end":13758230,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"/         handle.block_on(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13758235,"byte_end":13758270,"line_start":267,"line_end":267,"column_start":5,"column_end":40}},{"value":"/             println!(\"hello\");","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13758275,"byte_end":13758309,"line_start":268,"line_end":268,"column_start":5,"column_end":39}},{"value":"/         });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13758314,"byte_end":13758329,"line_start":269,"line_end":269,"column_start":5,"column_end":20}},{"value":"/     });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13758334,"byte_end":13758345,"line_start":270,"line_end":270,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13758350,"byte_end":13758355,"line_start":271,"line_end":271,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13758360,"byte_end":13758367,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13758372,"byte_end":13758375,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ [`JoinError`]: struct@crate::task::JoinError","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13758380,"byte_end":13758428,"line_start":274,"line_end":274,"column_start":5,"column_end":53}},{"value":"/ [`JoinHandle`]: struct@crate::task::JoinHandle","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13758433,"byte_end":13758483,"line_start":275,"line_end":275,"column_start":5,"column_end":55}},{"value":"/ [`Runtime::block_on`]: fn@crate::runtime::Runtime::block_on","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13758488,"byte_end":13758551,"line_start":276,"line_end":276,"column_start":5,"column_end":68}},{"value":"/ [`Runtime::shutdown_background`]: fn@crate::runtime::Runtime::shutdown_background","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13758556,"byte_end":13758641,"line_start":277,"line_end":277,"column_start":5,"column_end":90}},{"value":"/ [`Runtime::shutdown_timeout`]: fn@crate::runtime::Runtime::shutdown_timeout","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13758646,"byte_end":13758725,"line_start":278,"line_end":278,"column_start":5,"column_end":84}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13758730,"byte_end":13758781,"line_start":279,"line_end":279,"column_start":5,"column_end":56}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13758786,"byte_end":13758814,"line_start":280,"line_end":280,"column_start":5,"column_end":33}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13758819,"byte_end":13758849,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13758854,"byte_end":13758886,"line_start":282,"line_end":282,"column_start":5,"column_end":37}},{"value":"track_caller","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13758891,"byte_end":13758906,"line_start":283,"line_end":283,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5923},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13763592,"byte_end":13763607,"line_start":432,"line_end":432,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"TryCurrentError {  }","parent":null,"children":[{"krate":0,"index":5924}],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13763495,"byte_end":13763563,"line_start":430,"line_end":430,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":5772},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13764063,"byte_end":13764081,"line_start":451,"line_end":451,"column_start":12,"column_end":30},"name":"is_missing_context","qualname":"<TryCurrentError>::is_missing_context","value":"pub fn is_missing_context(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the call failed because there is currently no runtime in\n the Tokio context.\n","sig":null,"attributes":[{"value":"/ Returns true if the call failed because there is currently no runtime in","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13763948,"byte_end":13764024,"line_start":449,"line_end":449,"column_start":5,"column_end":81}},{"value":"/ the Tokio context.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13764029,"byte_end":13764051,"line_start":450,"line_end":450,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":5773},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13764366,"byte_end":13764391,"line_start":458,"line_end":458,"column_start":12,"column_end":37},"name":"is_thread_local_destroyed","qualname":"<TryCurrentError>::is_thread_local_destroyed","value":"pub fn is_thread_local_destroyed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the call failed because the Tokio context thread-local\n had been destroyed. This can usually only happen if in the destructor of\n other thread-locals.\n","sig":null,"attributes":[{"value":"/ Returns true if the call failed because the Tokio context thread-local","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13764170,"byte_end":13764244,"line_start":455,"line_end":455,"column_start":5,"column_end":79}},{"value":"/ had been destroyed. This can usually only happen if in the destructor of","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13764249,"byte_end":13764325,"line_start":456,"line_end":456,"column_start":5,"column_end":81}},{"value":"/ other thread-locals.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13764330,"byte_end":13764354,"line_start":457,"line_end":457,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":6473},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13557130,"byte_end":13557137,"line_start":285,"line_end":285,"column_start":16,"column_end":23},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":6474},{"krate":0,"index":6475},{"krate":0,"index":6476}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":27518,"byte_end":27540,"line_start":321,"line_end":321,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":6459},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13559105,"byte_end":13559108,"line_start":342,"line_end":342,"column_start":16,"column_end":19},"name":"new","qualname":"<Runtime>::new","value":"pub fn new() -> std::io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-multi-thread\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13558987,"byte_end":13559022,"line_start":340,"line_end":340,"column_start":9,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":6460},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13559747,"byte_end":13559753,"line_start":363,"line_end":363,"column_start":16,"column_end":22},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the runtime's spawner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6461},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13560648,"byte_end":13560653,"line_start":393,"line_end":393,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13560617,"byte_end":13560632,"line_start":392,"line_end":392,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":6463},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13561397,"byte_end":13561411,"line_start":418,"line_end":418,"column_start":16,"column_end":30},"name":"spawn_blocking","qualname":"<Runtime>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided function on an executor dedicated to blocking operations.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13561366,"byte_end":13561381,"line_start":417,"line_end":417,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":6466},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13563619,"byte_end":13563627,"line_start":473,"line_end":473,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the Tokio runtime. This is the\n runtime's entry point.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13563588,"byte_end":13563603,"line_start":472,"line_end":472,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":6468},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13565282,"byte_end":13565287,"line_start":518,"line_end":518,"column_start":16,"column_end":21},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter(&Self) -> EnterGuard","parent":null,"children":[],"decl_id":null,"docs":" Enters the runtime context.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6469},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13566859,"byte_end":13566875,"line_start":557,"line_end":557,"column_start":16,"column_end":32},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6470},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13568306,"byte_end":13568325,"line_start":589,"line_end":589,"column_start":16,"column_end":35},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"pub fn shutdown_background(Self)","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":943},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":6938},{"krate":0,"index":6939},{"krate":0,"index":6942},{"krate":0,"index":6945},{"krate":0,"index":6949},{"krate":0,"index":6952},{"krate":0,"index":6963},{"krate":0,"index":7251},{"krate":0,"index":6966},{"krate":0,"index":6988},{"krate":0,"index":6991},{"krate":0,"index":7103},{"krate":0,"index":7104},{"krate":0,"index":7107},{"krate":0,"index":7110},{"krate":0,"index":7198},{"krate":0,"index":7201},{"krate":0,"index":7223},{"krate":0,"index":7224},{"krate":0,"index":7227},{"krate":0,"index":7230}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"/ Asynchronous green-threads.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":135609,"byte_end":135640,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":135641,"byte_end":135644,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":135645,"byte_end":135667,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":135668,"byte_end":135671,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":135672,"byte_end":135753,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":135754,"byte_end":135834,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":135835,"byte_end":135915,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":135916,"byte_end":135990,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":135991,"byte_end":136066,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":136067,"byte_end":136089,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":136090,"byte_end":136093,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":136094,"byte_end":136129,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":136130,"byte_end":136133,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":136134,"byte_end":136208,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":136209,"byte_end":136288,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":136289,"byte_end":136361,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":136362,"byte_end":136437,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":136438,"byte_end":136491,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":136492,"byte_end":136495,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":136496,"byte_end":136573,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":136574,"byte_end":136647,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":136648,"byte_end":136727,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":136728,"byte_end":136806,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":136807,"byte_end":136879,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":136880,"byte_end":136955,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":136956,"byte_end":137030,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":137031,"byte_end":137106,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":137107,"byte_end":137137,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":137138,"byte_end":137141,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":137142,"byte_end":137220,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":137221,"byte_end":137296,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":137297,"byte_end":137374,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":137375,"byte_end":137454,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":137455,"byte_end":137533,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":137534,"byte_end":137609,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":137610,"byte_end":137685,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":137686,"byte_end":137747,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":137748,"byte_end":137751,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":137752,"byte_end":137776,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":137777,"byte_end":137841,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":137842,"byte_end":137902,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":137903,"byte_end":137992,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":137993,"byte_end":138081,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138082,"byte_end":138085,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138086,"byte_end":138111,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138112,"byte_end":138115,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138116,"byte_end":138183,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138184,"byte_end":138187,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138188,"byte_end":138204,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138205,"byte_end":138208,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138209,"byte_end":138288,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138289,"byte_end":138368,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138369,"byte_end":138448,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138449,"byte_end":138516,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138517,"byte_end":138520,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138521,"byte_end":138528,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138529,"byte_end":138549,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138550,"byte_end":138553,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138554,"byte_end":138576,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138577,"byte_end":138600,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138601,"byte_end":138637,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138638,"byte_end":138645,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138646,"byte_end":138653,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138654,"byte_end":138661,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138662,"byte_end":138665,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138666,"byte_end":138745,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138746,"byte_end":138824,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138825,"byte_end":138859,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138860,"byte_end":138863,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138864,"byte_end":138871,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138872,"byte_end":138892,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138893,"byte_end":138896,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138897,"byte_end":138977,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":138978,"byte_end":139012,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139013,"byte_end":139027,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139028,"byte_end":139050,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139051,"byte_end":139058,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139059,"byte_end":139062,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139063,"byte_end":139073,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139074,"byte_end":139077,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139078,"byte_end":139122,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139123,"byte_end":139152,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139153,"byte_end":139192,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139193,"byte_end":139205,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139206,"byte_end":139213,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139214,"byte_end":139221,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139222,"byte_end":139225,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139226,"byte_end":139306,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]. For","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139307,"byte_end":139382,"line_start":89,"line_end":89,"column_start":1,"column_end":76}},{"value":"/ example:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139383,"byte_end":139395,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139396,"byte_end":139399,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139400,"byte_end":139407,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139408,"byte_end":139428,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139429,"byte_end":139432,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139433,"byte_end":139471,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139472,"byte_end":139506,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139507,"byte_end":139548,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139549,"byte_end":139556,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139557,"byte_end":139560,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139561,"byte_end":139619,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139620,"byte_end":139653,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139654,"byte_end":139661,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139662,"byte_end":139669,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139670,"byte_end":139673,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139674,"byte_end":139742,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ feature flag is enabled.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139743,"byte_end":139771,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139772,"byte_end":139775,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139776,"byte_end":139817,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139818,"byte_end":139851,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139852,"byte_end":139898,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139899,"byte_end":139942,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139943,"byte_end":139985,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":139986,"byte_end":140027,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":140028,"byte_end":140031,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":140032,"byte_end":140061,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":140062,"byte_end":140065,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":140066,"byte_end":140146,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":140147,"byte_end":140226,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":140227,"byte_end":140306,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":140307,"byte_end":140347,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":140348,"byte_end":140351,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":140352,"byte_end":140426,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":140427,"byte_end":140507,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":140508,"byte_end":140511,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Be aware that if you call a non-async method from async code, that non-async","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":140512,"byte_end":140592,"line_start":125,"line_end":125,"column_start":1,"column_end":81}},{"value":"/ method is still inside the asynchronous context, so you should also avoid","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":140593,"byte_end":140670,"line_start":126,"line_end":126,"column_start":1,"column_end":78}},{"value":"/ blocking operations there. This includes destructors of objects destroyed in","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":140671,"byte_end":140751,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ async code.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":140752,"byte_end":140767,"line_start":128,"line_end":128,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":140768,"byte_end":140771,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":140772,"byte_end":140795,"line_start":130,"line_end":130,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":140796,"byte_end":140799,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":140800,"byte_end":140880,"line_start":132,"line_end":132,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":140881,"byte_end":140947,"line_start":133,"line_end":133,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":140948,"byte_end":141015,"line_start":134,"line_end":134,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141016,"byte_end":141090,"line_start":135,"line_end":135,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141091,"byte_end":141103,"line_start":136,"line_end":136,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141104,"byte_end":141107,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141108,"byte_end":141115,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141116,"byte_end":141136,"line_start":139,"line_end":139,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141137,"byte_end":141140,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141141,"byte_end":141164,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141165,"byte_end":141194,"line_start":142,"line_end":142,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141195,"byte_end":141257,"line_start":143,"line_end":143,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141258,"byte_end":141265,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141266,"byte_end":141273,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141274,"byte_end":141281,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141282,"byte_end":141285,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141286,"byte_end":141360,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141361,"byte_end":141428,"line_start":149,"line_end":149,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141429,"byte_end":141432,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141433,"byte_end":141444,"line_start":151,"line_end":151,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141445,"byte_end":141467,"line_start":152,"line_end":152,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141468,"byte_end":141532,"line_start":153,"line_end":153,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141533,"byte_end":141573,"line_start":154,"line_end":154,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141574,"byte_end":141636,"line_start":155,"line_end":155,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141637,"byte_end":141665,"line_start":156,"line_end":156,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141666,"byte_end":141673,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141674,"byte_end":141677,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141678,"byte_end":141707,"line_start":159,"line_end":159,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141708,"byte_end":141753,"line_start":160,"line_end":160,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141754,"byte_end":141766,"line_start":161,"line_end":161,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141767,"byte_end":141774,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141775,"byte_end":141782,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141783,"byte_end":141786,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141787,"byte_end":141810,"line_start":165,"line_end":165,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141811,"byte_end":141814,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ When using the [multi-threaded runtime][rt-multi-thread], the [`task::block_in_place`]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141815,"byte_end":141905,"line_start":167,"line_end":167,"column_start":1,"column_end":91}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141906,"byte_end":141980,"line_start":168,"line_end":168,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":141981,"byte_end":142057,"line_start":169,"line_end":169,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142058,"byte_end":142132,"line_start":170,"line_end":170,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142133,"byte_end":142212,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142213,"byte_end":142295,"line_start":172,"line_end":172,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142296,"byte_end":142317,"line_start":173,"line_end":173,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142318,"byte_end":142321,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142322,"byte_end":142338,"line_start":175,"line_end":175,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142339,"byte_end":142342,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142343,"byte_end":142350,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142351,"byte_end":142371,"line_start":178,"line_end":178,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142372,"byte_end":142375,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142376,"byte_end":142399,"line_start":180,"line_end":180,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142400,"byte_end":142442,"line_start":181,"line_end":181,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142443,"byte_end":142505,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142506,"byte_end":142534,"line_start":183,"line_end":183,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142535,"byte_end":142542,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142543,"byte_end":142546,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142547,"byte_end":142592,"line_start":186,"line_end":186,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142593,"byte_end":142600,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142601,"byte_end":142608,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142609,"byte_end":142612,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142613,"byte_end":142631,"line_start":190,"line_end":190,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142632,"byte_end":142635,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142636,"byte_end":142710,"line_start":192,"line_end":192,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142711,"byte_end":142789,"line_start":193,"line_end":193,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142790,"byte_end":142866,"line_start":194,"line_end":194,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142867,"byte_end":142924,"line_start":195,"line_end":195,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":142925,"byte_end":143003,"line_start":196,"line_end":196,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143004,"byte_end":143032,"line_start":197,"line_end":197,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143033,"byte_end":143036,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143037,"byte_end":143048,"line_start":199,"line_end":199,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143049,"byte_end":143069,"line_start":200,"line_end":200,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143070,"byte_end":143073,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143074,"byte_end":143112,"line_start":202,"line_end":202,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143113,"byte_end":143124,"line_start":203,"line_end":203,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143125,"byte_end":143152,"line_start":204,"line_end":204,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143153,"byte_end":143171,"line_start":205,"line_end":205,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143172,"byte_end":143214,"line_start":206,"line_end":206,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143215,"byte_end":143226,"line_start":207,"line_end":207,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143227,"byte_end":143230,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143231,"byte_end":143298,"line_start":209,"line_end":209,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143299,"byte_end":143331,"line_start":210,"line_end":210,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143332,"byte_end":143368,"line_start":211,"line_end":211,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143369,"byte_end":143374,"line_start":212,"line_end":212,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143375,"byte_end":143388,"line_start":213,"line_end":213,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143389,"byte_end":143396,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143397,"byte_end":143404,"line_start":215,"line_end":215,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143405,"byte_end":143408,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ### Cooperative scheduling","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143409,"byte_end":143439,"line_start":217,"line_end":217,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143440,"byte_end":143443,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ A single call to [`poll`] on a top-level task may potentially do a lot of","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143444,"byte_end":143521,"line_start":219,"line_end":219,"column_start":1,"column_end":78}},{"value":"/ work before it returns `Poll::Pending`. If a task runs for a long period of","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143522,"byte_end":143601,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ time without yielding back to the executor, it can starve other tasks","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143602,"byte_end":143675,"line_start":221,"line_end":221,"column_start":1,"column_end":74}},{"value":"/ waiting on that executor to execute them, or drive underlying resources.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143676,"byte_end":143752,"line_start":222,"line_end":222,"column_start":1,"column_end":77}},{"value":"/ Since Rust does not have a runtime, it is difficult to forcibly preempt a","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143753,"byte_end":143830,"line_start":223,"line_end":223,"column_start":1,"column_end":78}},{"value":"/ long-running task. Instead, this module provides an opt-in mechanism for","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143831,"byte_end":143907,"line_start":224,"line_end":224,"column_start":1,"column_end":77}},{"value":"/ futures to collaborate with the executor to avoid starvation.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143908,"byte_end":143973,"line_start":225,"line_end":225,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143974,"byte_end":143977,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ Consider a future like this one:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":143978,"byte_end":144014,"line_start":227,"line_end":227,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144015,"byte_end":144018,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144019,"byte_end":144026,"line_start":229,"line_end":229,"column_start":1,"column_end":8}},{"value":"/ # use tokio_stream::{Stream, StreamExt};","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144027,"byte_end":144071,"line_start":230,"line_end":230,"column_start":1,"column_end":45}},{"value":"/ async fn drop_all<I: Stream + Unpin>(mut input: I) {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144072,"byte_end":144128,"line_start":231,"line_end":231,"column_start":1,"column_end":57}},{"value":"/     while let Some(_) = input.next().await {}","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144129,"byte_end":144178,"line_start":232,"line_end":232,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144179,"byte_end":144184,"line_start":233,"line_end":233,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144185,"byte_end":144192,"line_start":234,"line_end":234,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144193,"byte_end":144196,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ It may look harmless, but consider what happens under heavy load if the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144197,"byte_end":144272,"line_start":236,"line_end":236,"column_start":1,"column_end":76}},{"value":"/ input stream is _always_ ready. If we spawn `drop_all`, the task will never","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144273,"byte_end":144352,"line_start":237,"line_end":237,"column_start":1,"column_end":80}},{"value":"/ yield, and will starve other tasks and resources on the same executor.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144353,"byte_end":144427,"line_start":238,"line_end":238,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144428,"byte_end":144431,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ To account for this, Tokio has explicit yield points in a number of library","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144432,"byte_end":144511,"line_start":240,"line_end":240,"column_start":1,"column_end":80}},{"value":"/ functions, which force tasks to return to the executor periodically.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144512,"byte_end":144584,"line_start":241,"line_end":241,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144585,"byte_end":144588,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144589,"byte_end":144592,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ #### unconstrained","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144593,"byte_end":144615,"line_start":244,"line_end":244,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144616,"byte_end":144619,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ If necessary, [`task::unconstrained`] lets you opt out a future of Tokio's cooperative","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144620,"byte_end":144710,"line_start":246,"line_end":246,"column_start":1,"column_end":91}},{"value":"/ scheduling. When a future is wrapped with `unconstrained`, it will never be forced to yield to","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144711,"byte_end":144809,"line_start":247,"line_end":247,"column_start":1,"column_end":99}},{"value":"/ Tokio. For example:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144810,"byte_end":144833,"line_start":248,"line_end":248,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144834,"byte_end":144837,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144838,"byte_end":144845,"line_start":250,"line_end":250,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144846,"byte_end":144866,"line_start":251,"line_end":251,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144867,"byte_end":144890,"line_start":252,"line_end":252,"column_start":1,"column_end":24}},{"value":"/ use tokio::{task, sync::mpsc};","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144891,"byte_end":144925,"line_start":253,"line_end":253,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144926,"byte_end":144929,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ let fut = async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144930,"byte_end":144951,"line_start":255,"line_end":255,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":144952,"byte_end":145005,"line_start":256,"line_end":256,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145006,"byte_end":145009,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/     for i in 0..1000 {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145010,"byte_end":145036,"line_start":258,"line_end":258,"column_start":1,"column_end":27}},{"value":"/         let _ = tx.send(());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145037,"byte_end":145069,"line_start":259,"line_end":259,"column_start":1,"column_end":33}},{"value":"/         // This will always be ready. If coop was in effect, this code would be forced to yield","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145070,"byte_end":145169,"line_start":260,"line_end":260,"column_start":1,"column_end":100}},{"value":"/         // periodically. However, if left unconstrained, then this code will never yield.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145170,"byte_end":145263,"line_start":261,"line_end":261,"column_start":1,"column_end":94}},{"value":"/         rx.recv().await;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145264,"byte_end":145292,"line_start":262,"line_end":262,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145293,"byte_end":145302,"line_start":263,"line_end":263,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145303,"byte_end":145309,"line_start":264,"line_end":264,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145310,"byte_end":145313,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ task::unconstrained(fut).await;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145314,"byte_end":145349,"line_start":266,"line_end":266,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145350,"byte_end":145357,"line_start":267,"line_end":267,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145358,"byte_end":145365,"line_start":268,"line_end":268,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145366,"byte_end":145369,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145370,"byte_end":145427,"line_start":270,"line_end":270,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145428,"byte_end":145485,"line_start":271,"line_end":271,"column_start":1,"column_end":58}},{"value":"/ [rt-multi-thread]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145486,"byte_end":145549,"line_start":272,"line_end":272,"column_start":1,"column_end":64}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145550,"byte_end":145599,"line_start":273,"line_end":273,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145600,"byte_end":145649,"line_start":274,"line_end":274,"column_start":1,"column_end":50}},{"value":"/ [`task::unconstrained`]: crate::task::unconstrained()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145650,"byte_end":145707,"line_start":275,"line_end":275,"column_start":1,"column_end":58}},{"value":"/ [`poll`]: method@std::future::Future::poll","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":145708,"byte_end":145754,"line_start":276,"line_end":276,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":7234},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/blocking.rs","byte_start":13943188,"byte_end":13943202,"line_start":73,"line_end":73,"column_start":12,"column_end":26},"name":"block_in_place","qualname":"::task::blocking::block_in_place","value":"pub fn block_in_place<F, R>(F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided blocking function on the current thread without\n blocking the executor.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-multi-thread\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":27830,"byte_end":27865,"line_start":337,"line_end":337,"column_start":13,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":7237},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/blocking.rs","byte_start":13948399,"byte_end":13948413,"line_start":192,"line_end":192,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"::task::blocking::spawn_blocking","value":"pub fn spawn_blocking<F, R>(F) -> JoinHandle<R> where F: FnOnce() -> R +\nSend + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":27518,"byte_end":27540,"line_start":321,"line_end":321,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/blocking.rs","byte_start":13948372,"byte_end":13948387,"line_start":191,"line_end":191,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":7240},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/spawn.rs","byte_start":13952241,"byte_end":13952246,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":27518,"byte_end":27540,"line_start":321,"line_end":321,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/spawn.rs","byte_start":13952214,"byte_end":13952229,"line_start":124,"line_end":124,"column_start":5,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":6980},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13954943,"byte_end":13954952,"line_start":37,"line_end":37,"column_start":14,"column_end":23},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"/ Yields execution back to the Tokio runtime.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13953230,"byte_end":13953277,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13953278,"byte_end":13953281,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A task yields by awaiting on `yield_now()`, and may resume when that future","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13953282,"byte_end":13953361,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ completes (with no output.) The current task will be re-added as a pending","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13953362,"byte_end":13953440,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ task at the _back_ of the pending queue. Any other pending tasks will be","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13953441,"byte_end":13953517,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ scheduled. No other waking is required for the task to continue.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13953518,"byte_end":13953586,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13953587,"byte_end":13953590,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See also the usage example in the [task module](index.html#yield_now).","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13953591,"byte_end":13953665,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13953666,"byte_end":13953669,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Non-guarantees","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13953670,"byte_end":13953691,"line_start":14,"line_end":14,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13953692,"byte_end":13953695,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This function may not yield all the way up to the executor if there are any","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13953696,"byte_end":13953775,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ special combinators above it in the call stack. For example, if a","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13953776,"byte_end":13953845,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/ [`tokio::select!`] has another branch complete during the same poll as the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13953846,"byte_end":13953924,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ `yield_now()`, then the yield is not propagated all the way up to the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13953925,"byte_end":13953998,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ runtime.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13953999,"byte_end":13954011,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13954012,"byte_end":13954015,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ It is generally not guaranteed that the runtime behaves like you expect it","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13954016,"byte_end":13954094,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ to when deciding which task to schedule next after a call to `yield_now()`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13954095,"byte_end":13954174,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ In particular, the runtime may choose to poll the task that just ran","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13954175,"byte_end":13954247,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ `yield_now()` again immediately without polling any other tasks first. For","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13954248,"byte_end":13954326,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ example, the runtime will not drive the IO driver between every poll of a","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13954327,"byte_end":13954404,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ task, and this could result in the runtime polling the current task again","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13954405,"byte_end":13954482,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ immediately even if there is another task that could make progress if that","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13954483,"byte_end":13954561,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ other task is waiting for a notification from the IO driver.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13954562,"byte_end":13954626,"line_start":29,"line_end":29,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13954627,"byte_end":13954630,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ In general, changes to the order in which the runtime polls tasks is not","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13954631,"byte_end":13954707,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ considered a breaking change, and your program should be correct no matter","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13954708,"byte_end":13954786,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ which order the runtime polls your tasks in.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13954787,"byte_end":13954835,"line_start":33,"line_end":33,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13954836,"byte_end":13954839,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`tokio::select!`]: macro@crate::select","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13954840,"byte_end":13954883,"line_start":35,"line_end":35,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":7254},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13962983,"byte_end":13962991,"line_start":213,"line_end":213,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":7255},{"krate":0,"index":7256},{"krate":0,"index":7257}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":27518,"byte_end":27540,"line_start":321,"line_end":321,"column_start":13,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":7263},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13964946,"byte_end":13964957,"line_start":290,"line_end":290,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"pub fn spawn_local<F>(F) -> JoinHandle<F::Output> where F: Future + 'static,\nF::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":27518,"byte_end":27540,"line_start":321,"line_end":321,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13964919,"byte_end":13964934,"line_start":289,"line_end":289,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7053},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13965800,"byte_end":13965803,"line_start":324,"line_end":324,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"pub fn new() -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13965755,"byte_end":13965788,"line_start":323,"line_end":323,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":7054},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13967471,"byte_end":13967482,"line_start":376,"line_end":376,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"pub fn spawn_local<F>(&Self, F) -> JoinHandle<F::Output> where F: Future +\n'static, F::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13966288,"byte_end":13966338,"line_start":339,"line_end":339,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13966343,"byte_end":13966346,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13966351,"byte_end":13966411,"line_start":341,"line_end":341,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13966416,"byte_end":13966419,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13966424,"byte_end":13966496,"line_start":343,"line_end":343,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13966501,"byte_end":13966571,"line_start":344,"line_end":344,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13966576,"byte_end":13966587,"line_start":345,"line_end":345,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13966592,"byte_end":13966612,"line_start":346,"line_end":346,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13966617,"byte_end":13966620,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13966625,"byte_end":13966643,"line_start":348,"line_end":348,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13966648,"byte_end":13966669,"line_start":349,"line_end":349,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13966674,"byte_end":13966716,"line_start":350,"line_end":350,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13966721,"byte_end":13966724,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13966729,"byte_end":13966801,"line_start":352,"line_end":352,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13966806,"byte_end":13966859,"line_start":353,"line_end":353,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13966864,"byte_end":13966897,"line_start":354,"line_end":354,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13966902,"byte_end":13966919,"line_start":355,"line_end":355,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13966924,"byte_end":13966935,"line_start":356,"line_end":356,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13966940,"byte_end":13966943,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13966948,"byte_end":13966982,"line_start":358,"line_end":358,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13966987,"byte_end":13967023,"line_start":359,"line_end":359,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13967028,"byte_end":13967046,"line_start":360,"line_end":360,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13967051,"byte_end":13967068,"line_start":361,"line_end":361,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13967073,"byte_end":13967076,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13967081,"byte_end":13967152,"line_start":363,"line_end":363,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13967157,"byte_end":13967207,"line_start":364,"line_end":364,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13967212,"byte_end":13967245,"line_start":365,"line_end":365,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13967250,"byte_end":13967267,"line_start":366,"line_end":366,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13967272,"byte_end":13967283,"line_start":367,"line_end":367,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13967288,"byte_end":13967291,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13967296,"byte_end":13967332,"line_start":369,"line_end":369,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13967337,"byte_end":13967355,"line_start":370,"line_end":370,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13967360,"byte_end":13967377,"line_start":371,"line_end":371,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13967382,"byte_end":13967387,"line_start":372,"line_end":372,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13967392,"byte_end":13967399,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13967404,"byte_end":13967439,"line_start":374,"line_end":374,"column_start":5,"column_end":40}},{"value":"track_caller","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13967444,"byte_end":13967459,"line_start":375,"line_end":375,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7056},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13970107,"byte_end":13970115,"line_start":448,"line_end":448,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"pub fn block_on<F>(&Self, &crate::runtime::Runtime, F) -> F::Output where\nF: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13967652,"byte_end":13967726,"line_start":384,"line_end":384,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13967731,"byte_end":13967790,"line_start":385,"line_end":385,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13967795,"byte_end":13967798,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13967803,"byte_end":13967870,"line_start":387,"line_end":387,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13967875,"byte_end":13967948,"line_start":388,"line_end":388,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13967953,"byte_end":13968029,"line_start":389,"line_end":389,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968034,"byte_end":13968114,"line_start":390,"line_end":390,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968119,"byte_end":13968138,"line_start":391,"line_end":391,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968143,"byte_end":13968146,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968151,"byte_end":13968217,"line_start":393,"line_end":393,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968222,"byte_end":13968225,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968230,"byte_end":13968242,"line_start":395,"line_end":395,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968247,"byte_end":13968250,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968255,"byte_end":13968327,"line_start":397,"line_end":397,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968332,"byte_end":13968405,"line_start":398,"line_end":398,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968410,"byte_end":13968413,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968418,"byte_end":13968429,"line_start":400,"line_end":400,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968434,"byte_end":13968437,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968442,"byte_end":13968516,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968521,"byte_end":13968596,"line_start":403,"line_end":403,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968601,"byte_end":13968676,"line_start":404,"line_end":404,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968681,"byte_end":13968758,"line_start":405,"line_end":405,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968763,"byte_end":13968766,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968771,"byte_end":13968804,"line_start":407,"line_end":407,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968809,"byte_end":13968828,"line_start":408,"line_end":408,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968833,"byte_end":13968865,"line_start":409,"line_end":409,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968870,"byte_end":13968890,"line_start":410,"line_end":410,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968895,"byte_end":13968898,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968903,"byte_end":13968941,"line_start":412,"line_end":412,"column_start":5,"column_end":43}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968946,"byte_end":13968984,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&rt, async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13968989,"byte_end":13969020,"line_start":414,"line_end":414,"column_start":5,"column_end":36}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969025,"byte_end":13969069,"line_start":415,"line_end":415,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969074,"byte_end":13969133,"line_start":416,"line_end":416,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969138,"byte_end":13969160,"line_start":417,"line_end":417,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969165,"byte_end":13969180,"line_start":418,"line_end":418,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969185,"byte_end":13969203,"line_start":419,"line_end":419,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969208,"byte_end":13969219,"line_start":420,"line_end":420,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969224,"byte_end":13969252,"line_start":421,"line_end":421,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969257,"byte_end":13969263,"line_start":422,"line_end":422,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969268,"byte_end":13969275,"line_start":423,"line_end":423,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969280,"byte_end":13969314,"line_start":424,"line_end":424,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969319,"byte_end":13969326,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969331,"byte_end":13969363,"line_start":426,"line_end":426,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969368,"byte_end":13969388,"line_start":427,"line_end":427,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969393,"byte_end":13969396,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969401,"byte_end":13969439,"line_start":429,"line_end":429,"column_start":5,"column_end":43}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969444,"byte_end":13969482,"line_start":430,"line_end":430,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&rt, async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969487,"byte_end":13969518,"line_start":431,"line_end":431,"column_start":5,"column_end":36}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969523,"byte_end":13969567,"line_start":432,"line_end":432,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969572,"byte_end":13969631,"line_start":433,"line_end":433,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969636,"byte_end":13969658,"line_start":434,"line_end":434,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969663,"byte_end":13969684,"line_start":435,"line_end":435,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969689,"byte_end":13969707,"line_start":436,"line_end":436,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969712,"byte_end":13969723,"line_start":437,"line_end":437,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969728,"byte_end":13969756,"line_start":438,"line_end":438,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969761,"byte_end":13969767,"line_start":439,"line_end":439,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969772,"byte_end":13969779,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969784,"byte_end":13969787,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969792,"byte_end":13969827,"line_start":442,"line_end":442,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969832,"byte_end":13969899,"line_start":443,"line_end":443,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969904,"byte_end":13969959,"line_start":444,"line_end":444,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13969964,"byte_end":13970018,"line_start":445,"line_end":445,"column_start":5,"column_end":59}},{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13970023,"byte_end":13970045,"line_start":446,"line_end":446,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":7058},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13971363,"byte_end":13971372,"line_start":483,"line_end":483,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"pub async fn run_until<F, '_>(&'_ Self, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the local set, returning its output.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13970270,"byte_end":13970341,"line_start":455,"line_end":455,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13970346,"byte_end":13970349,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13970354,"byte_end":13970424,"line_start":457,"line_end":457,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13970429,"byte_end":13970505,"line_start":458,"line_end":458,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13970510,"byte_end":13970578,"line_start":459,"line_end":459,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13970583,"byte_end":13970663,"line_start":460,"line_end":460,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13970668,"byte_end":13970740,"line_start":461,"line_end":461,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13970745,"byte_end":13970820,"line_start":462,"line_end":462,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13970825,"byte_end":13970881,"line_start":463,"line_end":463,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13970886,"byte_end":13970889,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13970894,"byte_end":13970908,"line_start":465,"line_end":465,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13970913,"byte_end":13970916,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13970921,"byte_end":13970932,"line_start":467,"line_end":467,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13970937,"byte_end":13970957,"line_start":468,"line_end":468,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13970962,"byte_end":13970965,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13970970,"byte_end":13970988,"line_start":470,"line_end":470,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13970993,"byte_end":13971014,"line_start":471,"line_end":471,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13971019,"byte_end":13971066,"line_start":472,"line_end":472,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13971071,"byte_end":13971113,"line_start":473,"line_end":473,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13971118,"byte_end":13971140,"line_start":474,"line_end":474,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13971145,"byte_end":13971175,"line_start":475,"line_end":475,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13971180,"byte_end":13971198,"line_start":476,"line_end":476,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13971203,"byte_end":13971220,"line_start":477,"line_end":477,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13971225,"byte_end":13971230,"line_start":478,"line_end":478,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13971235,"byte_end":13971242,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13971247,"byte_end":13971250,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13971255,"byte_end":13971290,"line_start":481,"line_end":481,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13971295,"byte_end":13971345,"line_start":482,"line_end":482,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":7145},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981610,"byte_end":13981618,"line_start":96,"line_end":96,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":7147}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13980731,"byte_end":13980761,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13980762,"byte_end":13980765,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13980766,"byte_end":13980820,"line_start":66,"line_end":66,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13980821,"byte_end":13980824,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13980825,"byte_end":13980891,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13980892,"byte_end":13980959,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13980960,"byte_end":13981017,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981018,"byte_end":13981087,"line_start":71,"line_end":71,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981088,"byte_end":13981091,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981092,"byte_end":13981106,"line_start":73,"line_end":73,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981107,"byte_end":13981110,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981111,"byte_end":13981118,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981119,"byte_end":13981141,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981142,"byte_end":13981166,"line_start":77,"line_end":77,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981167,"byte_end":13981194,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981195,"byte_end":13981200,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981201,"byte_end":13981204,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981205,"byte_end":13981237,"line_start":81,"line_end":81,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981238,"byte_end":13981274,"line_start":82,"line_end":82,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981275,"byte_end":13981288,"line_start":83,"line_end":83,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981289,"byte_end":13981292,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981293,"byte_end":13981325,"line_start":85,"line_end":85,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981326,"byte_end":13981362,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981363,"byte_end":13981366,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981367,"byte_end":13981403,"line_start":88,"line_end":88,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981404,"byte_end":13981444,"line_start":89,"line_end":89,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981445,"byte_end":13981462,"line_start":90,"line_end":90,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981463,"byte_end":13981476,"line_start":91,"line_end":91,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981477,"byte_end":13981484,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981485,"byte_end":13981492,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: struct@std::thread::LocalKey","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981493,"byte_end":13981552,"line_start":94,"line_end":94,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":7147},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981660,"byte_end":13981665,"line_start":98,"line_end":98,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":7145},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7150},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982187,"byte_end":13982192,"line_start":119,"line_end":119,"column_start":12,"column_end":17},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"pub fn scope<F>(&'static Self, T, F) -> TaskLocalFuture<T, F> where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981743,"byte_end":13981807,"line_start":102,"line_end":102,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981812,"byte_end":13981815,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981820,"byte_end":13981881,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981886,"byte_end":13981889,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981894,"byte_end":13981910,"line_start":106,"line_end":106,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981915,"byte_end":13981918,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981923,"byte_end":13981930,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981935,"byte_end":13981957,"line_start":109,"line_end":109,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981962,"byte_end":13981986,"line_start":110,"line_end":110,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981991,"byte_end":13982018,"line_start":111,"line_end":111,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982023,"byte_end":13982028,"line_start":112,"line_end":112,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982033,"byte_end":13982036,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982041,"byte_end":13982073,"line_start":114,"line_end":114,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982078,"byte_end":13982133,"line_start":115,"line_end":115,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982138,"byte_end":13982151,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982156,"byte_end":13982163,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982168,"byte_end":13982175,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7152},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982885,"byte_end":13982895,"line_start":148,"line_end":148,"column_start":12,"column_end":22},"name":"sync_scope","qualname":"<LocalKey<T>>::sync_scope","value":"pub fn sync_scope<F, R>(&'static Self, T, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the closure `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the closure `F`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982449,"byte_end":13982514,"line_start":131,"line_end":131,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982519,"byte_end":13982522,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982527,"byte_end":13982588,"line_start":133,"line_end":133,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982593,"byte_end":13982596,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982601,"byte_end":13982617,"line_start":135,"line_end":135,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982622,"byte_end":13982625,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982630,"byte_end":13982637,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982642,"byte_end":13982664,"line_start":138,"line_end":138,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982669,"byte_end":13982693,"line_start":139,"line_end":139,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982698,"byte_end":13982725,"line_start":140,"line_end":140,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982730,"byte_end":13982735,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982740,"byte_end":13982743,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ NUMBER.sync_scope(1, || {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982748,"byte_end":13982777,"line_start":143,"line_end":143,"column_start":5,"column_end":34}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982782,"byte_end":13982837,"line_start":144,"line_end":144,"column_start":5,"column_end":60}},{"value":"/ });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982842,"byte_end":13982849,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982854,"byte_end":13982861,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13982866,"byte_end":13982873,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7156},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13983466,"byte_end":13983470,"line_start":168,"line_end":168,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13983217,"byte_end":13983283,"line_start":162,"line_end":162,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13983288,"byte_end":13983291,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13983296,"byte_end":13983308,"line_start":164,"line_end":164,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13983313,"byte_end":13983316,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13983321,"byte_end":13983382,"line_start":166,"line_end":166,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13983387,"byte_end":13983454,"line_start":167,"line_end":167,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7159},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13983958,"byte_end":13983966,"line_start":183,"line_end":183,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13983711,"byte_end":13983777,"line_start":178,"line_end":178,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13983782,"byte_end":13983785,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the associated key is not present, this","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13983790,"byte_end":13983856,"line_start":180,"line_end":180,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13983861,"byte_end":13983926,"line_start":181,"line_end":181,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13983931,"byte_end":13983946,"line_start":182,"line_end":182,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7165},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13984426,"byte_end":13984429,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"pub fn get(&'static Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13984321,"byte_end":13984363,"line_start":198,"line_end":198,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13984368,"byte_end":13984414,"line_start":199,"line_end":199,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":7503},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13985273,"byte_end":13985288,"line_start":233,"line_end":233,"column_start":16,"column_end":31},"name":"TaskLocalFuture","qualname":"::task::task_local::TaskLocalFuture","value":"TaskLocalFuture {  }","parent":null,"children":[{"krate":0,"index":7506},{"krate":0,"index":7507},{"krate":0,"index":7508},{"krate":0,"index":7509}],"decl_id":null,"docs":" A future that sets a value `T` of a task local for the future `F` during\n its execution.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7268},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13986638,"byte_end":13986649,"line_start":286,"line_end":286,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":7269}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13986513,"byte_end":13986588,"line_start":284,"line_end":284,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":7470},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/unconstrained.rs","byte_start":13987339,"byte_end":13987352,"line_start":10,"line_end":10,"column_start":16,"column_end":29},"name":"Unconstrained","qualname":"::task::unconstrained::Unconstrained","value":"Unconstrained {  }","parent":null,"children":[{"krate":0,"index":7472}],"decl_id":null,"docs":" Future for the [`unconstrained`](unconstrained) method.\n","sig":null,"attributes":[{"value":"must_use = \"Unconstrained does nothing unless polled\"","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14015681,"byte_end":14015690,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":7221},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/unconstrained.rs","byte_start":13988266,"byte_end":13988279,"line_start":43,"line_end":43,"column_start":8,"column_end":21},"name":"unconstrained","qualname":"::task::unconstrained::unconstrained","value":"pub fn unconstrained<F>(F) -> Unconstrained<F>","parent":null,"children":[],"decl_id":null,"docs":" Turn off cooperative scheduling for a future. The future will never be forced to yield by\n Tokio. Using this exposes your service to starvation if the unconstrained future never yields\n otherwise.","sig":null,"attributes":[{"value":"/ Turn off cooperative scheduling for a future. The future will never be forced to yield by","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/unconstrained.rs","byte_start":13987923,"byte_end":13988016,"line_start":37,"line_end":37,"column_start":1,"column_end":94}},{"value":"/ Tokio. Using this exposes your service to starvation if the unconstrained future never yields","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/unconstrained.rs","byte_start":13988017,"byte_end":13988114,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ otherwise.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/unconstrained.rs","byte_start":13988115,"byte_end":13988129,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/unconstrained.rs","byte_start":13988130,"byte_end":13988133,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ See also the usage example in the [task module](index.html#unconstrained).","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/unconstrained.rs","byte_start":13988134,"byte_end":13988212,"line_start":41,"line_end":41,"column_start":1,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":7230},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","byte_start":146645,"byte_end":146652,"line_start":321,"line_end":321,"column_start":13,"column_end":20},"name":"futures","qualname":"::task::futures","value":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":7231}],"decl_id":null,"docs":" Task-related futures.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/cfg.rs","byte_start":27518,"byte_end":27540,"line_start":321,"line_end":321,"column_start":13,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":152606,"byte_end":152612,"line_start":47,"line_end":47,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":152515,"byte_end":152544,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":152549,"byte_end":152552,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":152557,"byte_end":152596,"line_start":46,"line_end":46,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":1036},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":152643,"byte_end":152649,"line_start":50,"line_end":50,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":" Node type.\n","sig":null,"attributes":[{"value":"/ Node type.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":152619,"byte_end":152633,"line_start":49,"line_end":49,"column_start":5,"column_end":19}}]},{"kind":"Function","id":{"krate":0,"index":1089},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/rand.rs","byte_start":173120,"byte_end":173132,"line_start":58,"line_end":58,"column_start":8,"column_end":20},"name":"thread_rng_n","qualname":"::util::rand::thread_rng_n","value":"pub fn thread_rng_n(u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"macros\"))","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/rand.rs","byte_start":173005,"byte_end":173036,"line_start":55,"line_end":55,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":1099},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":18242,"byte_end":18248,"line_start":495,"line_end":495,"column_start":9,"column_end":15},"name":"stream","qualname":"::stream","value":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","parent":null,"children":[],"decl_id":null,"docs":" Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0\n release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]\n crate.","sig":null,"attributes":[{"value":"/ Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":16746,"byte_end":16827,"line_start":458,"line_end":458,"column_start":1,"column_end":82}},{"value":"/ release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":16828,"byte_end":16917,"line_start":459,"line_end":459,"column_start":1,"column_end":90}},{"value":"/ crate.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":16918,"byte_end":16928,"line_start":460,"line_end":460,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":16929,"byte_end":16932,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/ # Why was `Stream` not included in Tokio 1.0?","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":16933,"byte_end":16982,"line_start":462,"line_end":462,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":16983,"byte_end":16986,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ Originally, we had planned to ship Tokio 1.0 with a stable `Stream` type","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":16987,"byte_end":17063,"line_start":464,"line_end":464,"column_start":1,"column_end":77}},{"value":"/ but unfortunately the [RFC] had not been merged in time for `Stream` to","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":17064,"byte_end":17139,"line_start":465,"line_end":465,"column_start":1,"column_end":76}},{"value":"/ reach `std` on a stable compiler in time for the 1.0 release of Tokio. For","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":17140,"byte_end":17218,"line_start":466,"line_end":466,"column_start":1,"column_end":79}},{"value":"/ this reason, the team has decided to move all `Stream` based utilities to","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":17219,"byte_end":17296,"line_start":467,"line_end":467,"column_start":1,"column_end":78}},{"value":"/ the [`tokio-stream`] crate. While this is not ideal, once `Stream` has made","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":17297,"byte_end":17376,"line_start":468,"line_end":468,"column_start":1,"column_end":80}},{"value":"/ it into the standard library and the MSRV period has passed, we will implement","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":17377,"byte_end":17459,"line_start":469,"line_end":469,"column_start":1,"column_end":83}},{"value":"/ stream for our different types.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":17460,"byte_end":17495,"line_start":470,"line_end":470,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":17496,"byte_end":17499,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ While this may seem unfortunate, not all is lost as you can get much of the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":17500,"byte_end":17579,"line_start":472,"line_end":472,"column_start":1,"column_end":80}},{"value":"/ `Stream` support with `async/await` and `while let` loops. It is also possible","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":17580,"byte_end":17662,"line_start":473,"line_end":473,"column_start":1,"column_end":83}},{"value":"/ to create a `impl Stream` from `async fn` using the [`async-stream`] crate.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":17663,"byte_end":17742,"line_start":474,"line_end":474,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":17743,"byte_end":17746,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ [`tokio-stream`]: https://docs.rs/tokio-stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":17747,"byte_end":17797,"line_start":476,"line_end":476,"column_start":1,"column_end":51}},{"value":"/ [`async-stream`]: https://docs.rs/async-stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":17798,"byte_end":17848,"line_start":477,"line_end":477,"column_start":1,"column_end":51}},{"value":"/ [RFC]: https://github.com/rust-lang/rfcs/pull/2996","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":17849,"byte_end":17903,"line_start":478,"line_end":478,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":17904,"byte_end":17907,"line_start":479,"line_end":479,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":17908,"byte_end":17921,"line_start":480,"line_end":480,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":17922,"byte_end":17925,"line_start":481,"line_end":481,"column_start":1,"column_end":4}},{"value":"/ Convert a [`sync::mpsc::Receiver`] to an `impl Stream`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":17926,"byte_end":17985,"line_start":482,"line_end":482,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":17986,"byte_end":17989,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":17990,"byte_end":18008,"line_start":484,"line_end":484,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":18009,"byte_end":18035,"line_start":485,"line_end":485,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":18036,"byte_end":18039,"line_start":486,"line_end":486,"column_start":1,"column_end":4}},{"value":"/ let (tx, mut rx) = mpsc::channel::<usize>(16);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":18040,"byte_end":18090,"line_start":487,"line_end":487,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":18091,"byte_end":18094,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/ let stream = async_stream::stream! {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":18095,"byte_end":18135,"line_start":489,"line_end":489,"column_start":1,"column_end":41}},{"value":"/     while let Some(item) = rx.recv().await {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":18136,"byte_end":18184,"line_start":490,"line_end":490,"column_start":1,"column_end":49}},{"value":"/         yield item;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":18185,"byte_end":18208,"line_start":491,"line_end":491,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":18209,"byte_end":18218,"line_start":492,"line_end":492,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":18219,"byte_end":18225,"line_start":493,"line_end":493,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":18226,"byte_end":18233,"line_start":494,"line_end":494,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/scoped_tls.rs","byte_start":35842,"byte_end":35851,"line_start":30,"line_end":30,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/scoped_tls.rs","byte_start":35867,"byte_end":35876,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/scoped_tls.rs","byte_start":36226,"byte_end":36231,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":38292,"byte_end":38301,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":38465,"byte_end":38474,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":39661,"byte_end":39670,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/poll_fn.rs","byte_start":40447,"byte_end":40453,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/poll_fn.rs","byte_start":40667,"byte_end":40673,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/poll_fn.rs","byte_start":40815,"byte_end":40821,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/blocking.rs","byte_start":13292535,"byte_end":13292543,"line_start":38,"line_end":38,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/blocking.rs","byte_start":13292816,"byte_end":13292824,"line_start":49,"line_end":49,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/blocking.rs","byte_start":13294419,"byte_end":13294427,"line_start":100,"line_end":100,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1179},{"krate":0,"index":1182},{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/blocking.rs","byte_start":13297152,"byte_end":13297155,"line_start":190,"line_end":190,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":53820,"byte_end":53823,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":53983,"byte_end":53986,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":54615,"byte_end":54621,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":57688,"byte_end":57691,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1230}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":57834,"byte_end":57837,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":58506,"byte_end":58512,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":61506,"byte_end":61509,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1232},{"krate":0,"index":1233}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":61652,"byte_end":61655,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":62046,"byte_end":62052,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":71810,"byte_end":71813,"line_start":217,"line_end":217,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":71961,"byte_end":71964,"line_start":225,"line_end":225,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":72841,"byte_end":72844,"line_start":259,"line_end":259,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":73642,"byte_end":73648,"line_start":290,"line_end":290,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":74451,"byte_end":74457,"line_start":320,"line_end":320,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":75263,"byte_end":75269,"line_start":350,"line_end":350,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":76070,"byte_end":76076,"line_start":380,"line_end":380,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":77950,"byte_end":77957,"line_start":29,"line_end":29,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":86440,"byte_end":86447,"line_start":269,"line_end":269,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/stdio_common.rs","byte_start":13299744,"byte_end":13299772,"line_start":16,"line_end":16,"column_start":9,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/stdio_common.rs","byte_start":13300033,"byte_end":13300061,"line_start":28,"line_end":28,"column_start":35,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1267},{"krate":0,"index":1270},{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/stderr.rs","byte_start":13309181,"byte_end":13309187,"line_start":77,"line_end":77,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/stderr.rs","byte_start":13309495,"byte_end":13309501,"line_start":90,"line_end":90,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/stdin.rs","byte_start":13311920,"byte_end":13311925,"line_start":52,"line_end":52,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1331}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/stdin.rs","byte_start":13312229,"byte_end":13312234,"line_start":65,"line_end":65,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/stdout.rs","byte_start":13314905,"byte_end":13314911,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1364}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/stdout.rs","byte_start":13315219,"byte_end":13315225,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13317328,"byte_end":13317336,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1450},{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13318252,"byte_end":13318261,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1454}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13318512,"byte_end":13318520,"line_start":100,"line_end":100,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1457}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13318815,"byte_end":13318824,"line_start":111,"line_end":111,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13319503,"byte_end":13319508,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1465}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13319964,"byte_end":13319969,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13320222,"byte_end":13320227,"line_start":159,"line_end":159,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13320350,"byte_end":13320358,"line_start":165,"line_end":165,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13320395,"byte_end":13320404,"line_start":166,"line_end":166,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13320441,"byte_end":13320449,"line_start":167,"line_end":167,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13320486,"byte_end":13320495,"line_start":168,"line_end":168,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13320538,"byte_end":13320546,"line_start":170,"line_end":170,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1482}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13320714,"byte_end":13320723,"line_start":176,"line_end":176,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1485}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/seek.rs","byte_start":13321680,"byte_end":13321684,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1530},{"krate":0,"index":1531}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_buf_read_ext.rs","byte_start":13338166,"byte_end":13338167,"line_start":351,"line_end":351,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13384074,"byte_end":13384075,"line_start":1294,"line_end":1294,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_seek_ext.rs","byte_start":13386870,"byte_end":13386871,"line_start":93,"line_end":93,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13432777,"byte_end":13432778,"line_start":1293,"line_end":1293,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13434231,"byte_end":13434240,"line_start":37,"line_end":37,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1986},{"krate":0,"index":1987},{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1993}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13436138,"byte_end":13436147,"line_start":100,"line_end":100,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1996}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13436957,"byte_end":13436966,"line_start":122,"line_end":122,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1999},{"krate":0,"index":2000}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13439160,"byte_end":13439169,"line_start":176,"line_end":176,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2003},{"krate":0,"index":2004}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13443130,"byte_end":13443139,"line_start":261,"line_end":261,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13443959,"byte_end":13443968,"line_start":291,"line_end":291,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2014}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13445495,"byte_end":13445504,"line_start":25,"line_end":25,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13447341,"byte_end":13447350,"line_start":81,"line_end":81,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2075}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13447492,"byte_end":13447501,"line_start":87,"line_end":87,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2078}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13448381,"byte_end":13448390,"line_start":121,"line_end":121,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13449227,"byte_end":13449236,"line_start":151,"line_end":151,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2088}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13450371,"byte_end":13450380,"line_start":179,"line_end":179,"column_start":60,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2091},{"krate":0,"index":2092}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13450722,"byte_end":13450731,"line_start":189,"line_end":189,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2095},{"krate":0,"index":2096}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13452739,"byte_end":13452748,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2158}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13455067,"byte_end":13455076,"line_start":118,"line_end":118,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13458995,"byte_end":13459004,"line_start":226,"line_end":226,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2171},{"krate":0,"index":2172}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13460545,"byte_end":13460554,"line_start":269,"line_end":269,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2175}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13460808,"byte_end":13460817,"line_start":279,"line_end":279,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2178},{"krate":0,"index":2179}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13461104,"byte_end":13461113,"line_start":289,"line_end":289,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2182}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13462291,"byte_end":13462296,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13463436,"byte_end":13463441,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2229}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13463720,"byte_end":13463725,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2233}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13464311,"byte_end":13464316,"line_start":107,"line_end":107,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2237},{"krate":0,"index":2238}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy.rs","byte_start":13465465,"byte_end":13465475,"line_start":18,"line_end":18,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2267},{"krate":0,"index":2268}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy.rs","byte_start":13470127,"byte_end":13470131,"line_start":162,"line_end":162,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2274},{"krate":0,"index":2275}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13471711,"byte_end":13471728,"line_start":52,"line_end":52,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2331},{"krate":0,"index":2332}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_buf.rs","byte_start":13476214,"byte_end":13476221,"line_start":67,"line_end":67,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2368},{"krate":0,"index":2369}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/empty.rs","byte_start":13478488,"byte_end":13478493,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2401}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/empty.rs","byte_start":13478760,"byte_end":13478765,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2403},{"krate":0,"index":2404}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/empty.rs","byte_start":13479051,"byte_end":13479056,"line_start":72,"line_end":72,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2406}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/flush.rs","byte_start":13480512,"byte_end":13480517,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2444},{"krate":0,"index":2445}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13481849,"byte_end":13481854,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2476},{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2485}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13483192,"byte_end":13483197,"line_start":94,"line_end":94,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2488}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13487940,"byte_end":13487952,"line_start":101,"line_end":101,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2532}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13488496,"byte_end":13488508,"line_start":117,"line_end":117,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2534},{"krate":0,"index":2535},{"krate":0,"index":2536}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13489206,"byte_end":13489218,"line_start":144,"line_end":144,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2538}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13489414,"byte_end":13489418,"line_start":154,"line_end":154,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2540},{"krate":0,"index":2541},{"krate":0,"index":2542},{"krate":0,"index":2543},{"krate":0,"index":2544}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13491645,"byte_end":13491649,"line_start":229,"line_end":229,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3596}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13492352,"byte_end":13492356,"line_start":257,"line_end":257,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3597},{"krate":0,"index":2547},{"krate":0,"index":2548}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read.rs","byte_start":13494543,"byte_end":13494547,"line_start":43,"line_end":43,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2594},{"krate":0,"index":2595}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_buf.rs","byte_start":13495681,"byte_end":13495688,"line_start":35,"line_end":35,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2632},{"krate":0,"index":2633}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_exact.rs","byte_start":13498069,"byte_end":13498078,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2679},{"krate":0,"index":2680}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_line.rs","byte_start":13507266,"byte_end":13507274,"line_start":111,"line_end":111,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2766},{"krate":0,"index":2767}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/fill_buf.rs","byte_start":13508273,"byte_end":13508280,"line_start":31,"line_end":31,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2799},{"krate":0,"index":2800}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_to_end.rs","byte_start":13512932,"byte_end":13512941,"line_start":101,"line_end":101,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2851},{"krate":0,"index":2852}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/vec_with_initialized.rs","byte_start":13513575,"byte_end":13513578,"line_start":13,"line_end":13,"column_start":23,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/vec_with_initialized.rs","byte_start":13514286,"byte_end":13514304,"line_start":33,"line_end":33,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2864}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/vec_with_initialized.rs","byte_start":13514484,"byte_end":13514502,"line_start":41,"line_end":41,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2867},{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2872}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_to_string.rs","byte_start":13519850,"byte_end":13519862,"line_start":67,"line_end":67,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2924},{"krate":0,"index":2925}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_until.rs","byte_start":13522166,"byte_end":13522175,"line_start":72,"line_end":72,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2962},{"krate":0,"index":2963}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/repeat.rs","byte_start":13523753,"byte_end":13523759,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2986}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/shutdown.rs","byte_start":13525138,"byte_end":13525146,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3024},{"krate":0,"index":3025}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/sink.rs","byte_start":13526786,"byte_end":13526790,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3047},{"krate":0,"index":3048},{"krate":0,"index":3049}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/sink.rs","byte_start":13527300,"byte_end":13527304,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3051}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13528461,"byte_end":13528466,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3089}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13529205,"byte_end":13529210,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3098}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13531508,"byte_end":13531512,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3137},{"krate":0,"index":3138},{"krate":0,"index":3139},{"krate":0,"index":3140},{"krate":0,"index":3141},{"krate":0,"index":3142}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13533140,"byte_end":13533144,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3145}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13533883,"byte_end":13533887,"line_start":106,"line_end":106,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3148},{"krate":0,"index":3149}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write.rs","byte_start":13535686,"byte_end":13535691,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3184},{"krate":0,"index":3185}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_vectored.rs","byte_start":13536856,"byte_end":13536869,"line_start":37,"line_end":37,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3222},{"krate":0,"index":3223}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_all.rs","byte_start":13537918,"byte_end":13537926,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3258},{"krate":0,"index":3259}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_buf.rs","byte_start":13539403,"byte_end":13539411,"line_start":37,"line_end":37,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3296},{"krate":0,"index":3297}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_all_buf.rs","byte_start":13540738,"byte_end":13540749,"line_start":37,"line_end":37,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3334},{"krate":0,"index":3335}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":90111,"byte_end":90121,"line_start":50,"line_end":50,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":90161,"byte_end":90171,"line_start":52,"line_end":52,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":90480,"byte_end":90492,"line_start":64,"line_end":64,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":90532,"byte_end":90544,"line_start":66,"line_end":66,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":90841,"byte_end":90853,"line_start":77,"line_end":77,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":90893,"byte_end":90905,"line_start":79,"line_end":79,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_ptr.rs","byte_start":102250,"byte_end":102259,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_ptr.rs","byte_start":102433,"byte_end":102442,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_ptr.rs","byte_start":102589,"byte_end":102598,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_ptr.rs","byte_start":102711,"byte_end":102720,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u16.rs","byte_start":103064,"byte_end":103073,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u16.rs","byte_start":103098,"byte_end":103107,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u16.rs","byte_start":103117,"byte_end":103126,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u16.rs","byte_start":103618,"byte_end":103627,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u16.rs","byte_start":103912,"byte_end":103921,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u32.rs","byte_start":104262,"byte_end":104271,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u32.rs","byte_start":104296,"byte_end":104305,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u32.rs","byte_start":104315,"byte_end":104324,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u32.rs","byte_start":104509,"byte_end":104518,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u32.rs","byte_start":104803,"byte_end":104812,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u8.rs","byte_start":107484,"byte_end":107492,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u8.rs","byte_start":107517,"byte_end":107525,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u8.rs","byte_start":107535,"byte_end":107543,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u8.rs","byte_start":107724,"byte_end":107732,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u8.rs","byte_start":108016,"byte_end":108024,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_usize.rs","byte_start":108364,"byte_end":108375,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_usize.rs","byte_start":108400,"byte_end":108411,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_usize.rs","byte_start":108421,"byte_end":108432,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_usize.rs","byte_start":109121,"byte_end":109132,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_usize.rs","byte_start":109422,"byte_end":109433,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_usize.rs","byte_start":109597,"byte_end":109608,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/mutex.rs","byte_start":109941,"byte_end":109946,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/unsafe_cell.rs","byte_start":110624,"byte_end":110634,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/either.rs","byte_start":13546079,"byte_end":13546085,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4013},{"krate":0,"index":4014},{"krate":0,"index":4015},{"krate":0,"index":4016},{"krate":0,"index":4017},{"krate":0,"index":4018}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/either.rs","byte_start":13547042,"byte_end":13547048,"line_start":50,"line_end":50,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4022}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/either.rs","byte_start":13547262,"byte_end":13547268,"line_start":63,"line_end":63,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4026}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/thread.rs","byte_start":115833,"byte_end":115843,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/thread.rs","byte_start":116108,"byte_end":116118,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/thread.rs","byte_start":116644,"byte_end":116649,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/thread.rs","byte_start":121415,"byte_end":121425,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/thread.rs","byte_start":121534,"byte_end":121546,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/thread.rs","byte_start":121901,"byte_end":121917,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":858},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/thread.rs","byte_start":123182,"byte_end":123198,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/thread.rs","byte_start":123793,"byte_end":123805,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/thread.rs","byte_start":123985,"byte_end":123990,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":885},{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/mod.rs","byte_start":114880,"byte_end":114883,"line_start":107,"line_end":107,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/mod.rs","byte_start":114972,"byte_end":114975,"line_start":113,"line_end":113,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/enter.rs","byte_start":13570085,"byte_end":13570097,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4073}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/enter.rs","byte_start":13571849,"byte_end":13571854,"line_start":72,"line_end":72,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4939}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/enter.rs","byte_start":13573045,"byte_end":13573066,"line_start":114,"line_end":114,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4948}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/enter.rs","byte_start":13573782,"byte_end":13573787,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4953},{"krate":0,"index":4958}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/enter.rs","byte_start":13575427,"byte_end":13575432,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4077}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/enter.rs","byte_start":13575562,"byte_end":13575567,"line_start":198,"line_end":198,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4079}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/core.rs","byte_start":13595064,"byte_end":13595070,"line_start":89,"line_end":89,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/core.rs","byte_start":13595095,"byte_end":13595101,"line_start":90,"line_end":90,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/core.rs","byte_start":13595460,"byte_end":13595464,"line_start":105,"line_end":105,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4163}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/core.rs","byte_start":13596483,"byte_end":13596492,"line_start":135,"line_end":135,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4166},{"krate":0,"index":4169},{"krate":0,"index":4171},{"krate":0,"index":4172},{"krate":0,"index":4173},{"krate":0,"index":4178}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/core.rs","byte_start":13599191,"byte_end":13599197,"line_start":223,"line_end":223,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4977}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/core.rs","byte_start":13599359,"byte_end":13599365,"line_start":230,"line_end":230,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4181},{"krate":0,"index":4183}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/core.rs","byte_start":13599908,"byte_end":13599915,"line_start":245,"line_end":245,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4186},{"krate":0,"index":4188},{"krate":0,"index":4190}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13600891,"byte_end":13600900,"line_start":20,"line_end":20,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4221},{"krate":0,"index":4222},{"krate":0,"index":4223},{"krate":0,"index":4224},{"krate":0,"index":4225},{"krate":0,"index":4226}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13604186,"byte_end":13604195,"line_start":134,"line_end":134,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4228}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13604479,"byte_end":13604488,"line_start":143,"line_end":143,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4230}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13604795,"byte_end":13604804,"line_start":152,"line_end":152,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13604838,"byte_end":13604843,"line_start":154,"line_end":154,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4233}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/harness.rs","byte_start":13605616,"byte_end":13605623,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4305},{"krate":0,"index":4306},{"krate":0,"index":4307},{"krate":0,"index":4308},{"krate":0,"index":4309}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/harness.rs","byte_start":13606178,"byte_end":13606185,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4313},{"krate":0,"index":4314},{"krate":0,"index":4322},{"krate":0,"index":4323},{"krate":0,"index":4324},{"krate":0,"index":4325},{"krate":0,"index":4326},{"krate":0,"index":4328},{"krate":0,"index":4329},{"krate":0,"index":4333},{"krate":0,"index":4337},{"krate":0,"index":4338},{"krate":0,"index":4340},{"krate":0,"index":4341}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/harness.rs","byte_start":13621970,"byte_end":13621975,"line_start":462,"line_end":462,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4367}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/inject.rs","byte_start":13670958,"byte_end":13670964,"line_start":35,"line_end":35,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/inject.rs","byte_start":13670995,"byte_end":13671001,"line_start":36,"line_end":36,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/inject.rs","byte_start":13671026,"byte_end":13671032,"line_start":38,"line_end":38,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5020},{"krate":0,"index":5021},{"krate":0,"index":5022},{"krate":0,"index":5023},{"krate":0,"index":5024},{"krate":0,"index":5025},{"krate":0,"index":5026},{"krate":0,"index":5029},{"krate":0,"index":5030}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/inject.rs","byte_start":13675700,"byte_end":13675706,"line_start":204,"line_end":204,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5033}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13627294,"byte_end":13627304,"line_start":152,"line_end":152,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13627341,"byte_end":13627351,"line_start":153,"line_end":153,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13627382,"byte_end":13627392,"line_start":155,"line_end":155,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13627425,"byte_end":13627435,"line_start":156,"line_end":156,"column_start":27,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13627451,"byte_end":13627461,"line_start":158,"line_end":158,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4419},{"krate":0,"index":4420},{"krate":0,"index":4421},{"krate":0,"index":4422}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13631262,"byte_end":13631272,"line_start":279,"line_end":279,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13631299,"byte_end":13631309,"line_start":281,"line_end":281,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4427},{"krate":0,"index":4428}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13632535,"byte_end":13632545,"line_start":320,"line_end":320,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4431}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13632811,"byte_end":13632821,"line_start":332,"line_end":332,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4434}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/list.rs","byte_start":13635234,"byte_end":13635244,"line_start":70,"line_end":70,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4489},{"krate":0,"index":4490},{"krate":0,"index":4492},{"krate":0,"index":4493},{"krate":0,"index":4494},{"krate":0,"index":4495}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/list.rs","byte_start":13638299,"byte_end":13638314,"line_start":175,"line_end":175,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4498},{"krate":0,"index":4499},{"krate":0,"index":4502},{"krate":0,"index":4505},{"krate":0,"index":4507},{"krate":0,"index":4508},{"krate":0,"index":4512},{"krate":0,"index":4514}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/raw.rs","byte_start":13643686,"byte_end":13643693,"line_start":54,"line_end":54,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4571},{"krate":0,"index":4574},{"krate":0,"index":4575},{"krate":0,"index":4576},{"krate":0,"index":4577},{"krate":0,"index":4578},{"krate":0,"index":4579},{"krate":0,"index":4580},{"krate":0,"index":4581},{"krate":0,"index":4582},{"krate":0,"index":4583},{"krate":0,"index":4584},{"krate":0,"index":4585}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/raw.rs","byte_start":13646017,"byte_end":13646024,"line_start":134,"line_end":134,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4587}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/raw.rs","byte_start":13646114,"byte_end":13646121,"line_start":140,"line_end":140,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/state.rs","byte_start":13650102,"byte_end":13650107,"line_start":98,"line_end":98,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4682},{"krate":0,"index":4683},{"krate":0,"index":4684},{"krate":0,"index":4686},{"krate":0,"index":4688},{"krate":0,"index":4690},{"krate":0,"index":4691},{"krate":0,"index":4693},{"krate":0,"index":4695},{"krate":0,"index":4697},{"krate":0,"index":4699},{"krate":0,"index":4705},{"krate":0,"index":4707},{"krate":0,"index":4709},{"krate":0,"index":4711},{"krate":0,"index":4718},{"krate":0,"index":4719},{"krate":0,"index":4720},{"krate":0,"index":4723}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/state.rs","byte_start":13664148,"byte_end":13664156,"line_start":497,"line_end":497,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4726},{"krate":0,"index":4727},{"krate":0,"index":4728},{"krate":0,"index":4729},{"krate":0,"index":4730},{"krate":0,"index":4731},{"krate":0,"index":4732},{"krate":0,"index":4733},{"krate":0,"index":4734},{"krate":0,"index":4735},{"krate":0,"index":4736},{"krate":0,"index":4737},{"krate":0,"index":4738},{"krate":0,"index":4739},{"krate":0,"index":4740},{"krate":0,"index":4741},{"krate":0,"index":4742},{"krate":0,"index":4743}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/state.rs","byte_start":13665929,"byte_end":13665934,"line_start":576,"line_end":576,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4745}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/state.rs","byte_start":13666093,"byte_end":13666101,"line_start":583,"line_end":583,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4747}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/waker.rs","byte_start":13667931,"byte_end":13667939,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4797},{"krate":0,"index":4798}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13583790,"byte_end":13583794,"line_start":215,"line_end":215,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13583825,"byte_end":13583829,"line_start":216,"line_end":216,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13584113,"byte_end":13584121,"line_start":224,"line_end":224,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13584162,"byte_end":13584170,"line_start":225,"line_end":225,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13584698,"byte_end":13584709,"line_start":243,"line_end":243,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13584740,"byte_end":13584751,"line_start":244,"line_end":244,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13587217,"byte_end":13587221,"line_start":321,"line_end":321,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4869},{"krate":0,"index":4870}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13587473,"byte_end":13587481,"line_start":334,"line_end":334,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4873}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13587598,"byte_end":13587606,"line_start":341,"line_end":341,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5086}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13587758,"byte_end":13587762,"line_start":347,"line_end":347,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5089}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13587945,"byte_end":13587953,"line_start":355,"line_end":355,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5092}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13588073,"byte_end":13588077,"line_start":362,"line_end":362,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4876}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13588296,"byte_end":13588309,"line_start":371,"line_end":371,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4879}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13588475,"byte_end":13588486,"line_start":380,"line_end":380,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4882},{"krate":0,"index":4883},{"krate":0,"index":4884}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13589488,"byte_end":13589492,"line_start":423,"line_end":423,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4887}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13589735,"byte_end":13589746,"line_start":433,"line_end":433,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4890}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13589996,"byte_end":13590000,"line_start":443,"line_end":443,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4893}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13590152,"byte_end":13590160,"line_start":449,"line_end":449,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4896}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13590377,"byte_end":13590381,"line_start":458,"line_end":458,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4899},{"krate":0,"index":4900},{"krate":0,"index":4901},{"krate":0,"index":4902},{"krate":0,"index":4903}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13590886,"byte_end":13590888,"line_start":476,"line_end":476,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4906}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13590990,"byte_end":13590992,"line_start":482,"line_end":482,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":5093},{"krate":0,"index":4908}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/metrics/mock.rs","byte_start":13677203,"byte_end":13677219,"line_start":9,"line_end":9,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5118},{"krate":0,"index":5119}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/metrics/mock.rs","byte_start":13677400,"byte_end":13677413,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5121},{"krate":0,"index":5122}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/metrics/mock.rs","byte_start":13677538,"byte_end":13677550,"line_start":26,"line_end":26,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5124},{"krate":0,"index":5125},{"krate":0,"index":5126},{"krate":0,"index":5127},{"krate":0,"index":5128},{"krate":0,"index":5129}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/metrics/mock.rs","byte_start":13677907,"byte_end":13677919,"line_start":39,"line_end":39,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5141},{"krate":0,"index":5142}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/basic_scheduler.rs","byte_start":13681506,"byte_end":13681520,"line_start":119,"line_end":119,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5276},{"krate":0,"index":5277},{"krate":0,"index":5278},{"krate":0,"index":5281},{"krate":0,"index":5282}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/basic_scheduler.rs","byte_start":13684486,"byte_end":13684500,"line_start":218,"line_end":218,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5284}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/basic_scheduler.rs","byte_start":13686036,"byte_end":13686050,"line_start":262,"line_end":262,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5287}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/basic_scheduler.rs","byte_start":13686210,"byte_end":13686214,"line_start":270,"line_end":270,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5289},{"krate":0,"index":5290}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/basic_scheduler.rs","byte_start":13686773,"byte_end":13686780,"line_start":292,"line_end":292,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5292},{"krate":0,"index":5296},{"krate":0,"index":5300},{"krate":0,"index":5302}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/basic_scheduler.rs","byte_start":13689590,"byte_end":13689597,"line_start":372,"line_end":372,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5306},{"krate":0,"index":5308},{"krate":0,"index":5309},{"krate":0,"index":5310},{"krate":0,"index":5311}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/basic_scheduler.rs","byte_start":13691443,"byte_end":13691450,"line_start":434,"line_end":434,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5313}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/basic_scheduler.rs","byte_start":13691618,"byte_end":13691621,"line_start":442,"line_end":442,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5315},{"krate":0,"index":5316}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/basic_scheduler.rs","byte_start":13692825,"byte_end":13692831,"line_start":475,"line_end":475,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5319},{"krate":0,"index":5320}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/basic_scheduler.rs","byte_start":13693313,"byte_end":13693322,"line_start":496,"line_end":496,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5326},{"krate":0,"index":5334}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/basic_scheduler.rs","byte_start":13695918,"byte_end":13695927,"line_start":573,"line_end":573,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5339}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/blocking/pool.rs","byte_start":13699331,"byte_end":13699335,"line_start":85,"line_end":85,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5426},{"krate":0,"index":5427},{"krate":0,"index":5428}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/blocking/pool.rs","byte_start":13700934,"byte_end":13700946,"line_start":138,"line_end":138,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5434},{"krate":0,"index":5435},{"krate":0,"index":5436}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/blocking/pool.rs","byte_start":13703502,"byte_end":13703514,"line_start":208,"line_end":208,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5440}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/blocking/pool.rs","byte_start":13703600,"byte_end":13703612,"line_start":214,"line_end":214,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5442}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/blocking/pool.rs","byte_start":13703773,"byte_end":13703780,"line_start":222,"line_end":222,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5444},{"krate":0,"index":5445}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/blocking/pool.rs","byte_start":13707126,"byte_end":13707131,"line_start":312,"line_end":312,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5449}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/blocking/pool.rs","byte_start":13710391,"byte_end":13710398,"line_start":409,"line_end":409,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5451}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/blocking/schedule.rs","byte_start":13710901,"byte_end":13710913,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5479},{"krate":0,"index":5480}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/blocking/shutdown.rs","byte_start":13711677,"byte_end":13711685,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5493}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/blocking/task.rs","byte_start":13713435,"byte_end":13713447,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5516}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/blocking/task.rs","byte_start":13713674,"byte_end":13713686,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/blocking/task.rs","byte_start":13713716,"byte_end":13713728,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5522},{"krate":0,"index":5523}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13717350,"byte_end":13717357,"line_start":97,"line_end":97,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5592},{"krate":0,"index":5594},{"krate":0,"index":5595},{"krate":0,"index":5597},{"krate":0,"index":5598},{"krate":0,"index":5599},{"krate":0,"index":5600},{"krate":0,"index":5603},{"krate":0,"index":5605},{"krate":0,"index":5606},{"krate":0,"index":5608},{"krate":0,"index":5610},{"krate":0,"index":5612},{"krate":0,"index":5614},{"krate":0,"index":5615},{"krate":0,"index":5616},{"krate":0,"index":5617},{"krate":0,"index":5618},{"krate":0,"index":5619}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13738013,"byte_end":13738020,"line_start":746,"line_end":746,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5863}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13739703,"byte_end":13739710,"line_start":795,"line_end":795,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5631}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/context.rs","byte_start":13743779,"byte_end":13743789,"line_start":105,"line_end":105,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5657}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/driver.rs","byte_start":13748302,"byte_end":13748308,"line_start":168,"line_end":168,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5684}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/driver.rs","byte_start":13748892,"byte_end":13748898,"line_start":189,"line_end":189,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5686},{"krate":0,"index":5687},{"krate":0,"index":5688},{"krate":0,"index":5689},{"krate":0,"index":5690},{"krate":0,"index":5691}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13751480,"byte_end":13751486,"line_start":72,"line_end":72,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5746},{"krate":0,"index":5747},{"krate":0,"index":5748},{"krate":0,"index":5749},{"krate":0,"index":5751},{"krate":0,"index":5754},{"krate":0,"index":5755},{"krate":0,"index":5757},{"krate":0,"index":5759}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13760102,"byte_end":13760108,"line_start":318,"line_end":318,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5761}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13760477,"byte_end":13760488,"line_start":336,"line_end":336,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5763},{"krate":0,"index":5766}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13763649,"byte_end":13763664,"line_start":436,"line_end":436,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5770},{"krate":0,"index":5771},{"krate":0,"index":5772},{"krate":0,"index":5773}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13764580,"byte_end":13764599,"line_start":468,"line_end":468,"column_start":21,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5780}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13764887,"byte_end":13764902,"line_start":478,"line_end":478,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5783}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13765211,"byte_end":13765226,"line_start":488,"line_end":488,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/spawner.rs","byte_start":13765606,"byte_end":13765613,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5821},{"krate":0,"index":5822},{"krate":0,"index":5824}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/idle.rs","byte_start":13773086,"byte_end":13773090,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5970},{"krate":0,"index":5971},{"krate":0,"index":5972},{"krate":0,"index":5973},{"krate":0,"index":5974},{"krate":0,"index":5975},{"krate":0,"index":5976},{"krate":0,"index":5977}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/idle.rs","byte_start":13777048,"byte_end":13777053,"line_start":145,"line_end":145,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5979},{"krate":0,"index":5980},{"krate":0,"index":5981},{"krate":0,"index":5982},{"krate":0,"index":5983},{"krate":0,"index":5984},{"krate":0,"index":5985},{"krate":0,"index":5986}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/idle.rs","byte_start":13778565,"byte_end":13778570,"line_start":197,"line_end":197,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5988}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/idle.rs","byte_start":13778743,"byte_end":13778748,"line_start":209,"line_end":209,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5992}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/park.rs","byte_start":13780374,"byte_end":13780380,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6049}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/park.rs","byte_start":13780843,"byte_end":13780849,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6051}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/park.rs","byte_start":13781165,"byte_end":13781171,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6053},{"krate":0,"index":6054},{"krate":0,"index":6055},{"krate":0,"index":6056},{"krate":0,"index":6057},{"krate":0,"index":6059}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/park.rs","byte_start":13781890,"byte_end":13781898,"line_start":113,"line_end":113,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6061}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/park.rs","byte_start":13781967,"byte_end":13781972,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6063},{"krate":0,"index":6064},{"krate":0,"index":6065},{"krate":0,"index":6066},{"krate":0,"index":6067},{"krate":0,"index":6068},{"krate":0,"index":6069}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/queue.rs","byte_start":13788540,"byte_end":13788545,"line_start":42,"line_end":42,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/queue.rs","byte_start":13788576,"byte_end":13788581,"line_start":43,"line_end":43,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/queue.rs","byte_start":13789965,"byte_end":13789970,"line_start":90,"line_end":90,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6146},{"krate":0,"index":6147},{"krate":0,"index":6148},{"krate":0,"index":6150},{"krate":0,"index":6165}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/queue.rs","byte_start":13794812,"byte_end":13794825,"line_start":225,"line_end":225,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6162},{"krate":0,"index":6163}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/queue.rs","byte_start":13797304,"byte_end":13797309,"line_start":303,"line_end":303,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6169},{"krate":0,"index":6170},{"krate":0,"index":6172}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/queue.rs","byte_start":13802713,"byte_end":13802718,"line_start":467,"line_end":467,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6177}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/queue.rs","byte_start":13802814,"byte_end":13802819,"line_start":473,"line_end":473,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6180}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/queue.rs","byte_start":13802978,"byte_end":13802983,"line_start":481,"line_end":481,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6183},{"krate":0,"index":6184}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/worker.rs","byte_start":13812654,"byte_end":13812659,"line_start":271,"line_end":271,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6317}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/worker.rs","byte_start":13815818,"byte_end":13815824,"line_start":359,"line_end":359,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6322}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/worker.rs","byte_start":13816599,"byte_end":13816606,"line_start":390,"line_end":390,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6327},{"krate":0,"index":6328},{"krate":0,"index":6330},{"krate":0,"index":6331},{"krate":0,"index":6332}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/worker.rs","byte_start":13822371,"byte_end":13822375,"line_start":550,"line_end":550,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6334},{"krate":0,"index":6335},{"krate":0,"index":6338},{"krate":0,"index":6340},{"krate":0,"index":6341},{"krate":0,"index":6342},{"krate":0,"index":6343},{"krate":0,"index":6344},{"krate":0,"index":6345},{"krate":0,"index":6346},{"krate":0,"index":6347}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/worker.rs","byte_start":13827522,"byte_end":13827528,"line_start":704,"line_end":704,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6349}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/worker.rs","byte_start":13827703,"byte_end":13827706,"line_start":711,"line_end":711,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6351},{"krate":0,"index":6352},{"krate":0,"index":6353}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/worker.rs","byte_start":13827992,"byte_end":13827998,"line_start":725,"line_end":725,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6355},{"krate":0,"index":6356},{"krate":0,"index":6358},{"krate":0,"index":6360},{"krate":0,"index":6361},{"krate":0,"index":6362},{"krate":0,"index":6363},{"krate":0,"index":6364},{"krate":0,"index":6365},{"krate":0,"index":6366},{"krate":0,"index":6367}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/worker.rs","byte_start":13832410,"byte_end":13832413,"line_start":872,"line_end":872,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6369}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/mod.rs","byte_start":13769388,"byte_end":13769398,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6415},{"krate":0,"index":6416},{"krate":0,"index":6417}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/mod.rs","byte_start":13770751,"byte_end":13770761,"line_start":94,"line_end":94,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6420}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/mod.rs","byte_start":13770900,"byte_end":13770910,"line_start":100,"line_end":100,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6422}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/mod.rs","byte_start":13771013,"byte_end":13771020,"line_start":108,"line_end":108,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6424},{"krate":0,"index":6426},{"krate":0,"index":6427}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/mod.rs","byte_start":13772268,"byte_end":13772275,"line_start":153,"line_end":153,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6429}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13557841,"byte_end":13557848,"line_start":310,"line_end":310,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6459},{"krate":0,"index":6460},{"krate":0,"index":6461},{"krate":0,"index":6463},{"krate":0,"index":6466},{"krate":0,"index":6468},{"krate":0,"index":6469},{"krate":0,"index":6470}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13568530,"byte_end":13568537,"line_start":595,"line_end":595,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6472}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/coop.rs","byte_start":128039,"byte_end":128045,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/coop.rs","byte_start":129633,"byte_end":129643,"line_start":89,"line_end":89,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/coop.rs","byte_start":130601,"byte_end":130617,"line_start":137,"line_end":137,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6515}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/coop.rs","byte_start":130749,"byte_end":130765,"line_start":143,"line_end":143,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6517}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/coop.rs","byte_start":132505,"byte_end":132511,"line_start":184,"line_end":184,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6522},{"krate":0,"index":6523}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/notify.rs","byte_start":13857857,"byte_end":13857865,"line_start":248,"line_end":248,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/notify.rs","byte_start":13857898,"byte_end":13857906,"line_start":249,"line_end":249,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/notify.rs","byte_start":13858857,"byte_end":13858863,"line_start":291,"line_end":291,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6587},{"krate":0,"index":6588},{"krate":0,"index":6589},{"krate":0,"index":6590}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/notify.rs","byte_start":13867702,"byte_end":13867708,"line_start":556,"line_end":556,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6592}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/notify.rs","byte_start":13869618,"byte_end":13869626,"line_start":611,"line_end":611,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6595},{"krate":0,"index":6596},{"krate":0,"index":6597}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/notify.rs","byte_start":13880870,"byte_end":13880878,"line_start":885,"line_end":885,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6600},{"krate":0,"index":6601}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/notify.rs","byte_start":13881046,"byte_end":13881054,"line_start":893,"line_end":893,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6603}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/notify.rs","byte_start":13882926,"byte_end":13882932,"line_start":940,"line_end":940,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6606},{"krate":0,"index":6607},{"krate":0,"index":6608},{"krate":0,"index":6609},{"krate":0,"index":6610}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13892403,"byte_end":13892412,"line_start":341,"line_end":341,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6667}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13892574,"byte_end":13892583,"line_start":347,"line_end":347,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13892652,"byte_end":13892664,"line_start":351,"line_end":351,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6670}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13892963,"byte_end":13892975,"line_start":360,"line_end":360,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13893840,"byte_end":13893844,"line_start":392,"line_end":392,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6683},{"krate":0,"index":6685},{"krate":0,"index":6689},{"krate":0,"index":6691}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13897964,"byte_end":13897970,"line_start":539,"line_end":539,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6697},{"krate":0,"index":6699},{"krate":0,"index":6706},{"krate":0,"index":6707}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13907271,"byte_end":13907277,"line_start":827,"line_end":827,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6710}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13907727,"byte_end":13907735,"line_start":843,"line_end":843,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6713},{"krate":0,"index":6714}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13914111,"byte_end":13914119,"line_start":1049,"line_end":1049,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6717}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13914577,"byte_end":13914585,"line_start":1065,"line_end":1065,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6720},{"krate":0,"index":6721}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13915656,"byte_end":13915661,"line_start":1094,"line_end":1094,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6724},{"krate":0,"index":6725},{"krate":0,"index":6726},{"krate":0,"index":6727}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13919549,"byte_end":13919554,"line_start":1205,"line_end":1205,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13919591,"byte_end":13919596,"line_start":1206,"line_end":1206,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13919697,"byte_end":13919702,"line_start":1212,"line_end":1212,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6737}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13920079,"byte_end":13920084,"line_start":1230,"line_end":1230,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6740}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13921136,"byte_end":13921141,"line_start":1264,"line_end":1264,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6749},{"krate":0,"index":6750},{"krate":0,"index":6751},{"krate":0,"index":6752},{"krate":0,"index":6753},{"krate":0,"index":6754},{"krate":0,"index":6755},{"krate":0,"index":6756},{"krate":0,"index":6757},{"krate":0,"index":6758},{"krate":0,"index":6759},{"krate":0,"index":6760},{"krate":0,"index":6761}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13924098,"byte_end":13924103,"line_start":1357,"line_end":1357,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6763}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/task/atomic_waker.rs","byte_start":13925831,"byte_end":13925842,"line_start":32,"line_end":32,"column_start":24,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/task/atomic_waker.rs","byte_start":13925866,"byte_end":13925877,"line_start":33,"line_end":33,"column_start":21,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/task/atomic_waker.rs","byte_start":13930816,"byte_end":13930827,"line_start":140,"line_end":140,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6900},{"krate":0,"index":6901},{"krate":0,"index":6902},{"krate":0,"index":6914},{"krate":0,"index":6915}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/task/atomic_waker.rs","byte_start":13939576,"byte_end":13939587,"line_start":344,"line_end":344,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6918}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/task/atomic_waker.rs","byte_start":13939673,"byte_end":13939684,"line_start":350,"line_end":350,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6920}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/task/atomic_waker.rs","byte_start":13939817,"byte_end":13939828,"line_start":356,"line_end":356,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/task/atomic_waker.rs","byte_start":13939853,"byte_end":13939864,"line_start":357,"line_end":357,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/task/atomic_waker.rs","byte_start":13939960,"byte_end":13939965,"line_start":364,"line_end":364,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6927},{"krate":0,"index":6928}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13955058,"byte_end":13955066,"line_start":43,"line_end":43,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6986},{"krate":0,"index":6987}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13965740,"byte_end":13965748,"line_start":322,"line_end":322,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7053},{"krate":0,"index":7054},{"krate":0,"index":7056},{"krate":0,"index":7058},{"krate":0,"index":7062},{"krate":0,"index":7064},{"krate":0,"index":7066},{"krate":0,"index":7072}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13974302,"byte_end":13974310,"line_start":570,"line_end":570,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7076}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13974449,"byte_end":13974457,"line_start":576,"line_end":576,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7078},{"krate":0,"index":7079}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13975407,"byte_end":13975415,"line_start":600,"line_end":600,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7082}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13975496,"byte_end":13975504,"line_start":606,"line_end":606,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7084}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13976327,"byte_end":13976334,"line_start":633,"line_end":633,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7087}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13976906,"byte_end":13976914,"line_start":655,"line_end":655,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7091},{"krate":0,"index":7092}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13977799,"byte_end":13977805,"line_start":686,"line_end":686,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7096},{"krate":0,"index":7098}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13978662,"byte_end":13978665,"line_start":713,"line_end":713,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7100},{"krate":0,"index":7102}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981725,"byte_end":13981733,"line_start":101,"line_end":101,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7150},{"krate":0,"index":7152},{"krate":0,"index":7156},{"krate":0,"index":7159}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13984303,"byte_end":13984311,"line_start":197,"line_end":197,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7165}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13984519,"byte_end":13984527,"line_start":205,"line_end":205,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7169}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13985502,"byte_end":13985517,"line_start":246,"line_end":246,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7173}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13985794,"byte_end":13985799,"line_start":254,"line_end":254,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7184}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13986331,"byte_end":13986346,"line_start":276,"line_end":276,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7190},{"krate":0,"index":7191}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13986693,"byte_end":13986704,"line_start":290,"line_end":290,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7194}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13986848,"byte_end":13986859,"line_start":296,"line_end":296,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7196}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13987006,"byte_end":13987017,"line_start":302,"line_end":302,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/unconstrained.rs","byte_start":13987419,"byte_end":13987432,"line_start":16,"line_end":16,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7220},{"krate":0,"index":7280}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/atomic_cell.rs","byte_start":148691,"byte_end":148701,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/atomic_cell.rs","byte_start":148738,"byte_end":148748,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/atomic_cell.rs","byte_start":148764,"byte_end":148774,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/atomic_cell.rs","byte_start":149528,"byte_end":149538,"line_start":46,"line_end":46,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/wake_list.rs","byte_start":149851,"byte_end":149859,"line_start":12,"line_end":12,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/wake_list.rs","byte_start":150879,"byte_end":150887,"line_start":48,"line_end":48,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":151942,"byte_end":151952,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":152022,"byte_end":152032,"line_start":31,"line_end":31,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":154936,"byte_end":154944,"line_start":108,"line_end":108,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":154981,"byte_end":154989,"line_start":109,"line_end":109,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":155040,"byte_end":155050,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":155285,"byte_end":155295,"line_start":124,"line_end":124,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":158301,"byte_end":158311,"line_start":218,"line_end":218,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":158688,"byte_end":158698,"line_start":234,"line_end":234,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":158885,"byte_end":158895,"line_start":241,"line_end":241,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":160277,"byte_end":160285,"line_start":295,"line_end":295,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":161890,"byte_end":161898,"line_start":344,"line_end":344,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/rand.rs","byte_start":171994,"byte_end":172002,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/wake.rs","byte_start":13988921,"byte_end":13988929,"line_start":24,"line_end":24,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7321},{"krate":0,"index":7322}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/sync_wrapper.rs","byte_start":13990920,"byte_end":13990931,"line_start":12,"line_end":12,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/sync_wrapper.rs","byte_start":13991091,"byte_end":13991102,"line_start":16,"line_end":16,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/sync_wrapper.rs","byte_start":13991118,"byte_end":13991129,"line_start":18,"line_end":18,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7357},{"krate":0,"index":7358}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/vec_deque_cell.rs","byte_start":13991705,"byte_end":13991717,"line_start":14,"line_end":14,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/vec_deque_cell.rs","byte_start":13991733,"byte_end":13991745,"line_start":16,"line_end":16,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7380},{"krate":0,"index":7381},{"krate":0,"index":7385},{"krate":0,"index":7386},{"krate":0,"index":7388}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/try_lock.rs","byte_start":13993415,"byte_end":13993422,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/try_lock.rs","byte_start":13993459,"byte_end":13993466,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/try_lock.rs","byte_start":13993504,"byte_end":13993513,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/try_lock.rs","byte_start":13993699,"byte_end":13993706,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7441},{"krate":0,"index":7442}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/try_lock.rs","byte_start":13994340,"byte_end":13994349,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7445},{"krate":0,"index":7446}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/try_lock.rs","byte_start":13994481,"byte_end":13994490,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7449}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/try_lock.rs","byte_start":13994612,"byte_end":13994621,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7452}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":16132,"byte_end":16138,"line_start":402,"line_end":402,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/mod.rs","byte_start":20671,"byte_end":20678,"line_start":40,"line_end":40,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":91}},{"kind":"Mod","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":16191,"byte_end":16193,"line_start":410,"line_end":410,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":167}},{"kind":"Mod","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":16203,"byte_end":16206,"line_start":411,"line_end":411,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":415}},{"kind":"Mod","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":16371,"byte_end":16378,"line_start":424,"line_end":424,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4057}},{"kind":"Mod","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/lib.rs","byte_start":16658,"byte_end":16662,"line_start":447,"line_end":447,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":943}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/scoped_tls.rs","byte_start":35842,"byte_end":35851,"line_start":30,"line_end":30,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/scoped_tls.rs","byte_start":35867,"byte_end":35876,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":69},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/macros/scoped_tls.rs","byte_start":36226,"byte_end":36231,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":80},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":38292,"byte_end":38301,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1120},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":38465,"byte_end":38474,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/maybe_done.rs","byte_start":39661,"byte_end":39670,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1120},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/poll_fn.rs","byte_start":40447,"byte_end":40453,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":148},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/poll_fn.rs","byte_start":40667,"byte_end":40673,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":148},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/future/poll_fn.rs","byte_start":40815,"byte_end":40821,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":148},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/blocking.rs","byte_start":13292535,"byte_end":13292543,"line_start":38,"line_end":38,"column_start":13,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/blocking.rs","byte_start":13292816,"byte_end":13292824,"line_start":49,"line_end":49,"column_start":23,"column_end":31},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1199},"to":{"krate":0,"index":230}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/blocking.rs","byte_start":13294419,"byte_end":13294427,"line_start":100,"line_end":100,"column_start":24,"column_end":32},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1199},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/blocking.rs","byte_start":13297152,"byte_end":13297155,"line_start":190,"line_end":190,"column_start":6,"column_end":9},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":51361,"byte_end":51370,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":230},"to":{"krate":0,"index":188}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":53820,"byte_end":53823,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":13}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":188}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":53983,"byte_end":53986,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":2,"index":45212},"to":{"krate":0,"index":188}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_buf_read.rs","byte_start":54615,"byte_end":54621,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":15}},"from":{"krate":1,"index":10367},"to":{"krate":0,"index":188}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":57688,"byte_end":57691,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"kind":{"Impl":{"id":16}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":230}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":57834,"byte_end":57837,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":2,"index":45212},"to":{"krate":0,"index":230}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_read.rs","byte_start":58506,"byte_end":58512,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"kind":{"Impl":{"id":18}},"from":{"krate":1,"index":10367},"to":{"krate":0,"index":230}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":61506,"byte_end":61509,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"kind":{"Impl":{"id":19}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":269}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":61652,"byte_end":61655,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":2,"index":45212},"to":{"krate":0,"index":269}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_seek.rs","byte_start":62046,"byte_end":62052,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"kind":{"Impl":{"id":21}},"from":{"krate":1,"index":10367},"to":{"krate":0,"index":269}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":71810,"byte_end":71813,"line_start":217,"line_end":217,"column_start":53,"column_end":56},"kind":{"Impl":{"id":22}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":71961,"byte_end":71964,"line_start":225,"line_end":225,"column_start":24,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":2,"index":45212},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":72841,"byte_end":72844,"line_start":259,"line_end":259,"column_start":21,"column_end":24},"kind":{"Impl":{"id":24}},"from":{"krate":5,"index":7080},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":73642,"byte_end":73648,"line_start":290,"line_end":290,"column_start":25,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":10367},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":74451,"byte_end":74457,"line_start":320,"line_end":320,"column_start":25,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":10367},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":75263,"byte_end":75269,"line_start":350,"line_end":350,"column_start":25,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":1,"index":10367},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/async_write.rs","byte_start":76070,"byte_end":76076,"line_start":380,"line_end":380,"column_start":25,"column_end":31},"kind":{"Impl":{"id":28}},"from":{"krate":1,"index":10367},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":77950,"byte_end":77957,"line_start":29,"line_end":29,"column_start":10,"column_end":17},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/read_buf.rs","byte_start":86440,"byte_end":86447,"line_start":269,"line_end":269,"column_start":21,"column_end":28},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/stdio_common.rs","byte_start":13299744,"byte_end":13299772,"line_start":16,"line_end":16,"column_start":9,"column_end":37},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/stdio_common.rs","byte_start":13300033,"byte_end":13300061,"line_start":28,"line_end":28,"column_start":35,"column_end":63},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1376},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/stderr.rs","byte_start":13309181,"byte_end":13309187,"line_start":77,"line_end":77,"column_start":37,"column_end":43},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1383},"to":{"krate":1,"index":6387}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/stderr.rs","byte_start":13309495,"byte_end":13309501,"line_start":90,"line_end":90,"column_start":21,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1383},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/stdin.rs","byte_start":13311920,"byte_end":13311925,"line_start":52,"line_end":52,"column_start":37,"column_end":42},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1388},"to":{"krate":1,"index":6387}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/stdin.rs","byte_start":13312229,"byte_end":13312234,"line_start":65,"line_end":65,"column_start":20,"column_end":25},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1388},"to":{"krate":0,"index":230}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/stdout.rs","byte_start":13314905,"byte_end":13314911,"line_start":76,"line_end":76,"column_start":37,"column_end":43},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1393},"to":{"krate":1,"index":6387}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/stdout.rs","byte_start":13315219,"byte_end":13315225,"line_start":89,"line_end":89,"column_start":21,"column_end":27},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1393},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13317328,"byte_end":13317336,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13318252,"byte_end":13318261,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13318512,"byte_end":13318520,"line_start":100,"line_end":100,"column_start":34,"column_end":42},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1597},"to":{"krate":0,"index":230}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13318815,"byte_end":13318824,"line_start":111,"line_end":111,"column_start":36,"column_end":45},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1600},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13319503,"byte_end":13319508,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13319964,"byte_end":13319969,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13320222,"byte_end":13320227,"line_start":159,"line_end":159,"column_start":18,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1444},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13320350,"byte_end":13320358,"line_start":165,"line_end":165,"column_start":31,"column_end":39},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1597},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13320395,"byte_end":13320404,"line_start":166,"line_end":166,"column_start":31,"column_end":40},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1600},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13320441,"byte_end":13320449,"line_start":167,"line_end":167,"column_start":31,"column_end":39},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1597},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13320486,"byte_end":13320495,"line_start":168,"line_end":168,"column_start":31,"column_end":40},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1600},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13320538,"byte_end":13320546,"line_start":170,"line_end":170,"column_start":36,"column_end":44},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1597},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/split.rs","byte_start":13320714,"byte_end":13320723,"line_start":176,"line_end":176,"column_start":36,"column_end":45},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1600},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/seek.rs","byte_start":13321680,"byte_end":13321684,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":10883},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_buf_read_ext.rs","byte_start":13324765,"byte_end":13324777,"line_start":12,"line_end":12,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":188},"to":{"krate":0,"index":3371}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_buf_read_ext.rs","byte_start":13338166,"byte_end":13338167,"line_start":351,"line_end":351,"column_start":52,"column_end":53},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1645},"to":{"krate":0,"index":3371}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13340161,"byte_end":13340170,"line_start":62,"line_end":62,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":230},"to":{"krate":0,"index":3381}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","byte_start":13384074,"byte_end":13384075,"line_start":1294,"line_end":1294,"column_start":46,"column_end":47},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1775},"to":{"krate":0,"index":3381}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_seek_ext.rs","byte_start":13385000,"byte_end":13385009,"line_start":33,"line_end":33,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":269},"to":{"krate":0,"index":3440}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_seek_ext.rs","byte_start":13386870,"byte_end":13386871,"line_start":93,"line_end":93,"column_start":46,"column_end":47},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1794},"to":{"krate":0,"index":3440}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13389060,"byte_end":13389070,"line_start":69,"line_end":69,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":309},"to":{"krate":0,"index":3445}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","byte_start":13432777,"byte_end":13432778,"line_start":1293,"line_end":1293,"column_start":48,"column_end":49},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1927},"to":{"krate":0,"index":3445}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13434231,"byte_end":13434240,"line_start":37,"line_end":37,"column_start":20,"column_end":29},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":10834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13436138,"byte_end":13436147,"line_start":100,"line_end":100,"column_start":34,"column_end":43},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":10834},"to":{"krate":0,"index":230}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13436957,"byte_end":13436966,"line_start":122,"line_end":122,"column_start":37,"column_end":46},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":10834},"to":{"krate":0,"index":188}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13439160,"byte_end":13439169,"line_start":176,"line_end":176,"column_start":46,"column_end":55},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":10834},"to":{"krate":0,"index":269}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13443130,"byte_end":13443139,"line_start":261,"line_end":261,"column_start":48,"column_end":57},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":10834},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_reader.rs","byte_start":13443959,"byte_end":13443968,"line_start":291,"line_end":291,"column_start":36,"column_end":45},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":10834},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13445495,"byte_end":13445504,"line_start":25,"line_end":25,"column_start":34,"column_end":43},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":10798},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13447341,"byte_end":13447350,"line_start":81,"line_end":81,"column_start":45,"column_end":54},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":10798},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13447492,"byte_end":13447501,"line_start":87,"line_end":87,"column_start":45,"column_end":54},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":10798},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13448381,"byte_end":13448390,"line_start":121,"line_end":121,"column_start":49,"column_end":58},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":10798},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13449227,"byte_end":13449236,"line_start":151,"line_end":151,"column_start":48,"column_end":57},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":10798},"to":{"krate":0,"index":230}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13450371,"byte_end":13450380,"line_start":179,"line_end":179,"column_start":60,"column_end":69},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":10798},"to":{"krate":0,"index":269}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_stream.rs","byte_start":13450722,"byte_end":13450731,"line_start":189,"line_end":189,"column_start":51,"column_end":60},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":10798},"to":{"krate":0,"index":188}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13452739,"byte_end":13452748,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":10753},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13455067,"byte_end":13455076,"line_start":118,"line_end":118,"column_start":36,"column_end":45},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":10753},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13458995,"byte_end":13459004,"line_start":226,"line_end":226,"column_start":47,"column_end":56},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":10753},"to":{"krate":0,"index":269}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13460545,"byte_end":13460554,"line_start":269,"line_end":269,"column_start":47,"column_end":56},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":10753},"to":{"krate":0,"index":230}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13460808,"byte_end":13460817,"line_start":279,"line_end":279,"column_start":53,"column_end":62},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":10753},"to":{"krate":0,"index":188}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/buf_writer.rs","byte_start":13461104,"byte_end":13461113,"line_start":289,"line_end":289,"column_start":36,"column_end":45},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":10753},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13462291,"byte_end":13462296,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":10704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13463436,"byte_end":13463441,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":10704},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13463720,"byte_end":13463725,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":10704},"to":{"krate":0,"index":230}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/chain.rs","byte_start":13464311,"byte_end":13464316,"line_start":107,"line_end":107,"column_start":29,"column_end":34},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":10704},"to":{"krate":0,"index":188}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy.rs","byte_start":13465465,"byte_end":13465475,"line_start":18,"line_end":18,"column_start":6,"column_end":16},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy.rs","byte_start":13470127,"byte_end":13470131,"line_start":162,"line_end":162,"column_start":23,"column_end":27},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3543},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_bidirectional.rs","byte_start":13471711,"byte_end":13471728,"line_start":52,"line_end":52,"column_start":27,"column_end":44},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2316},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/copy_buf.rs","byte_start":13476214,"byte_end":13476221,"line_start":67,"line_end":67,"column_start":23,"column_end":30},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":3567},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/empty.rs","byte_start":13478488,"byte_end":13478493,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":3579},"to":{"krate":0,"index":230}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/empty.rs","byte_start":13478760,"byte_end":13478765,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":3579},"to":{"krate":0,"index":188}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/empty.rs","byte_start":13479051,"byte_end":13479056,"line_start":72,"line_end":72,"column_start":21,"column_end":26},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3579},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/flush.rs","byte_start":13480512,"byte_end":13480517,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":10655},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13481849,"byte_end":13481854,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":10607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/lines.rs","byte_start":13483192,"byte_end":13483197,"line_start":94,"line_end":94,"column_start":9,"column_end":14},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":10607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13487940,"byte_end":13487952,"line_start":101,"line_end":101,"column_start":20,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3583},"to":{"krate":0,"index":230}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13488496,"byte_end":13488508,"line_start":117,"line_end":117,"column_start":21,"column_end":33},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3583},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13489206,"byte_end":13489218,"line_start":144,"line_end":144,"column_start":15,"column_end":27},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3583},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13489414,"byte_end":13489418,"line_start":154,"line_end":154,"column_start":6,"column_end":10},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13491645,"byte_end":13491649,"line_start":229,"line_end":229,"column_start":20,"column_end":24},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3588},"to":{"krate":0,"index":230}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/mem.rs","byte_start":13492352,"byte_end":13492356,"line_start":257,"line_end":257,"column_start":21,"column_end":25},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3588},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read.rs","byte_start":13494543,"byte_end":13494547,"line_start":43,"line_end":43,"column_start":20,"column_end":24},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":10554},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_buf.rs","byte_start":13495681,"byte_end":13495688,"line_start":35,"line_end":35,"column_start":23,"column_end":30},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":10492},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_exact.rs","byte_start":13498069,"byte_end":13498078,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":10439},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_line.rs","byte_start":13507266,"byte_end":13507274,"line_start":111,"line_end":111,"column_start":51,"column_end":59},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":9324},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/fill_buf.rs","byte_start":13508273,"byte_end":13508280,"line_start":31,"line_end":31,"column_start":55,"column_end":62},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":9275},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_to_end.rs","byte_start":13512932,"byte_end":13512941,"line_start":101,"line_end":101,"column_start":20,"column_end":29},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":9218},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/vec_with_initialized.rs","byte_start":13513517,"byte_end":13513522,"line_start":11,"line_end":11,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2916},"to":{"krate":0,"index":2860}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/vec_with_initialized.rs","byte_start":13513534,"byte_end":13513539,"line_start":11,"line_end":11,"column_start":49,"column_end":54},"kind":"SuperTrait","from":{"krate":2,"index":2919},"to":{"krate":0,"index":2860}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/vec_with_initialized.rs","byte_start":13513575,"byte_end":13513578,"line_start":13,"line_end":13,"column_start":23,"column_end":26},"kind":{"Impl":{"id":102}},"from":{"krate":5,"index":7080},"to":{"krate":0,"index":2860}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/vec_with_initialized.rs","byte_start":13514286,"byte_end":13514304,"line_start":33,"line_end":33,"column_start":6,"column_end":24},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/vec_with_initialized.rs","byte_start":13514484,"byte_end":13514502,"line_start":41,"line_end":41,"column_start":9,"column_end":27},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_to_string.rs","byte_start":13519850,"byte_end":13519862,"line_start":67,"line_end":67,"column_start":20,"column_end":32},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":9157},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/read_until.rs","byte_start":13522166,"byte_end":13522175,"line_start":72,"line_end":72,"column_start":51,"column_end":60},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":9096},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/repeat.rs","byte_start":13523753,"byte_end":13523759,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3782},"to":{"krate":0,"index":230}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/shutdown.rs","byte_start":13525138,"byte_end":13525146,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":9047},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/sink.rs","byte_start":13526786,"byte_end":13526790,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3786},"to":{"krate":0,"index":309}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/sink.rs","byte_start":13527300,"byte_end":13527304,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3786},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13528461,"byte_end":13528466,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":8999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/split.rs","byte_start":13529205,"byte_end":13529210,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":8999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13531508,"byte_end":13531512,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":8959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13533140,"byte_end":13533144,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":8959},"to":{"krate":0,"index":230}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/take.rs","byte_start":13533883,"byte_end":13533887,"line_start":106,"line_end":106,"column_start":40,"column_end":44},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":8959},"to":{"krate":0,"index":188}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write.rs","byte_start":13535686,"byte_end":13535691,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":8906},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_vectored.rs","byte_start":13536856,"byte_end":13536869,"line_start":37,"line_end":37,"column_start":20,"column_end":33},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":8844},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_all.rs","byte_start":13537918,"byte_end":13537926,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":8791},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_buf.rs","byte_start":13539403,"byte_end":13539411,"line_start":37,"line_end":37,"column_start":23,"column_end":31},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":8729},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/write_all_buf.rs","byte_start":13540738,"byte_end":13540749,"line_start":37,"line_end":37,"column_start":23,"column_end":34},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":8667},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":89441,"byte_end":89458,"line_start":19,"line_end":19,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":498},"to":{"krate":0,"index":442}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":90111,"byte_end":90121,"line_start":50,"line_end":50,"column_start":24,"column_end":34},"kind":{"Impl":{"id":121}},"from":{"krate":1,"index":10579},"to":{"krate":0,"index":442}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":90161,"byte_end":90171,"line_start":52,"line_end":52,"column_start":36,"column_end":46},"kind":{"Impl":{"id":122}},"from":{"krate":1,"index":10579},"to":{"krate":0,"index":498}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":90480,"byte_end":90492,"line_start":64,"line_end":64,"column_start":24,"column_end":36},"kind":{"Impl":{"id":123}},"from":{"krate":1,"index":10603},"to":{"krate":0,"index":442}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":90532,"byte_end":90544,"line_start":66,"line_end":66,"column_start":36,"column_end":48},"kind":{"Impl":{"id":124}},"from":{"krate":1,"index":10603},"to":{"krate":0,"index":498}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":90841,"byte_end":90853,"line_start":77,"line_end":77,"column_start":24,"column_end":36},"kind":{"Impl":{"id":125}},"from":{"krate":1,"index":10606},"to":{"krate":0,"index":442}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/net/addr.rs","byte_start":90893,"byte_end":90905,"line_start":79,"line_end":79,"column_start":36,"column_end":48},"kind":{"Impl":{"id":126}},"from":{"krate":1,"index":10606},"to":{"krate":0,"index":498}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_ptr.rs","byte_start":102250,"byte_end":102259,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_ptr.rs","byte_start":102433,"byte_end":102442,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":520},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_ptr.rs","byte_start":102589,"byte_end":102598,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":520},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_ptr.rs","byte_start":102711,"byte_end":102720,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":520},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u16.rs","byte_start":103064,"byte_end":103073,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":546},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u16.rs","byte_start":103098,"byte_end":103107,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":546},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u16.rs","byte_start":103117,"byte_end":103126,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u16.rs","byte_start":103618,"byte_end":103627,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":546},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u16.rs","byte_start":103912,"byte_end":103921,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":546},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u32.rs","byte_start":104262,"byte_end":104271,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":568},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u32.rs","byte_start":104296,"byte_end":104305,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":568},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u32.rs","byte_start":104315,"byte_end":104324,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u32.rs","byte_start":104509,"byte_end":104518,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":568},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u32.rs","byte_start":104803,"byte_end":104812,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":568},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u8.rs","byte_start":107484,"byte_end":107492,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":590},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u8.rs","byte_start":107517,"byte_end":107525,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":590},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u8.rs","byte_start":107535,"byte_end":107543,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u8.rs","byte_start":107724,"byte_end":107732,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":590},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_u8.rs","byte_start":108016,"byte_end":108024,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":590},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_usize.rs","byte_start":108364,"byte_end":108375,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":611},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_usize.rs","byte_start":108400,"byte_end":108411,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":611},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_usize.rs","byte_start":108421,"byte_end":108432,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_usize.rs","byte_start":109121,"byte_end":109132,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":611},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_usize.rs","byte_start":109422,"byte_end":109433,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":611},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/atomic_usize.rs","byte_start":109597,"byte_end":109608,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":611},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/mutex.rs","byte_start":109941,"byte_end":109946,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/loom/std/unsafe_cell.rs","byte_start":110624,"byte_end":110634,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/either.rs","byte_start":13546079,"byte_end":13546085,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":4001},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/either.rs","byte_start":13547042,"byte_end":13547048,"line_start":50,"line_end":50,"column_start":23,"column_end":29},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":4001},"to":{"krate":0,"index":908}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/either.rs","byte_start":13547262,"byte_end":13547268,"line_start":63,"line_end":63,"column_start":27,"column_end":33},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":4001},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/thread.rs","byte_start":115833,"byte_end":115843,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":4027},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/thread.rs","byte_start":116108,"byte_end":116118,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":4027},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/thread.rs","byte_start":116644,"byte_end":116649,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":4037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/thread.rs","byte_start":121415,"byte_end":121425,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":4027},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/thread.rs","byte_start":121534,"byte_end":121546,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":4031},"to":{"krate":0,"index":908}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/thread.rs","byte_start":121901,"byte_end":121917,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":4047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/thread.rs","byte_start":123182,"byte_end":123198,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":4047},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/thread.rs","byte_start":123793,"byte_end":123805,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":4031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/thread.rs","byte_start":123985,"byte_end":123990,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/mod.rs","byte_start":114399,"byte_end":114403,"line_start":93,"line_end":93,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3031},"to":{"krate":0,"index":908}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/mod.rs","byte_start":114406,"byte_end":114410,"line_start":93,"line_end":93,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":3019},"to":{"krate":0,"index":908}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/mod.rs","byte_start":114880,"byte_end":114883,"line_start":107,"line_end":107,"column_start":17,"column_end":20},"kind":{"Impl":{"id":166}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":908}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/park/mod.rs","byte_start":114972,"byte_end":114975,"line_start":113,"line_end":113,"column_start":17,"column_end":20},"kind":{"Impl":{"id":167}},"from":{"krate":5,"index":5984},"to":{"krate":0,"index":908}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/enter.rs","byte_start":13570085,"byte_end":13570097,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/enter.rs","byte_start":13571849,"byte_end":13571854,"line_start":72,"line_end":72,"column_start":23,"column_end":28},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":4935},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/enter.rs","byte_start":13573045,"byte_end":13573066,"line_start":114,"line_end":114,"column_start":19,"column_end":40},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":4944},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/enter.rs","byte_start":13573782,"byte_end":13573787,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":4074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/enter.rs","byte_start":13575427,"byte_end":13575432,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":4074},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/enter.rs","byte_start":13575562,"byte_end":13575567,"line_start":198,"line_end":198,"column_start":15,"column_end":20},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":4074},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/core.rs","byte_start":13595064,"byte_end":13595070,"line_start":89,"line_end":89,"column_start":22,"column_end":28},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":4140},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/core.rs","byte_start":13595095,"byte_end":13595101,"line_start":90,"line_end":90,"column_start":22,"column_end":28},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":4140},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/core.rs","byte_start":13595460,"byte_end":13595464,"line_start":105,"line_end":105,"column_start":30,"column_end":34},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":4125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/core.rs","byte_start":13596483,"byte_end":13596492,"line_start":135,"line_end":135,"column_start":17,"column_end":26},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":4131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/core.rs","byte_start":13599191,"byte_end":13599197,"line_start":223,"line_end":223,"column_start":10,"column_end":16},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/core.rs","byte_start":13599359,"byte_end":13599365,"line_start":230,"line_end":230,"column_start":6,"column_end":12},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":4140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/core.rs","byte_start":13599908,"byte_end":13599915,"line_start":245,"line_end":245,"column_start":6,"column_end":13},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":4148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13600891,"byte_end":13600900,"line_start":20,"line_end":20,"column_start":6,"column_end":15},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13604186,"byte_end":13604195,"line_start":134,"line_end":134,"column_start":23,"column_end":32},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":4979},"to":{"krate":2,"index":9562}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13604479,"byte_end":13604488,"line_start":143,"line_end":143,"column_start":21,"column_end":30},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":4979},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13604795,"byte_end":13604804,"line_start":152,"line_end":152,"column_start":28,"column_end":37},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4979},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/error.rs","byte_start":13604838,"byte_end":13604843,"line_start":154,"line_end":154,"column_start":30,"column_end":35},"kind":{"Impl":{"id":185}},"from":{"krate":1,"index":3816},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/harness.rs","byte_start":13605616,"byte_end":13605623,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/harness.rs","byte_start":13606178,"byte_end":13606185,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/harness.rs","byte_start":13621970,"byte_end":13621975,"line_start":462,"line_end":462,"column_start":38,"column_end":43},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4360},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/inject.rs","byte_start":13670958,"byte_end":13670964,"line_start":35,"line_end":35,"column_start":25,"column_end":31},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":5005},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/inject.rs","byte_start":13670995,"byte_end":13671001,"line_start":36,"line_end":36,"column_start":25,"column_end":31},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":5005},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/inject.rs","byte_start":13671026,"byte_end":13671032,"line_start":38,"line_end":38,"column_start":18,"column_end":24},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":5005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/inject.rs","byte_start":13675700,"byte_end":13675706,"line_start":204,"line_end":204,"column_start":27,"column_end":33},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":5005},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13627294,"byte_end":13627304,"line_start":152,"line_end":152,"column_start":31,"column_end":41},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":5040},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13627341,"byte_end":13627351,"line_start":153,"line_end":153,"column_start":31,"column_end":41},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":5040},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13627382,"byte_end":13627392,"line_start":155,"line_end":155,"column_start":24,"column_end":34},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":5040},"to":{"krate":2,"index":8538}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13627425,"byte_end":13627435,"line_start":156,"line_end":156,"column_start":27,"column_end":37},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":5040},"to":{"krate":2,"index":8539}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13627451,"byte_end":13627461,"line_start":158,"line_end":158,"column_start":9,"column_end":19},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":5040},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13631262,"byte_end":13631272,"line_start":279,"line_end":279,"column_start":19,"column_end":29},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":5040},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13631299,"byte_end":13631309,"line_start":281,"line_end":281,"column_start":20,"column_end":30},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":5040},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13632535,"byte_end":13632545,"line_start":320,"line_end":320,"column_start":18,"column_end":28},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5040},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/join.rs","byte_start":13632811,"byte_end":13632821,"line_start":332,"line_end":332,"column_start":24,"column_end":34},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5040},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/list.rs","byte_start":13635234,"byte_end":13635244,"line_start":70,"line_end":70,"column_start":18,"column_end":28},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":4474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/list.rs","byte_start":13638299,"byte_end":13638314,"line_start":175,"line_end":175,"column_start":18,"column_end":33},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":4478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/raw.rs","byte_start":13643686,"byte_end":13643693,"line_start":54,"line_end":54,"column_start":6,"column_end":13},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":4556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/raw.rs","byte_start":13646017,"byte_end":13646024,"line_start":134,"line_end":134,"column_start":16,"column_end":23},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":4556},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/raw.rs","byte_start":13646114,"byte_end":13646121,"line_start":140,"line_end":140,"column_start":15,"column_end":22},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":4556},"to":{"krate":2,"index":3029}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/state.rs","byte_start":13650102,"byte_end":13650107,"line_start":98,"line_end":98,"column_start":6,"column_end":11},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":4636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/state.rs","byte_start":13664148,"byte_end":13664156,"line_start":497,"line_end":497,"column_start":6,"column_end":14},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":5054},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/state.rs","byte_start":13665929,"byte_end":13665934,"line_start":576,"line_end":576,"column_start":21,"column_end":26},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":4636},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/state.rs","byte_start":13666093,"byte_end":13666101,"line_start":583,"line_end":583,"column_start":21,"column_end":29},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":5054},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/waker.rs","byte_start":13667931,"byte_end":13667939,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4787},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13583790,"byte_end":13583794,"line_start":215,"line_end":215,"column_start":25,"column_end":29},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":4833},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13583825,"byte_end":13583829,"line_start":216,"line_end":216,"column_start":25,"column_end":29},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":4833},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13584113,"byte_end":13584121,"line_start":224,"line_end":224,"column_start":35,"column_end":43},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":4841},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13584162,"byte_end":13584170,"line_start":225,"line_end":225,"column_start":35,"column_end":43},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":4841},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13584698,"byte_end":13584709,"line_start":243,"line_end":243,"column_start":25,"column_end":36},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4853},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13584740,"byte_end":13584751,"line_start":244,"line_end":244,"column_start":25,"column_end":36},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4853},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13584877,"byte_end":13584881,"line_start":249,"line_end":249,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3031},"to":{"krate":0,"index":4863}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13584884,"byte_end":13584889,"line_start":249,"line_end":249,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":4863}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13587217,"byte_end":13587221,"line_start":321,"line_end":321,"column_start":18,"column_end":22},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":4833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13587473,"byte_end":13587481,"line_start":334,"line_end":334,"column_start":18,"column_end":26},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":4841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13587598,"byte_end":13587606,"line_start":341,"line_end":341,"column_start":22,"column_end":30},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13587758,"byte_end":13587762,"line_start":347,"line_end":347,"column_start":22,"column_end":26},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":4833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13587945,"byte_end":13587953,"line_start":355,"line_end":355,"column_start":22,"column_end":30},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":4841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13588073,"byte_end":13588077,"line_start":362,"line_end":362,"column_start":19,"column_end":23},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":4833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13588296,"byte_end":13588309,"line_start":371,"line_end":371,"column_start":19,"column_end":32},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4849},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13588475,"byte_end":13588486,"line_start":380,"line_end":380,"column_start":19,"column_end":30},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":4853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13589488,"byte_end":13589492,"line_start":423,"line_end":423,"column_start":27,"column_end":31},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":4833},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13589735,"byte_end":13589746,"line_start":433,"line_end":433,"column_start":27,"column_end":38},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":4853},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13589996,"byte_end":13590000,"line_start":443,"line_end":443,"column_start":24,"column_end":28},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":4833},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13590152,"byte_end":13590160,"line_start":449,"line_end":449,"column_start":24,"column_end":32},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":4841},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13590377,"byte_end":13590381,"line_start":458,"line_end":458,"column_start":38,"column_end":42},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":4833},"to":{"krate":0,"index":1034}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13590886,"byte_end":13590888,"line_start":476,"line_end":476,"column_start":23,"column_end":25},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":5061},"to":{"krate":2,"index":9562}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/task/mod.rs","byte_start":13590990,"byte_end":13590992,"line_start":482,"line_end":482,"column_start":6,"column_end":8},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":5061},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/metrics/mock.rs","byte_start":13677203,"byte_end":13677219,"line_start":9,"line_end":9,"column_start":6,"column_end":22},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":5114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/metrics/mock.rs","byte_start":13677400,"byte_end":13677413,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":5115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/metrics/mock.rs","byte_start":13677538,"byte_end":13677550,"line_start":26,"line_end":26,"column_start":6,"column_end":18},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":5116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/metrics/mock.rs","byte_start":13677907,"byte_end":13677919,"line_start":39,"line_end":39,"column_start":10,"column_end":22},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":5116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/basic_scheduler.rs","byte_start":13681506,"byte_end":13681520,"line_start":119,"line_end":119,"column_start":6,"column_end":20},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":5248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/basic_scheduler.rs","byte_start":13684486,"byte_end":13684500,"line_start":218,"line_end":218,"column_start":15,"column_end":29},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":5248},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/basic_scheduler.rs","byte_start":13686036,"byte_end":13686050,"line_start":262,"line_end":262,"column_start":21,"column_end":35},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":5248},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/basic_scheduler.rs","byte_start":13686210,"byte_end":13686214,"line_start":270,"line_end":270,"column_start":6,"column_end":10},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":5253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/basic_scheduler.rs","byte_start":13686773,"byte_end":13686780,"line_start":292,"line_end":292,"column_start":6,"column_end":13},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":5271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/basic_scheduler.rs","byte_start":13689590,"byte_end":13689597,"line_start":372,"line_end":372,"column_start":6,"column_end":13},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":5828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/basic_scheduler.rs","byte_start":13691443,"byte_end":13691450,"line_start":434,"line_end":434,"column_start":21,"column_end":28},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":5828},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/basic_scheduler.rs","byte_start":13691618,"byte_end":13691621,"line_start":442,"line_end":442,"column_start":19,"column_end":22},"kind":{"Impl":{"id":244}},"from":{"krate":5,"index":5984},"to":{"krate":0,"index":4863}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/basic_scheduler.rs","byte_start":13692825,"byte_end":13692831,"line_start":475,"line_end":475,"column_start":15,"column_end":21},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":5261},"to":{"krate":0,"index":7317}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/basic_scheduler.rs","byte_start":13693313,"byte_end":13693322,"line_start":496,"line_end":496,"column_start":6,"column_end":15},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":5321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/basic_scheduler.rs","byte_start":13695918,"byte_end":13695927,"line_start":573,"line_end":573,"column_start":15,"column_end":24},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":5321},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/blocking/pool.rs","byte_start":13699331,"byte_end":13699335,"line_start":85,"line_end":85,"column_start":6,"column_end":10},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":5422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/blocking/pool.rs","byte_start":13700934,"byte_end":13700946,"line_start":138,"line_end":138,"column_start":6,"column_end":18},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":5400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/blocking/pool.rs","byte_start":13703502,"byte_end":13703514,"line_start":208,"line_end":208,"column_start":15,"column_end":27},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":5400},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/blocking/pool.rs","byte_start":13703600,"byte_end":13703612,"line_start":214,"line_end":214,"column_start":21,"column_end":33},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":5400},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/blocking/pool.rs","byte_start":13703773,"byte_end":13703780,"line_start":222,"line_end":222,"column_start":6,"column_end":13},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":5837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/blocking/pool.rs","byte_start":13707126,"byte_end":13707131,"line_start":312,"line_end":312,"column_start":6,"column_end":11},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":5403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/blocking/pool.rs","byte_start":13710391,"byte_end":13710398,"line_start":409,"line_end":409,"column_start":21,"column_end":28},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":5837},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/blocking/schedule.rs","byte_start":13710901,"byte_end":13710913,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5476},"to":{"krate":0,"index":4863}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/blocking/shutdown.rs","byte_start":13711677,"byte_end":13711685,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/blocking/task.rs","byte_start":13713435,"byte_end":13713447,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":5511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/blocking/task.rs","byte_start":13713674,"byte_end":13713686,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":5511},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/blocking/task.rs","byte_start":13713716,"byte_end":13713728,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":5511},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13717350,"byte_end":13717357,"line_start":97,"line_end":97,"column_start":6,"column_end":13},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":5569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13738013,"byte_end":13738020,"line_start":746,"line_end":746,"column_start":10,"column_end":17},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":5569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/builder.rs","byte_start":13739703,"byte_end":13739710,"line_start":795,"line_end":795,"column_start":21,"column_end":28},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5569},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/context.rs","byte_start":13743779,"byte_end":13743789,"line_start":105,"line_end":105,"column_start":15,"column_end":25},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5884},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/driver.rs","byte_start":13748302,"byte_end":13748308,"line_start":168,"line_end":168,"column_start":6,"column_end":12},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5898},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/driver.rs","byte_start":13748892,"byte_end":13748898,"line_start":189,"line_end":189,"column_start":15,"column_end":21},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5898},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13751480,"byte_end":13751486,"line_start":72,"line_end":72,"column_start":6,"column_end":12},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5902},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13760102,"byte_end":13760108,"line_start":318,"line_end":318,"column_start":19,"column_end":25},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5902},"to":{"krate":0,"index":5743}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13760477,"byte_end":13760488,"line_start":336,"line_end":336,"column_start":6,"column_end":17},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":5908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13763649,"byte_end":13763664,"line_start":436,"line_end":436,"column_start":6,"column_end":21},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5923},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13764580,"byte_end":13764599,"line_start":468,"line_end":468,"column_start":21,"column_end":40},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5774},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13764887,"byte_end":13764902,"line_start":478,"line_end":478,"column_start":23,"column_end":38},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":5923},"to":{"krate":2,"index":9562}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/handle.rs","byte_start":13765211,"byte_end":13765226,"line_start":488,"line_end":488,"column_start":23,"column_end":38},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5923},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/spawner.rs","byte_start":13765606,"byte_end":13765613,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/idle.rs","byte_start":13773086,"byte_end":13773090,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":5962},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/idle.rs","byte_start":13777048,"byte_end":13777053,"line_start":145,"line_end":145,"column_start":6,"column_end":11},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":6433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/idle.rs","byte_start":13778565,"byte_end":13778570,"line_start":197,"line_end":197,"column_start":22,"column_end":27},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":6433},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/idle.rs","byte_start":13778743,"byte_end":13778748,"line_start":209,"line_end":209,"column_start":21,"column_end":26},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":6433},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/park.rs","byte_start":13780374,"byte_end":13780380,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":6032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/park.rs","byte_start":13780843,"byte_end":13780849,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":6032},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/park.rs","byte_start":13781165,"byte_end":13781171,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":6032},"to":{"krate":0,"index":901}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/park.rs","byte_start":13781890,"byte_end":13781898,"line_start":113,"line_end":113,"column_start":17,"column_end":25},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":6034},"to":{"krate":0,"index":908}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/park.rs","byte_start":13781967,"byte_end":13781972,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":6036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/queue.rs","byte_start":13788540,"byte_end":13788545,"line_start":42,"line_end":42,"column_start":25,"column_end":30},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":6127},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/queue.rs","byte_start":13788576,"byte_end":13788581,"line_start":43,"line_end":43,"column_start":25,"column_end":30},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":6127},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/queue.rs","byte_start":13789965,"byte_end":13789970,"line_start":90,"line_end":90,"column_start":9,"column_end":14},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":6120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/queue.rs","byte_start":13794812,"byte_end":13794825,"line_start":225,"line_end":225,"column_start":43,"column_end":56},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":6152},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/queue.rs","byte_start":13797304,"byte_end":13797309,"line_start":303,"line_end":303,"column_start":9,"column_end":14},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":6123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/queue.rs","byte_start":13802713,"byte_end":13802718,"line_start":467,"line_end":467,"column_start":19,"column_end":24},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":6123},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/queue.rs","byte_start":13802814,"byte_end":13802819,"line_start":473,"line_end":473,"column_start":18,"column_end":23},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":6120},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/queue.rs","byte_start":13802978,"byte_end":13802983,"line_start":481,"line_end":481,"column_start":9,"column_end":14},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":6127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/worker.rs","byte_start":13812654,"byte_end":13812659,"line_start":271,"line_end":271,"column_start":19,"column_end":24},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":6313},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/worker.rs","byte_start":13815818,"byte_end":13815824,"line_start":359,"line_end":359,"column_start":6,"column_end":12},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":6303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/worker.rs","byte_start":13816599,"byte_end":13816606,"line_start":390,"line_end":390,"column_start":6,"column_end":13},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":6300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/worker.rs","byte_start":13822371,"byte_end":13822375,"line_start":550,"line_end":550,"column_start":6,"column_end":10},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":6275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/worker.rs","byte_start":13827522,"byte_end":13827528,"line_start":704,"line_end":704,"column_start":6,"column_end":12},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":6271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/worker.rs","byte_start":13827703,"byte_end":13827706,"line_start":711,"line_end":711,"column_start":25,"column_end":28},"kind":{"Impl":{"id":297}},"from":{"krate":5,"index":5984},"to":{"krate":0,"index":4863}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/worker.rs","byte_start":13827992,"byte_end":13827998,"line_start":725,"line_end":725,"column_start":6,"column_end":12},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":6286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/worker.rs","byte_start":13832410,"byte_end":13832413,"line_start":872,"line_end":872,"column_start":35,"column_end":38},"kind":{"Impl":{"id":299}},"from":{"krate":5,"index":5984},"to":{"krate":0,"index":5743}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/mod.rs","byte_start":13769388,"byte_end":13769398,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":6412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/mod.rs","byte_start":13770751,"byte_end":13770761,"line_start":94,"line_end":94,"column_start":21,"column_end":31},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":6412},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/mod.rs","byte_start":13770900,"byte_end":13770910,"line_start":100,"line_end":100,"column_start":15,"column_end":25},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":6412},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/mod.rs","byte_start":13771013,"byte_end":13771020,"line_start":108,"line_end":108,"column_start":6,"column_end":13},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":6444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/thread_pool/mod.rs","byte_start":13772268,"byte_end":13772275,"line_start":153,"line_end":153,"column_start":21,"column_end":28},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":6444},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13557841,"byte_end":13557848,"line_start":310,"line_end":310,"column_start":10,"column_end":17},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":6473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/runtime/mod.rs","byte_start":13568530,"byte_end":13568537,"line_start":595,"line_end":595,"column_start":19,"column_end":26},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":6473},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/coop.rs","byte_start":128039,"byte_end":128045,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":6492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/coop.rs","byte_start":129633,"byte_end":129643,"line_start":89,"line_end":89,"column_start":23,"column_end":33},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":933},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/coop.rs","byte_start":130601,"byte_end":130617,"line_start":137,"line_end":137,"column_start":10,"column_end":26},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":6511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/coop.rs","byte_start":130749,"byte_end":130765,"line_start":143,"line_end":143,"column_start":19,"column_end":35},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":6511},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/coop.rs","byte_start":132505,"byte_end":132511,"line_start":184,"line_end":184,"column_start":10,"column_end":16},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":6492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/notify.rs","byte_start":13857857,"byte_end":13857865,"line_start":248,"line_end":248,"column_start":26,"column_end":34},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":6786},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/notify.rs","byte_start":13857898,"byte_end":13857906,"line_start":249,"line_end":249,"column_start":26,"column_end":34},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":6786},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/notify.rs","byte_start":13858857,"byte_end":13858863,"line_start":291,"line_end":291,"column_start":6,"column_end":12},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":6764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/notify.rs","byte_start":13867702,"byte_end":13867708,"line_start":556,"line_end":556,"column_start":18,"column_end":24},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":6764},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/notify.rs","byte_start":13869618,"byte_end":13869626,"line_start":611,"line_end":611,"column_start":6,"column_end":14},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":6786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/notify.rs","byte_start":13880870,"byte_end":13880878,"line_start":885,"line_end":885,"column_start":17,"column_end":25},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":6786},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/notify.rs","byte_start":13881046,"byte_end":13881054,"line_start":893,"line_end":893,"column_start":15,"column_end":23},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":6786},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/notify.rs","byte_start":13882926,"byte_end":13882932,"line_start":940,"line_end":940,"column_start":35,"column_end":41},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":6779},"to":{"krate":0,"index":1034}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13892403,"byte_end":13892412,"line_start":341,"line_end":341,"column_start":27,"column_end":36},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":6816},"to":{"krate":2,"index":9562}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13892574,"byte_end":13892583,"line_start":347,"line_end":347,"column_start":32,"column_end":41},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":6816},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13892652,"byte_end":13892664,"line_start":351,"line_end":351,"column_start":27,"column_end":39},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":6830},"to":{"krate":2,"index":9562}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13892963,"byte_end":13892975,"line_start":360,"line_end":360,"column_start":32,"column_end":44},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":6830},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13893840,"byte_end":13893844,"line_start":392,"line_end":392,"column_start":6,"column_end":10},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":6679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13897964,"byte_end":13897970,"line_start":539,"line_end":539,"column_start":9,"column_end":15},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":6804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13907271,"byte_end":13907277,"line_start":827,"line_end":827,"column_start":18,"column_end":24},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":6804},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13907727,"byte_end":13907735,"line_start":843,"line_end":843,"column_start":9,"column_end":17},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":6810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13914111,"byte_end":13914119,"line_start":1049,"line_end":1049,"column_start":18,"column_end":26},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":6810},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13914577,"byte_end":13914585,"line_start":1065,"line_end":1065,"column_start":20,"column_end":28},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":6810},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13915656,"byte_end":13915661,"line_start":1094,"line_end":1094,"column_start":9,"column_end":14},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":6673},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13919549,"byte_end":13919554,"line_start":1205,"line_end":1205,"column_start":31,"column_end":36},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":6673},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13919591,"byte_end":13919596,"line_start":1206,"line_end":1206,"column_start":31,"column_end":36},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":6673},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13919697,"byte_end":13919702,"line_start":1212,"line_end":1212,"column_start":18,"column_end":23},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":6673},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13920079,"byte_end":13920084,"line_start":1230,"line_end":1230,"column_start":36,"column_end":41},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":6673},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13921136,"byte_end":13921141,"line_start":1264,"line_end":1264,"column_start":6,"column_end":11},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":6845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/oneshot.rs","byte_start":13924098,"byte_end":13924103,"line_start":1357,"line_end":1357,"column_start":21,"column_end":26},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":6845},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/task/atomic_waker.rs","byte_start":13925831,"byte_end":13925842,"line_start":32,"line_end":32,"column_start":24,"column_end":35},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":6891},"to":{"krate":2,"index":8539}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/task/atomic_waker.rs","byte_start":13925866,"byte_end":13925877,"line_start":33,"line_end":33,"column_start":21,"column_end":32},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":6891},"to":{"krate":2,"index":8538}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/task/atomic_waker.rs","byte_start":13930816,"byte_end":13930827,"line_start":140,"line_end":140,"column_start":6,"column_end":17},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":6891},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/task/atomic_waker.rs","byte_start":13939576,"byte_end":13939587,"line_start":344,"line_end":344,"column_start":18,"column_end":29},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":6891},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/task/atomic_waker.rs","byte_start":13939673,"byte_end":13939684,"line_start":350,"line_end":350,"column_start":21,"column_end":32},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":6891},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/task/atomic_waker.rs","byte_start":13939817,"byte_end":13939828,"line_start":356,"line_end":356,"column_start":22,"column_end":33},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":6891},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/task/atomic_waker.rs","byte_start":13939853,"byte_end":13939864,"line_start":357,"line_end":357,"column_start":22,"column_end":33},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":6891},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/sync/task/atomic_waker.rs","byte_start":13939960,"byte_end":13939965,"line_start":364,"line_end":364,"column_start":19,"column_end":24},"kind":{"Impl":{"id":344}},"from":{"krate":2,"index":13229},"to":{"krate":0,"index":6923}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/yield_now.rs","byte_start":13955058,"byte_end":13955066,"line_start":43,"line_end":43,"column_start":21,"column_end":29},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":6983},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13965740,"byte_end":13965748,"line_start":322,"line_end":322,"column_start":6,"column_end":14},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":7254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13974302,"byte_end":13974310,"line_start":570,"line_end":570,"column_start":21,"column_end":29},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":7254},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13974449,"byte_end":13974457,"line_start":576,"line_end":576,"column_start":17,"column_end":25},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":7254},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13975407,"byte_end":13975415,"line_start":600,"line_end":600,"column_start":18,"column_end":26},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":7254},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13975496,"byte_end":13975504,"line_start":606,"line_end":606,"column_start":15,"column_end":23},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":7254},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13976327,"byte_end":13976334,"line_start":633,"line_end":633,"column_start":6,"column_end":13},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":7042},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13976906,"byte_end":13976914,"line_start":655,"line_end":655,"column_start":28,"column_end":36},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":7556},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13977799,"byte_end":13977805,"line_start":686,"line_end":686,"column_start":6,"column_end":12},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":7046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/local.rs","byte_start":13978662,"byte_end":13978665,"line_start":713,"line_end":713,"column_start":25,"column_end":28},"kind":{"Impl":{"id":354}},"from":{"krate":5,"index":5984},"to":{"krate":0,"index":4863}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13981725,"byte_end":13981733,"line_start":101,"line_end":101,"column_start":18,"column_end":26},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":7145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13984303,"byte_end":13984311,"line_start":197,"line_end":197,"column_start":25,"column_end":33},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":7145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13984519,"byte_end":13984527,"line_start":205,"line_end":205,"column_start":33,"column_end":41},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":7145},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13985502,"byte_end":13985517,"line_start":246,"line_end":246,"column_start":21,"column_end":36},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":7503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13985794,"byte_end":13985799,"line_start":254,"line_end":254,"column_start":26,"column_end":31},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":7176},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13986331,"byte_end":13986346,"line_start":276,"line_end":276,"column_start":40,"column_end":55},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":7503},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13986693,"byte_end":13986704,"line_start":290,"line_end":290,"column_start":21,"column_end":32},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":7268},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13986848,"byte_end":13986859,"line_start":296,"line_end":296,"column_start":23,"column_end":34},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":7268},"to":{"krate":2,"index":9562}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/task_local.rs","byte_start":13987006,"byte_end":13987017,"line_start":302,"line_end":302,"column_start":16,"column_end":27},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":7268},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/task/unconstrained.rs","byte_start":13987419,"byte_end":13987432,"line_start":16,"line_end":16,"column_start":20,"column_end":33},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":7470},"to":{"krate":2,"index":12917}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/atomic_cell.rs","byte_start":148691,"byte_end":148701,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":955},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/atomic_cell.rs","byte_start":148738,"byte_end":148748,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":955},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/atomic_cell.rs","byte_start":148764,"byte_end":148774,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/atomic_cell.rs","byte_start":149528,"byte_end":149538,"line_start":46,"line_end":46,"column_start":18,"column_end":28},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":955},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/wake_list.rs","byte_start":149851,"byte_end":149859,"line_start":12,"line_end":12,"column_start":6,"column_end":14},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/wake_list.rs","byte_start":150879,"byte_end":150887,"line_start":48,"line_end":48,"column_start":15,"column_end":23},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":986},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":151942,"byte_end":151952,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":1024},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":152022,"byte_end":152032,"line_start":31,"line_end":31,"column_start":31,"column_end":41},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":1024},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":154936,"byte_end":154944,"line_start":108,"line_end":108,"column_start":31,"column_end":39},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":1040},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":154981,"byte_end":154989,"line_start":109,"line_end":109,"column_start":31,"column_end":39},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":1040},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":155040,"byte_end":155050,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":1024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":155285,"byte_end":155295,"line_start":124,"line_end":124,"column_start":15,"column_end":25},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":1024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":158301,"byte_end":158311,"line_start":218,"line_end":218,"column_start":30,"column_end":40},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":1024},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":158688,"byte_end":158698,"line_start":234,"line_end":234,"column_start":15,"column_end":25},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":1024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":158885,"byte_end":158895,"line_start":241,"line_end":241,"column_start":27,"column_end":37},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":1024},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":160277,"byte_end":160285,"line_start":295,"line_end":295,"column_start":9,"column_end":17},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":1040},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/linked_list.rs","byte_start":161890,"byte_end":161898,"line_start":344,"line_end":344,"column_start":24,"column_end":32},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":1040},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/rand.rs","byte_start":171994,"byte_end":172002,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":7285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/wake.rs","byte_start":13988575,"byte_end":13988579,"line_start":9,"line_end":9,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":3019},"to":{"krate":0,"index":7317}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/wake.rs","byte_start":13988582,"byte_end":13988586,"line_start":9,"line_end":9,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3031},"to":{"krate":0,"index":7317}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/wake.rs","byte_start":13988589,"byte_end":13988594,"line_start":9,"line_end":9,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":7317}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/wake.rs","byte_start":13988921,"byte_end":13988929,"line_start":24,"line_end":24,"column_start":16,"column_end":24},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":7393},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/sync_wrapper.rs","byte_start":13990920,"byte_end":13990931,"line_start":12,"line_end":12,"column_start":31,"column_end":42},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":7348},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/sync_wrapper.rs","byte_start":13991091,"byte_end":13991102,"line_start":16,"line_end":16,"column_start":25,"column_end":36},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":7348},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/sync_wrapper.rs","byte_start":13991118,"byte_end":13991129,"line_start":18,"line_end":18,"column_start":9,"column_end":20},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":7348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/vec_deque_cell.rs","byte_start":13991705,"byte_end":13991717,"line_start":14,"line_end":14,"column_start":31,"column_end":43},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":7372},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/vec_deque_cell.rs","byte_start":13991733,"byte_end":13991745,"line_start":16,"line_end":16,"column_start":9,"column_end":21},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":7372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/try_lock.rs","byte_start":13993415,"byte_end":13993422,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":7423},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/try_lock.rs","byte_start":13993459,"byte_end":13993466,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":7423},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/try_lock.rs","byte_start":13993504,"byte_end":13993513,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":7427},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/try_lock.rs","byte_start":13993699,"byte_end":13993706,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":7423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/try_lock.rs","byte_start":13994340,"byte_end":13994349,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":7427},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/try_lock.rs","byte_start":13994481,"byte_end":13994490,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":7427},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/util/try_lock.rs","byte_start":13994612,"byte_end":13994621,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":7427},"to":{"krate":2,"index":3258}}]}