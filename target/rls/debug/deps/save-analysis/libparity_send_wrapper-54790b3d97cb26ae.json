{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0","program":"/Users/Polly/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","parity_send_wrapper","/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=54790b3d97cb26ae","-C","extra-filename=-54790b3d97cb26ae","--out-dir","/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps","-L","dependency=/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/Polly/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps/libparity_send_wrapper-54790b3d97cb26ae.rmeta"},"prelude":{"crate_id":{"name":"parity_send_wrapper","disambiguator":[6995296975941877594,0]},"crate_root":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src","external_crates":[{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8160662364186215271,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[15508592535294299014,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17322933587189210298,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13179528220501159687,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14405461281750379523,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13415789777365414266,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14087240094303311622,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8480099122681864520,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7455356171819553965,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4032517352972638871,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[100442770310914164,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[10836884096018266442,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[8583823352757433821,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16157489773683242703,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[6201654522556613481,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15759299131545182078,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[10203585439616027660,0]}}],"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":334,"byte_end":8179,"line_start":9,"line_end":267,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":334,"byte_end":8179,"line_start":9,"line_end":267,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":28},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":41},{"krate":0,"index":44}],"decl_id":null,"docs":" This [Rust] library implements a wrapper type called `SendWrapper` which allows you to move around non-[`Send`] types\n between threads, as long as you access the contained value only from within the original thread. You also have to\n make sure that the wrapper is dropped from within the original thread. If any of these constraints is violated,\n a panic occurs.","sig":null,"attributes":[{"value":"/ This [Rust] library implements a wrapper type called `SendWrapper` which allows you to move around non-[`Send`] types","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":334,"byte_end":455,"line_start":9,"line_end":9,"column_start":1,"column_end":122}},{"value":"/ between threads, as long as you access the contained value only from within the original thread. You also have to","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":456,"byte_end":573,"line_start":10,"line_end":10,"column_start":1,"column_end":118}},{"value":"/ make sure that the wrapper is dropped from within the original thread. If any of these constraints is violated,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":574,"byte_end":689,"line_start":11,"line_end":11,"column_start":1,"column_end":116}},{"value":"/ a panic occurs.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":690,"byte_end":709,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":710,"byte_end":713,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The idea for this library was born in the context of a [`GTK+`]/[`gtk-rs`]-based application. [`GTK+`] applications","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":714,"byte_end":833,"line_start":14,"line_end":14,"column_start":1,"column_end":120}},{"value":"/ are strictly single-threaded. It is not allowed to call any [`GTK+`] method from a thread different to the main","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":834,"byte_end":949,"line_start":15,"line_end":15,"column_start":1,"column_end":116}},{"value":"/ thread. Consequently, all [`gtk-rs`] structs are non-[`Send`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":950,"byte_end":1016,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1017,"byte_end":1020,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Sometimes you still want to do some work in background. It is possible to enqueue [`GTK+`] calls from there to be","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1021,"byte_end":1138,"line_start":18,"line_end":18,"column_start":1,"column_end":118}},{"value":"/ executed in the main thread [using `Glib`]. This way you can know, that the [`gtk-rs`] structs involved are only","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1139,"byte_end":1255,"line_start":19,"line_end":19,"column_start":1,"column_end":117}},{"value":"/ accessed in the main thread and will also be dropped there. This library makes it possible that [`gtk-rs`] structs","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1256,"byte_end":1374,"line_start":20,"line_end":20,"column_start":1,"column_end":119}},{"value":"/ can leave the main thread at all, like required in the given","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1375,"byte_end":1439,"line_start":21,"line_end":21,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1440,"byte_end":1443,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1444,"byte_end":1458,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1459,"byte_end":1462,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1463,"byte_end":1474,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/ use send_wrapper::SendWrapper;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1475,"byte_end":1509,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ use std::rc::Rc;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1510,"byte_end":1530,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/ use std::thread;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1531,"byte_end":1551,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1552,"byte_end":1585,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1586,"byte_end":1589,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // This import is important. It allows you to unwrap the value using deref(),","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1590,"byte_end":1671,"line_start":31,"line_end":31,"column_start":1,"column_end":82}},{"value":"/ // deref_mut() or Deref coercion.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1672,"byte_end":1709,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/ use std::ops::{Deref, DerefMut};","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1710,"byte_end":1746,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1747,"byte_end":1750,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ // Rc is a non-Send type.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1751,"byte_end":1780,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/ let value = Rc::new(42);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1781,"byte_end":1809,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1810,"byte_end":1813,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // We now wrap the value with `SendWrapper` (value is moved inside).","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1814,"byte_end":1886,"line_start":38,"line_end":38,"column_start":1,"column_end":73}},{"value":"/ let wrapped_value = SendWrapper::new(value);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1887,"byte_end":1935,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1936,"byte_end":1939,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // A channel allows us to move the wrapped value between threads.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":1940,"byte_end":2009,"line_start":41,"line_end":41,"column_start":1,"column_end":70}},{"value":"/ let (sender, receiver) = channel();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2010,"byte_end":2049,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2050,"byte_end":2053,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let t = thread::spawn(move || {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2054,"byte_end":2089,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2090,"byte_end":2093,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/// This would panic (because of dereferencing in wrong thread):","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2094,"byte_end":2160,"line_start":46,"line_end":46,"column_start":1,"column_end":67}},{"value":"/// let value = wrapped_value.deref();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2161,"byte_end":2201,"line_start":47,"line_end":47,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2202,"byte_end":2205,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ \t// Move SendWrapper back to main thread, so it can be dropped from there.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2206,"byte_end":2284,"line_start":49,"line_end":49,"column_start":1,"column_end":79}},{"value":"/ \t// If you leave this out the thread will panic because of dropping from wrong thread.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2285,"byte_end":2375,"line_start":50,"line_end":50,"column_start":1,"column_end":91}},{"value":"/ \tsender.send(wrapped_value).unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2376,"byte_end":2417,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2418,"byte_end":2421,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ });","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2422,"byte_end":2429,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2430,"byte_end":2433,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let wrapped_value = receiver.recv().unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2434,"byte_end":2483,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2484,"byte_end":2487,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // Now you can use the value again.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2488,"byte_end":2527,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"/ let value = wrapped_value.deref();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2528,"byte_end":2566,"line_start":58,"line_end":58,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2567,"byte_end":2570,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // alternatives for dereferencing:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2571,"byte_end":2609,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ // let value = *wrapped_value;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2610,"byte_end":2644,"line_start":61,"line_end":61,"column_start":1,"column_end":35}},{"value":"/ // let value: &NonSendType = &wrapped_value;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2645,"byte_end":2693,"line_start":62,"line_end":62,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2694,"byte_end":2697,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // alternatives for mutable dereferencing (value and wrapped_value must be mutable too, then):","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2698,"byte_end":2796,"line_start":64,"line_end":64,"column_start":1,"column_end":99}},{"value":"/ // let mut value = wrapped_value.deref_mut();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2797,"byte_end":2846,"line_start":65,"line_end":65,"column_start":1,"column_end":50}},{"value":"/ // let mut value = &mut *wrapped_value;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2847,"byte_end":2890,"line_start":66,"line_end":66,"column_start":1,"column_end":44}},{"value":"/ // let mut value: &mut NonSendType = &mut wrapped_value;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2891,"byte_end":2951,"line_start":67,"line_end":67,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2952,"byte_end":2959,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2960,"byte_end":2963,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # License","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2964,"byte_end":2977,"line_start":70,"line_end":70,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2978,"byte_end":2981,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ `send_wrapper` is distributed under the terms of both the MIT license and the Apache License (Version 2.0).","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":2982,"byte_end":3093,"line_start":72,"line_end":72,"column_start":1,"column_end":112}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":3094,"byte_end":3097,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ See LICENSE-APACHE.txt, and LICENSE-MIT.txt for details.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":3098,"byte_end":3158,"line_start":74,"line_end":74,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":3159,"byte_end":3162,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [Rust]: https://www.rust-lang.org","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":3163,"byte_end":3200,"line_start":76,"line_end":76,"column_start":1,"column_end":38}},{"value":"/ [`Send`]: https://doc.rust-lang.org/std/marker/trait.Send.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":3201,"byte_end":3267,"line_start":77,"line_end":77,"column_start":1,"column_end":67}},{"value":"/ [`gtk-rs`]: http://gtk-rs.org/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":3268,"byte_end":3302,"line_start":78,"line_end":78,"column_start":1,"column_end":35}},{"value":"/ [`GTK+`]: https://www.gtk.org/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":3303,"byte_end":3337,"line_start":79,"line_end":79,"column_start":1,"column_end":35}},{"value":"/ [using `Glib`]: http://gtk-rs.org/docs/glib/source/fn.idle_add.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":3338,"byte_end":3409,"line_start":80,"line_end":80,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":24},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":4023,"byte_end":4034,"line_start":92,"line_end":92,"column_start":12,"column_end":23},"name":"SendWrapper","qualname":"::SendWrapper","value":"SendWrapper {  }","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27}],"decl_id":null,"docs":" A wrapper which allows you to move around non-[`Send`]-types between threads, as long as you access the contained\n value only from within the original thread and make sure that it is dropped from within the original thread.\n","sig":null,"attributes":[{"value":"/ A wrapper which allows you to move around non-[`Send`]-types between threads, as long as you access the contained","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":3781,"byte_end":3898,"line_start":90,"line_end":90,"column_start":1,"column_end":118}},{"value":"/ value only from within the original thread and make sure that it is dropped from within the original thread.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":3899,"byte_end":4011,"line_start":91,"line_end":91,"column_start":1,"column_end":113}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":4224,"byte_end":4227,"line_start":101,"line_end":101,"column_start":9,"column_end":12},"name":"new","qualname":"<SendWrapper<T>>::new","value":"pub fn new(T) -> SendWrapper<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a SendWrapper<T> wrapper around a value of type T.\n The wrapper takes ownership of the value.\n","sig":null,"attributes":[{"value":"/ Create a SendWrapper<T> wrapper around a value of type T.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":4107,"byte_end":4168,"line_start":99,"line_end":99,"column_start":2,"column_end":63}},{"value":"/ The wrapper takes ownership of the value.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":4170,"byte_end":4215,"line_start":100,"line_end":100,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":4447,"byte_end":4452,"line_start":109,"line_end":109,"column_start":9,"column_end":14},"name":"valid","qualname":"<SendWrapper<T>>::valid","value":"pub fn valid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the value can be safely accessed from within the current thread.\n","sig":null,"attributes":[{"value":"/ Returns if the value can be safely accessed from within the current thread.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":4359,"byte_end":4438,"line_start":108,"line_end":108,"column_start":2,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":4709,"byte_end":4713,"line_start":118,"line_end":118,"column_start":9,"column_end":13},"name":"take","qualname":"<SendWrapper<T>>::take","value":"pub fn take(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the SendWrapper.","sig":null,"attributes":[{"value":"/ Takes the value out of the SendWrapper.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":4518,"byte_end":4561,"line_start":113,"line_end":113,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":4563,"byte_end":4566,"line_start":114,"line_end":114,"column_start":2,"column_end":5}},{"value":"/ #Panics","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":4568,"byte_end":4579,"line_start":115,"line_end":115,"column_start":2,"column_end":13}},{"value":"/ Panics if it is called from a different thread than the one the SendWrapper<T> instance has","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":4581,"byte_end":4676,"line_start":116,"line_end":116,"column_start":2,"column_end":97}},{"value":"/ been created with.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":4678,"byte_end":4700,"line_start":117,"line_end":117,"column_start":2,"column_end":24}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":4088,"byte_end":4099,"line_start":97,"line_end":97,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":4966,"byte_end":4977,"line_start":129,"line_end":129,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":5009,"byte_end":5020,"line_start":130,"line_end":130,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":5047,"byte_end":5058,"line_start":132,"line_end":132,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":5471,"byte_end":5482,"line_start":151,"line_end":151,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":5897,"byte_end":5908,"line_start":169,"line_end":169,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":4088,"byte_end":4099,"line_start":97,"line_end":97,"column_start":9,"column_end":20},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":24},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":4966,"byte_end":4977,"line_start":129,"line_end":129,"column_start":25,"column_end":36},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":24},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":5009,"byte_end":5020,"line_start":130,"line_end":130,"column_start":25,"column_end":36},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":24},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":5047,"byte_end":5058,"line_start":132,"line_end":132,"column_start":19,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":24},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":5471,"byte_end":5482,"line_start":151,"line_end":151,"column_start":22,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":24},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/parity-send-wrapper-0.1.0/src/lib.rs","byte_start":5897,"byte_end":5908,"line_start":169,"line_end":169,"column_start":18,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":24},"to":{"krate":2,"index":3258}}]}