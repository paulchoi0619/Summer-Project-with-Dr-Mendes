{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24","program":"/Users/Polly/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","flate2","--edition=2018","/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"any_zlib\"","--cfg","feature=\"default\"","--cfg","feature=\"libz-sys\"","--cfg","feature=\"miniz_oxide\"","--cfg","feature=\"rust_backend\"","--cfg","feature=\"zlib\"","-C","metadata=00d1c0a08c890967","-C","extra-filename=-00d1c0a08c890967","--out-dir","/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps","-L","dependency=/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps","--extern","crc32fast=/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps/libcrc32fast-9ad9bb21dd918c0a.rmeta","--extern","libz_sys=/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps/liblibz_sys-7f67ae73034fadf4.rmeta","--extern","miniz_oxide=/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps/libminiz_oxide-9df38a950f70d867.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/Polly/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps/libflate2-00d1c0a08c890967.rmeta"},"prelude":{"crate_id":{"name":"flate2","disambiguator":[956608581322213125,0]},"crate_root":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src","external_crates":[{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8160662364186215271,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[15508592535294299014,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17322933587189210298,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13179528220501159687,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14405461281750379523,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13415789777365414266,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14087240094303311622,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8480099122681864520,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7455356171819553965,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4032517352972638871,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[100442770310914164,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[10836884096018266442,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[8583823352757433821,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16157489773683242703,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[6201654522556613481,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15759299131545182078,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[10203585439616027660,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","num":18,"id":{"name":"crc32fast","disambiguator":[18116904166545798813,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","num":19,"id":{"name":"cfg_if","disambiguator":[10187493175436223894,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","num":20,"id":{"name":"libz_sys","disambiguator":[2319288483421271304,0]}}],"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":0,"byte_end":7427,"line_start":1,"line_end":204,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1240},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3487,"byte_end":3490,"line_start":80,"line_end":80,"column_start":22,"column_end":25},"alias_span":null,"name":"Crc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1245},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3492,"byte_end":3501,"line_start":80,"line_end":80,"column_start":27,"column_end":36},"alias_span":null,"name":"CrcReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1252},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3503,"byte_end":3512,"line_start":80,"line_end":80,"column_start":38,"column_end":47},"alias_span":null,"name":"CrcWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1444},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3534,"byte_end":3543,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"alias_span":null,"name":"GzBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1428},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3564,"byte_end":3572,"line_start":82,"line_end":82,"column_start":20,"column_end":28},"alias_span":null,"name":"GzHeader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1452},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3595,"byte_end":3603,"line_start":83,"line_end":83,"column_start":22,"column_end":30},"alias_span":null,"name":"Compress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1525},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3605,"byte_end":3618,"line_start":83,"line_end":83,"column_start":32,"column_end":45},"alias_span":null,"name":"CompressError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1456},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3620,"byte_end":3630,"line_start":83,"line_end":83,"column_start":47,"column_end":57},"alias_span":null,"name":"Decompress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1520},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3632,"byte_end":3647,"line_start":83,"line_end":83,"column_start":59,"column_end":74},"alias_span":null,"name":"DecompressError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1521},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3632,"byte_end":3647,"line_start":83,"line_end":83,"column_start":59,"column_end":74},"alias_span":null,"name":"DecompressError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1529},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3649,"byte_end":3655,"line_start":83,"line_end":83,"column_start":76,"column_end":82},"alias_span":null,"name":"Status","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1460},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3679,"byte_end":3692,"line_start":84,"line_end":84,"column_start":22,"column_end":35},"alias_span":null,"name":"FlushCompress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1489},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3694,"byte_end":3709,"line_start":84,"line_end":84,"column_start":37,"column_end":52},"alias_span":null,"name":"FlushDecompress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1279},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":4011,"byte_end":4025,"line_start":100,"line_end":100,"column_start":35,"column_end":49},"alias_span":null,"name":"DeflateDecoder","value":"","parent":{"krate":0,"index":1166}},{"kind":"Use","ref_id":{"krate":0,"index":1273},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":4061,"byte_end":4075,"line_start":101,"line_end":101,"column_start":35,"column_end":49},"alias_span":null,"name":"DeflateEncoder","value":"","parent":{"krate":0,"index":1166}},{"kind":"Use","ref_id":{"krate":0,"index":1398},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":4106,"byte_end":4115,"line_start":102,"line_end":102,"column_start":30,"column_end":39},"alias_span":null,"name":"GzDecoder","value":"","parent":{"krate":0,"index":1166}},{"kind":"Use","ref_id":{"krate":0,"index":1392},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":4146,"byte_end":4155,"line_start":103,"line_end":103,"column_start":30,"column_end":39},"alias_span":null,"name":"GzEncoder","value":"","parent":{"krate":0,"index":1166}},{"kind":"Use","ref_id":{"krate":0,"index":1404},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":4186,"byte_end":4200,"line_start":104,"line_end":104,"column_start":30,"column_end":44},"alias_span":null,"name":"MultiGzDecoder","value":"","parent":{"krate":0,"index":1166}},{"kind":"Use","ref_id":{"krate":0,"index":1577},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":4233,"byte_end":4244,"line_start":105,"line_end":105,"column_start":32,"column_end":43},"alias_span":null,"name":"ZlibDecoder","value":"","parent":{"krate":0,"index":1166}},{"kind":"Use","ref_id":{"krate":0,"index":1571},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":4277,"byte_end":4288,"line_start":106,"line_end":106,"column_start":32,"column_end":43},"alias_span":null,"name":"ZlibEncoder","value":"","parent":{"krate":0,"index":1166}},{"kind":"Use","ref_id":{"krate":0,"index":1291},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":4513,"byte_end":4527,"line_start":114,"line_end":114,"column_start":36,"column_end":50},"alias_span":null,"name":"DeflateDecoder","value":"","parent":{"krate":0,"index":1188}},{"kind":"Use","ref_id":{"krate":0,"index":1285},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":4564,"byte_end":4578,"line_start":115,"line_end":115,"column_start":36,"column_end":50},"alias_span":null,"name":"DeflateEncoder","value":"","parent":{"krate":0,"index":1188}},{"kind":"Use","ref_id":{"krate":0,"index":1419},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":4610,"byte_end":4619,"line_start":116,"line_end":116,"column_start":31,"column_end":40},"alias_span":null,"name":"GzDecoder","value":"","parent":{"krate":0,"index":1188}},{"kind":"Use","ref_id":{"krate":0,"index":1410},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":4651,"byte_end":4660,"line_start":117,"line_end":117,"column_start":31,"column_end":40},"alias_span":null,"name":"GzEncoder","value":"","parent":{"krate":0,"index":1188}},{"kind":"Use","ref_id":{"krate":0,"index":1589},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":4694,"byte_end":4705,"line_start":118,"line_end":118,"column_start":33,"column_end":44},"alias_span":null,"name":"ZlibDecoder","value":"","parent":{"krate":0,"index":1188}},{"kind":"Use","ref_id":{"krate":0,"index":1583},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":4739,"byte_end":4750,"line_start":119,"line_end":119,"column_start":33,"column_end":44},"alias_span":null,"name":"ZlibEncoder","value":"","parent":{"krate":0,"index":1188}},{"kind":"Use","ref_id":{"krate":0,"index":1266},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":4985,"byte_end":4999,"line_start":127,"line_end":127,"column_start":38,"column_end":52},"alias_span":null,"name":"DeflateDecoder","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":1259},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":5038,"byte_end":5052,"line_start":128,"line_end":128,"column_start":38,"column_end":52},"alias_span":null,"name":"DeflateEncoder","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":1334},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":5086,"byte_end":5095,"line_start":129,"line_end":129,"column_start":33,"column_end":42},"alias_span":null,"name":"GzDecoder","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":1325},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":5129,"byte_end":5138,"line_start":130,"line_end":130,"column_start":33,"column_end":42},"alias_span":null,"name":"GzEncoder","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":1385},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":5172,"byte_end":5186,"line_start":131,"line_end":131,"column_start":33,"column_end":47},"alias_span":null,"name":"MultiGzDecoder","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":1564},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":5222,"byte_end":5233,"line_start":132,"line_end":132,"column_start":35,"column_end":46},"alias_span":null,"name":"ZlibDecoder","value":"","parent":{"krate":0,"index":1207}},{"kind":"Use","ref_id":{"krate":0,"index":1557},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":5269,"byte_end":5280,"line_start":133,"line_end":133,"column_start":35,"column_end":46},"alias_span":null,"name":"ZlibEncoder","value":"","parent":{"krate":0,"index":1207}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":0,"byte_end":7427,"line_start":1,"line_end":204,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":79},{"krate":0,"index":127},{"krate":0,"index":285},{"krate":0,"index":501},{"krate":0,"index":843},{"krate":0,"index":927},{"krate":0,"index":1009},{"krate":0,"index":1166},{"krate":0,"index":1188},{"krate":0,"index":1207},{"krate":0,"index":1229},{"krate":0,"index":1595},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1608},{"krate":0,"index":1232},{"krate":0,"index":1238}],"decl_id":null,"docs":" A DEFLATE-based stream compression/decompression library","sig":null,"attributes":[{"value":"/ A DEFLATE-based stream compression/decompression library","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":0,"byte_end":60,"line_start":1,"line_end":1,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":61,"byte_end":64,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library provides support for compression and decompression of","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":65,"byte_end":135,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ DEFLATE-based streams:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":136,"byte_end":162,"line_start":4,"line_end":4,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":163,"byte_end":166,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * the DEFLATE format itself","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":167,"byte_end":198,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/ * the zlib format","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":199,"byte_end":220,"line_start":7,"line_end":7,"column_start":1,"column_end":22}},{"value":"/ * gzip","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":221,"byte_end":231,"line_start":8,"line_end":8,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":232,"byte_end":235,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ These three formats are all closely related and largely only differ in their","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":236,"byte_end":316,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ headers/footers. This crate has three types in each submodule for dealing","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":317,"byte_end":394,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ with these three formats.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":395,"byte_end":424,"line_start":12,"line_end":12,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":425,"byte_end":428,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":429,"byte_end":449,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":450,"byte_end":453,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ In addition to supporting three formats, this crate supports several different","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":454,"byte_end":536,"line_start":16,"line_end":16,"column_start":1,"column_end":83}},{"value":"/ backends, controlled through this crate's features:","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":537,"byte_end":592,"line_start":17,"line_end":17,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":593,"byte_end":596,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `default`, or `rust_backend` - this implementation uses the `miniz_oxide`","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":597,"byte_end":676,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/   crate which is a port of `miniz.c` (below) to Rust. This feature does not","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":677,"byte_end":756,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   require a C compiler and only requires Rust code.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":757,"byte_end":812,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":813,"byte_end":816,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `zlib` - this feature will enable linking against the `libz` library, typically found on most","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":817,"byte_end":916,"line_start":23,"line_end":23,"column_start":1,"column_end":100}},{"value":"/   Linux systems by default. If the library isn't found to already be on the system it will be","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":917,"byte_end":1014,"line_start":24,"line_end":24,"column_start":1,"column_end":98}},{"value":"/   compiled from source (this is a C library).","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":1015,"byte_end":1064,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":1065,"byte_end":1068,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ There's various tradeoffs associated with each implementation, but in general you probably","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":1069,"byte_end":1163,"line_start":27,"line_end":27,"column_start":1,"column_end":95}},{"value":"/ won't have to tweak the defaults. The default choice is selected to avoid the need for a C","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":1164,"byte_end":1258,"line_start":28,"line_end":28,"column_start":1,"column_end":95}},{"value":"/ compiler at build time. `zlib-ng-compat` is useful if you're using zlib for compatibility but","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":1259,"byte_end":1356,"line_start":29,"line_end":29,"column_start":1,"column_end":98}},{"value":"/ want performance via zlib-ng's zlib-compat mode. `zlib` is useful if something else in your","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":1357,"byte_end":1452,"line_start":30,"line_end":30,"column_start":1,"column_end":96}},{"value":"/ dependencies links the original zlib so you cannot use zlib-ng-compat. The compression ratios","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":1453,"byte_end":1550,"line_start":31,"line_end":31,"column_start":1,"column_end":98}},{"value":"/ and performance of each of these feature should be roughly comparable, but you'll likely want","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":1551,"byte_end":1648,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/ to run your own tests if you're curious about the performance.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":1649,"byte_end":1715,"line_start":33,"line_end":33,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":1716,"byte_end":1719,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":1720,"byte_end":1738,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":1739,"byte_end":1742,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This crate consists mainly of three modules, [`read`], [`write`], and","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":1743,"byte_end":1816,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ [`bufread`]. Each module contains a number of types used to encode and","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":1817,"byte_end":1891,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/ decode various streams of data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":1892,"byte_end":1927,"line_start":39,"line_end":39,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":1928,"byte_end":1931,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ All types in the [`write`] module work on instances of [`Write`][write],","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":1932,"byte_end":2008,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ whereas all types in the [`read`] module work on instances of","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2009,"byte_end":2074,"line_start":42,"line_end":42,"column_start":1,"column_end":66}},{"value":"/ [`Read`][read] and [`bufread`] works with [`BufRead`][bufread]. If you","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2075,"byte_end":2149,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ are decoding directly from a `&[u8]`, use the [`bufread`] types.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2150,"byte_end":2218,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2219,"byte_end":2222,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2223,"byte_end":2230,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ use flate2::write::GzEncoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2231,"byte_end":2264,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2265,"byte_end":2293,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2294,"byte_end":2310,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2311,"byte_end":2339,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2340,"byte_end":2343,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # fn main() { let _ = run(); }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2344,"byte_end":2378,"line_start":52,"line_end":52,"column_start":1,"column_end":35}},{"value":"/ # fn run() -> io::Result<()> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2379,"byte_end":2413,"line_start":53,"line_end":53,"column_start":1,"column_end":35}},{"value":"/ let mut encoder = GzEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2414,"byte_end":2487,"line_start":54,"line_end":54,"column_start":1,"column_end":74}},{"value":"/ encoder.write_all(b\"Example\")?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2488,"byte_end":2523,"line_start":55,"line_end":55,"column_start":1,"column_end":36}},{"value":"/ # Ok(())","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2524,"byte_end":2536,"line_start":56,"line_end":56,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2537,"byte_end":2544,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2545,"byte_end":2552,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2553,"byte_end":2556,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2557,"byte_end":2560,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Other various types are provided at the top-level of the crate for","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2561,"byte_end":2631,"line_start":61,"line_end":61,"column_start":1,"column_end":71}},{"value":"/ management and dealing with encoders/decoders. Also note that types which","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2632,"byte_end":2709,"line_start":62,"line_end":62,"column_start":1,"column_end":78}},{"value":"/ operate over a specific trait often implement the mirroring trait as well.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2710,"byte_end":2788,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ For example a `flate2::read::DeflateDecoder<T>` *also* implements the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2789,"byte_end":2862,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ `Write` trait if `T: Write`. That is, the \"dual trait\" is forwarded directly","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2863,"byte_end":2943,"line_start":65,"line_end":65,"column_start":1,"column_end":81}},{"value":"/ to the underlying object if available.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2944,"byte_end":2986,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2987,"byte_end":2990,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`read`]: read/index.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":2991,"byte_end":3020,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/ [`bufread`]: bufread/index.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3021,"byte_end":3056,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/ [`write`]: write/index.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3057,"byte_end":3088,"line_start":70,"line_end":70,"column_start":1,"column_end":32}},{"value":"/ [read]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3089,"byte_end":3149,"line_start":71,"line_end":71,"column_start":1,"column_end":61}},{"value":"/ [write]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3150,"byte_end":3212,"line_start":72,"line_end":72,"column_start":1,"column_end":63}},{"value":"/ [bufread]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3213,"byte_end":3279,"line_start":73,"line_end":73,"column_start":1,"column_end":67}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3334,"byte_end":3356,"line_start":75,"line_end":75,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3357,"byte_end":3396,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"allow(trivial_numeric_casts)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3397,"byte_end":3429,"line_start":77,"line_end":77,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":10466,"byte_end":10469,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Crc","qualname":"::crc::Crc","value":"Crc {  }","parent":null,"children":[{"krate":0,"index":1241},{"krate":0,"index":1242}],"decl_id":null,"docs":" The CRC calculated by a [`CrcReader`].","sig":null,"attributes":[{"value":"/ The CRC calculated by a [`CrcReader`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":10350,"byte_end":10392,"line_start":8,"line_end":8,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":10393,"byte_end":10396,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`CrcReader`]: struct.CrcReader.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":10397,"byte_end":10437,"line_start":10,"line_end":10,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1245},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":10661,"byte_end":10670,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"CrcReader","qualname":"::crc::CrcReader","value":"CrcReader {  }","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248}],"decl_id":null,"docs":" A wrapper around a [`Read`] that calculates the CRC.","sig":null,"attributes":[{"value":"/ A wrapper around a [`Read`] that calculates the CRC.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":10509,"byte_end":10565,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":10566,"byte_end":10569,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":10570,"byte_end":10632,"line_start":19,"line_end":19,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":10834,"byte_end":10837,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<Crc>::new","value":"pub fn new() -> Crc","parent":null,"children":[],"decl_id":null,"docs":" Create a new CRC.\n","sig":null,"attributes":[{"value":"/ Create a new CRC.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":10801,"byte_end":10822,"line_start":33,"line_end":33,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":10990,"byte_end":10993,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"sum","qualname":"<Crc>::sum","value":"pub fn sum(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the current crc32 checksum.\n","sig":null,"attributes":[{"value":"/ Returns the current crc32 checksum.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":10939,"byte_end":10978,"line_start":41,"line_end":41,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":11217,"byte_end":11223,"line_start":48,"line_end":48,"column_start":12,"column_end":18},"name":"amount","qualname":"<Crc>::amount","value":"pub fn amount(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of bytes that have been used to calculate the CRC.\n This value is only accurate if the amount is lower than 2<sup>32</sup>.\n","sig":null,"attributes":[{"value":"/ The number of bytes that have been used to calculate the CRC.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":11060,"byte_end":11125,"line_start":46,"line_end":46,"column_start":5,"column_end":70}},{"value":"/ This value is only accurate if the amount is lower than 2<sup>32</sup>.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":11130,"byte_end":11205,"line_start":47,"line_end":47,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":11324,"byte_end":11330,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"update","qualname":"<Crc>::update","value":"pub fn update(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Update the CRC with the bytes in `data`.\n","sig":null,"attributes":[{"value":"/ Update the CRC with the bytes in `data`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":11268,"byte_end":11312,"line_start":52,"line_end":52,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":11493,"byte_end":11498,"line_start":59,"line_end":59,"column_start":12,"column_end":17},"name":"reset","qualname":"<Crc>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the CRC.\n","sig":null,"attributes":[{"value":"/ Reset the CRC.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":11463,"byte_end":11481,"line_start":58,"line_end":58,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":11653,"byte_end":11660,"line_start":65,"line_end":65,"column_start":12,"column_end":19},"name":"combine","qualname":"<Crc>::combine","value":"pub fn combine(&mut Self, &Crc)","parent":null,"children":[],"decl_id":null,"docs":" Combine the CRC with the CRC for the subsequent block of bytes.\n","sig":null,"attributes":[{"value":"/ Combine the CRC with the CRC for the subsequent block of bytes.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":11574,"byte_end":11641,"line_start":64,"line_end":64,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":11870,"byte_end":11873,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"new","qualname":"<CrcReader<R>>::new","value":"pub fn new(R) -> CrcReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new CrcReader.\n","sig":null,"attributes":[{"value":"/ Create a new CrcReader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":11831,"byte_end":11858,"line_start":72,"line_end":72,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":12062,"byte_end":12065,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"crc","qualname":"<CrcReader<R>>::crc","value":"pub fn crc(&Self) -> &Crc","parent":null,"children":[],"decl_id":null,"docs":" Get the Crc for this CrcReader.\n","sig":null,"attributes":[{"value":"/ Get the Crc for this CrcReader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":12015,"byte_end":12050,"line_start":82,"line_end":82,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":12177,"byte_end":12187,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<CrcReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Get the reader that is wrapped by this CrcReader.\n","sig":null,"attributes":[{"value":"/ Get the reader that is wrapped by this CrcReader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":12112,"byte_end":12165,"line_start":87,"line_end":87,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":12309,"byte_end":12316,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<CrcReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Get the reader that is wrapped by this CrcReader by reference.\n","sig":null,"attributes":[{"value":"/ Get the reader that is wrapped by this CrcReader by reference.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":12231,"byte_end":12297,"line_start":92,"line_end":92,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":12451,"byte_end":12458,"line_start":98,"line_end":98,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<CrcReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the reader that is wrapped by this CrcReader.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the reader that is wrapped by this CrcReader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":12363,"byte_end":12439,"line_start":97,"line_end":97,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":12565,"byte_end":12570,"line_start":103,"line_end":103,"column_start":12,"column_end":17},"name":"reset","qualname":"<CrcReader<R>>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the Crc in this CrcReader.\n","sig":null,"attributes":[{"value":"/ Reset the Crc in this CrcReader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":12517,"byte_end":12553,"line_start":102,"line_end":102,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1252},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":13296,"byte_end":13305,"line_start":132,"line_end":132,"column_start":12,"column_end":21},"name":"CrcWriter","qualname":"::crc::CrcWriter","value":"CrcWriter {  }","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":1255}],"decl_id":null,"docs":" A wrapper around a [`Write`] that calculates the CRC.","sig":null,"attributes":[{"value":"/ A wrapper around a [`Write`] that calculates the CRC.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":13141,"byte_end":13198,"line_start":128,"line_end":128,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":13199,"byte_end":13202,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":13203,"byte_end":13267,"line_start":130,"line_end":130,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":13416,"byte_end":13419,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"crc","qualname":"<CrcWriter<W>>::crc","value":"pub fn crc(&Self) -> &Crc","parent":null,"children":[],"decl_id":null,"docs":" Get the Crc for this CrcWriter.\n","sig":null,"attributes":[{"value":"/ Get the Crc for this CrcWriter.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":13369,"byte_end":13404,"line_start":138,"line_end":138,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":13531,"byte_end":13541,"line_start":144,"line_end":144,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<CrcWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Get the writer that is wrapped by this CrcWriter.\n","sig":null,"attributes":[{"value":"/ Get the writer that is wrapped by this CrcWriter.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":13466,"byte_end":13519,"line_start":143,"line_end":143,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":13663,"byte_end":13670,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<CrcWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Get the writer that is wrapped by this CrcWriter by reference.\n","sig":null,"attributes":[{"value":"/ Get the writer that is wrapped by this CrcWriter by reference.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":13585,"byte_end":13651,"line_start":148,"line_end":148,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":13805,"byte_end":13812,"line_start":154,"line_end":154,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<CrcWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the writer that is wrapped by this CrcWriter.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the writer that is wrapped by this CrcWriter.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":13717,"byte_end":13793,"line_start":153,"line_end":153,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":13919,"byte_end":13924,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"reset","qualname":"<CrcWriter<W>>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the Crc in this CrcWriter.\n","sig":null,"attributes":[{"value":"/ Reset the Crc in this CrcWriter.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":13871,"byte_end":13907,"line_start":158,"line_end":158,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":14046,"byte_end":14049,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"new","qualname":"<CrcWriter<W>>::new","value":"pub fn new(W) -> CrcWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new CrcWriter.\n","sig":null,"attributes":[{"value":"/ Create a new CrcWriter.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":14007,"byte_end":14034,"line_start":165,"line_end":165,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1259},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21719,"byte_end":21733,"line_start":40,"line_end":40,"column_start":12,"column_end":26},"name":"DeflateEncoder","qualname":"::deflate::bufread::DeflateEncoder","value":"DeflateEncoder {  }","parent":null,"children":[{"krate":0,"index":1261},{"krate":0,"index":1262}],"decl_id":null,"docs":" A DEFLATE encoder, or compressor.","sig":null,"attributes":[{"value":"/ A DEFLATE encoder, or compressor.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":20751,"byte_end":20788,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":20789,"byte_end":20792,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This structure consumes a [`BufRead`] interface, reading uncompressed data","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":20793,"byte_end":20871,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ from the underlying reader, and emitting compressed data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":20872,"byte_end":20933,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":20934,"byte_end":20937,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":20938,"byte_end":21006,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21007,"byte_end":21010,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21011,"byte_end":21025,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21026,"byte_end":21029,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21030,"byte_end":21037,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21038,"byte_end":21066,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21067,"byte_end":21083,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21084,"byte_end":21112,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use flate2::bufread::DeflateEncoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21113,"byte_end":21153,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ use std::fs::File;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21154,"byte_end":21176,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/ use std::io::BufReader;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21177,"byte_end":21204,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21205,"byte_end":21208,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21209,"byte_end":21226,"line_start":25,"line_end":25,"column_start":1,"column_end":18}},{"value":"/ #    println!(\"{:?}\", open_hello_world().unwrap());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21227,"byte_end":21282,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21283,"byte_end":21290,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21291,"byte_end":21296,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ // Opens sample file, compresses the contents and returns a Vector","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21297,"byte_end":21367,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ fn open_hello_world() -> io::Result<Vec<u8>> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21368,"byte_end":21418,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/    let f = File::open(\"examples/hello_world.txt\")?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21419,"byte_end":21474,"line_start":31,"line_end":31,"column_start":1,"column_end":56}},{"value":"/    let b = BufReader::new(f);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21475,"byte_end":21508,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/    let mut deflater = DeflateEncoder::new(b, Compression::fast());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21509,"byte_end":21579,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/    let mut buffer = Vec::new();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21580,"byte_end":21615,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/    deflater.read_to_end(&mut buffer)?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21616,"byte_end":21658,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/    Ok(buffer)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21659,"byte_end":21676,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21677,"byte_end":21682,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21683,"byte_end":21690,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21948,"byte_end":21951,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateEncoder<R>>::new","value":"pub fn new(R, crate::Compression) -> DeflateEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder which will read uncompressed data from the given","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21815,"byte_end":21889,"line_start":46,"line_end":46,"column_start":5,"column_end":79}},{"value":"/ stream and emit the compressed stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21894,"byte_end":21936,"line_start":47,"line_end":47,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":22617,"byte_end":22622,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateEncoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the input","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":22238,"byte_end":22307,"line_start":61,"line_end":61,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":22312,"byte_end":22335,"line_start":62,"line_end":62,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":22340,"byte_end":22343,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This function will reset the internal state of this encoder and replace","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":22348,"byte_end":22423,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ the input stream with the one provided, returning the previous input","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":22428,"byte_end":22500,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ stream. Future data read from this encoder will be the compressed","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":22505,"byte_end":22574,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ version of `r`'s data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":22579,"byte_end":22605,"line_start":67,"line_end":67,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":22792,"byte_end":22799,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":22731,"byte_end":22780,"line_start":73,"line_end":73,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":23044,"byte_end":23051,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":22844,"byte_end":22901,"line_start":78,"line_end":78,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":22906,"byte_end":22909,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":22914,"byte_end":22986,"line_start":80,"line_end":80,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":22991,"byte_end":23032,"line_start":81,"line_end":81,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":23179,"byte_end":23189,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeflateEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this encoder, returning the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":23108,"byte_end":23167,"line_start":86,"line_end":86,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":23460,"byte_end":23468,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateEncoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been read into this compressor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been read into this compressor.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":23231,"byte_end":23304,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":23309,"byte_end":23312,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes read from the underlying object may be accounted","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":23317,"byte_end":23393,"line_start":93,"line_end":93,"column_start":5,"column_end":81}},{"value":"/ for, there may still be some active buffering.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":23398,"byte_end":23448,"line_start":94,"line_end":94,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":23702,"byte_end":23711,"line_start":103,"line_end":103,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateEncoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":23525,"byte_end":23590,"line_start":99,"line_end":99,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":23595,"byte_end":23598,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been read yet, some may still be","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":23603,"byte_end":23672,"line_start":101,"line_end":101,"column_start":5,"column_end":74}},{"value":"/ buffered.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":23677,"byte_end":23690,"line_start":102,"line_end":102,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1266},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":25246,"byte_end":25260,"line_start":156,"line_end":156,"column_start":12,"column_end":26},"name":"DeflateDecoder","qualname":"::deflate::bufread::DeflateDecoder","value":"DeflateDecoder {  }","parent":null,"children":[{"krate":0,"index":1268},{"krate":0,"index":1269}],"decl_id":null,"docs":" A DEFLATE decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A DEFLATE decoder, or decompressor.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24177,"byte_end":24216,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24217,"byte_end":24220,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ This structure consumes a [`BufRead`] interface, reading compressed data","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24221,"byte_end":24297,"line_start":126,"line_end":126,"column_start":1,"column_end":77}},{"value":"/ from the underlying reader, and emitting uncompressed data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24298,"byte_end":24361,"line_start":127,"line_end":127,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24362,"byte_end":24365,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24366,"byte_end":24434,"line_start":129,"line_end":129,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24435,"byte_end":24438,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24439,"byte_end":24453,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24454,"byte_end":24457,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24458,"byte_end":24465,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24466,"byte_end":24494,"line_start":134,"line_end":134,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24495,"byte_end":24511,"line_start":135,"line_end":135,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24512,"byte_end":24542,"line_start":136,"line_end":136,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::DeflateEncoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24543,"byte_end":24583,"line_start":137,"line_end":137,"column_start":1,"column_end":41}},{"value":"/ use flate2::bufread::DeflateDecoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24584,"byte_end":24624,"line_start":138,"line_end":138,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24625,"byte_end":24628,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24629,"byte_end":24646,"line_start":140,"line_end":140,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = DeflateEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24647,"byte_end":24724,"line_start":141,"line_end":141,"column_start":1,"column_end":78}},{"value":"/ #    e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24725,"byte_end":24771,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24772,"byte_end":24813,"line_start":143,"line_end":143,"column_start":1,"column_end":42}},{"value":"/ #    println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24814,"byte_end":24869,"line_start":144,"line_end":144,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24870,"byte_end":24877,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ // Uncompresses a Deflate Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24878,"byte_end":24961,"line_start":146,"line_end":146,"column_start":1,"column_end":84}},{"value":"/ // Here &[u8] implements Read","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24962,"byte_end":24995,"line_start":147,"line_end":147,"column_start":1,"column_end":34}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":24996,"byte_end":25056,"line_start":148,"line_end":148,"column_start":1,"column_end":61}},{"value":"/    let mut deflater = DeflateDecoder::new(&bytes[..]);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":25057,"byte_end":25115,"line_start":149,"line_end":149,"column_start":1,"column_end":59}},{"value":"/    let mut s = String::new();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":25116,"byte_end":25149,"line_start":150,"line_end":150,"column_start":1,"column_end":34}},{"value":"/    deflater.read_to_string(&mut s)?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":25150,"byte_end":25190,"line_start":151,"line_end":151,"column_start":1,"column_end":41}},{"value":"/    Ok(s)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":25191,"byte_end":25203,"line_start":152,"line_end":152,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":25204,"byte_end":25209,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":25210,"byte_end":25217,"line_start":154,"line_end":154,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":25548,"byte_end":25551,"line_start":168,"line_end":168,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateDecoder<R>>::new","value":"pub fn new(R) -> DeflateDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder which will decompress data read from the given","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":25448,"byte_end":25520,"line_start":166,"line_end":166,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":25525,"byte_end":25536,"line_start":167,"line_end":167,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":26091,"byte_end":26096,"line_start":184,"line_end":184,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateDecoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the input","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":25719,"byte_end":25788,"line_start":177,"line_end":177,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":25793,"byte_end":25816,"line_start":178,"line_end":178,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":25821,"byte_end":25824,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":25829,"byte_end":25899,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"/ input stream with the one provided, returning the previous input","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":25904,"byte_end":25972,"line_start":181,"line_end":181,"column_start":5,"column_end":73}},{"value":"/ stream. Future data read from this decoder will be the decompressed","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":25977,"byte_end":26048,"line_start":182,"line_end":182,"column_start":5,"column_end":76}},{"value":"/ version of `r`'s data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":26053,"byte_end":26079,"line_start":183,"line_end":183,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":26383,"byte_end":26393,"line_start":193,"line_end":193,"column_start":12,"column_end":22},"name":"reset_data","qualname":"<DeflateDecoder<R>>::reset_data","value":"pub fn reset_data(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder's data","sig":null,"attributes":[{"value":"/ Resets the state of this decoder's data","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":26205,"byte_end":26248,"line_start":189,"line_end":189,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":26253,"byte_end":26256,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder. It will continue","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":26261,"byte_end":26333,"line_start":191,"line_end":191,"column_start":5,"column_end":77}},{"value":"/ reading from the same stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":26338,"byte_end":26371,"line_start":192,"line_end":192,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":26513,"byte_end":26520,"line_start":198,"line_end":198,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":26452,"byte_end":26501,"line_start":197,"line_end":197,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":26765,"byte_end":26772,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":26565,"byte_end":26622,"line_start":202,"line_end":202,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":26627,"byte_end":26630,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":26635,"byte_end":26707,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":26712,"byte_end":26753,"line_start":205,"line_end":205,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":26900,"byte_end":26910,"line_start":211,"line_end":211,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeflateDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":26829,"byte_end":26888,"line_start":210,"line_end":210,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":27179,"byte_end":27187,"line_start":219,"line_end":219,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateDecoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":26952,"byte_end":27019,"line_start":215,"line_end":215,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":27024,"byte_end":27027,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than what the decompressor","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":27032,"byte_end":27100,"line_start":217,"line_end":217,"column_start":5,"column_end":73}},{"value":"/ actually read from the underlying stream due to buffering.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":27105,"byte_end":27167,"line_start":218,"line_end":218,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":27323,"byte_end":27332,"line_start":224,"line_end":224,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateDecoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has produced.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":27244,"byte_end":27311,"line_start":223,"line_end":223,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1273},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28820,"byte_end":28834,"line_start":36,"line_end":36,"column_start":12,"column_end":26},"name":"DeflateEncoder","qualname":"::deflate::read::DeflateEncoder","value":"DeflateEncoder {  }","parent":null,"children":[{"krate":0,"index":1275}],"decl_id":null,"docs":" A DEFLATE encoder, or compressor.","sig":null,"attributes":[{"value":"/ A DEFLATE encoder, or compressor.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":27893,"byte_end":27930,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":27931,"byte_end":27934,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Read`] interface and will read uncompressed","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":27935,"byte_end":28012,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ data from an underlying stream and emit a stream of compressed data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28013,"byte_end":28085,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28086,"byte_end":28089,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28090,"byte_end":28152,"line_start":12,"line_end":12,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28153,"byte_end":28156,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28157,"byte_end":28171,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28172,"byte_end":28175,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28176,"byte_end":28183,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28184,"byte_end":28212,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28213,"byte_end":28229,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28230,"byte_end":28258,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ use flate2::read::DeflateEncoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28259,"byte_end":28296,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28297,"byte_end":28300,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28301,"byte_end":28318,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/ #    println!(\"{:?}\", deflateencoder_read_hello_world().unwrap());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28319,"byte_end":28389,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28390,"byte_end":28397,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28398,"byte_end":28403,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ // Return a vector containing the Deflate compressed version of hello world","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28404,"byte_end":28483,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ fn deflateencoder_read_hello_world() -> io::Result<Vec<u8>> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28484,"byte_end":28549,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/    let mut ret_vec = [0;100];","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28550,"byte_end":28583,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/    let c = b\"hello world\";","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28584,"byte_end":28614,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/    let mut deflater = DeflateEncoder::new(&c[..], Compression::fast());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28615,"byte_end":28690,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/    let count = deflater.read(&mut ret_vec)?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28691,"byte_end":28739,"line_start":31,"line_end":31,"column_start":1,"column_end":49}},{"value":"/    Ok(ret_vec[0..count].to_vec())","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28740,"byte_end":28777,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28778,"byte_end":28783,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28784,"byte_end":28791,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":29064,"byte_end":29067,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateEncoder<R>>::new","value":"pub fn new(R, crate::Compression) -> DeflateEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder which will read uncompressed data from the given","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28931,"byte_end":29005,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ stream and emit the compressed stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":29010,"byte_end":29052,"line_start":42,"line_end":42,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":29804,"byte_end":29809,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateEncoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the input","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":29275,"byte_end":29344,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":29349,"byte_end":29372,"line_start":52,"line_end":52,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":29377,"byte_end":29380,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This function will reset the internal state of this encoder and replace","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":29385,"byte_end":29460,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ the input stream with the one provided, returning the previous input","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":29465,"byte_end":29537,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ stream. Future data read from this encoder will be the compressed","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":29542,"byte_end":29611,"line_start":56,"line_end":56,"column_start":5,"column_end":74}},{"value":"/ version of `r`'s data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":29616,"byte_end":29642,"line_start":57,"line_end":57,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":29647,"byte_end":29650,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that there may be currently buffered data when this function is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":29655,"byte_end":29727,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ called, and in that case the buffered data is discarded.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":29732,"byte_end":29792,"line_start":60,"line_end":60,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":30005,"byte_end":30012,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":29944,"byte_end":29993,"line_start":66,"line_end":66,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":30278,"byte_end":30285,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":30078,"byte_end":30135,"line_start":71,"line_end":71,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":30140,"byte_end":30143,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":30148,"byte_end":30220,"line_start":73,"line_end":73,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":30225,"byte_end":30266,"line_start":74,"line_end":74,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":30626,"byte_end":30636,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeflateEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this encoder, returning the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":30359,"byte_end":30418,"line_start":79,"line_end":79,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":30423,"byte_end":30426,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Note that there may be buffered bytes which are not re-acquired as part","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":30431,"byte_end":30506,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/ of this transition. It's recommended to only call this function after","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":30511,"byte_end":30584,"line_start":82,"line_end":82,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":30589,"byte_end":30614,"line_start":83,"line_end":83,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":30935,"byte_end":30943,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateEncoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been read into this compressor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been read into this compressor.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":30706,"byte_end":30779,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":30784,"byte_end":30787,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes read from the underlying object may be accounted","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":30792,"byte_end":30868,"line_start":90,"line_end":90,"column_start":5,"column_end":81}},{"value":"/ for, there may still be some active buffering.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":30873,"byte_end":30923,"line_start":91,"line_end":91,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":31178,"byte_end":31187,"line_start":100,"line_end":100,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateEncoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":31001,"byte_end":31066,"line_start":96,"line_end":96,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":31071,"byte_end":31074,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been read yet, some may still be","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":31079,"byte_end":31148,"line_start":98,"line_end":98,"column_start":5,"column_end":74}},{"value":"/ buffered.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":31153,"byte_end":31166,"line_start":99,"line_end":99,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1279},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":32693,"byte_end":32707,"line_start":153,"line_end":153,"column_start":12,"column_end":26},"name":"DeflateDecoder","qualname":"::deflate::read::DeflateDecoder","value":"DeflateDecoder {  }","parent":null,"children":[{"krate":0,"index":1281}],"decl_id":null,"docs":" A DEFLATE decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A DEFLATE decoder, or decompressor.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":31623,"byte_end":31662,"line_start":121,"line_end":121,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":31663,"byte_end":31666,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Read`] interface and takes a stream of","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":31667,"byte_end":31739,"line_start":123,"line_end":123,"column_start":1,"column_end":73}},{"value":"/ compressed data as input, providing the decompressed data when read from.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":31740,"byte_end":31817,"line_start":124,"line_end":124,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":31818,"byte_end":31821,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":31822,"byte_end":31884,"line_start":126,"line_end":126,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":31885,"byte_end":31888,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":31889,"byte_end":31903,"line_start":128,"line_end":128,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":31904,"byte_end":31907,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":31908,"byte_end":31915,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":31916,"byte_end":31944,"line_start":131,"line_end":131,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":31945,"byte_end":31961,"line_start":132,"line_end":132,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":31962,"byte_end":31992,"line_start":133,"line_end":133,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::DeflateEncoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":31993,"byte_end":32033,"line_start":134,"line_end":134,"column_start":1,"column_end":41}},{"value":"/ use flate2::read::DeflateDecoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":32034,"byte_end":32071,"line_start":135,"line_end":135,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":32072,"byte_end":32075,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":32076,"byte_end":32093,"line_start":137,"line_end":137,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = DeflateEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":32094,"byte_end":32171,"line_start":138,"line_end":138,"column_start":1,"column_end":78}},{"value":"/ #    e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":32172,"byte_end":32218,"line_start":139,"line_end":139,"column_start":1,"column_end":47}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":32219,"byte_end":32260,"line_start":140,"line_end":140,"column_start":1,"column_end":42}},{"value":"/ #    println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":32261,"byte_end":32316,"line_start":141,"line_end":141,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":32317,"byte_end":32324,"line_start":142,"line_end":142,"column_start":1,"column_end":8}},{"value":"/ // Uncompresses a Deflate Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":32325,"byte_end":32408,"line_start":143,"line_end":143,"column_start":1,"column_end":84}},{"value":"/ // Here &[u8] implements Read","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":32409,"byte_end":32442,"line_start":144,"line_end":144,"column_start":1,"column_end":34}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":32443,"byte_end":32503,"line_start":145,"line_end":145,"column_start":1,"column_end":61}},{"value":"/    let mut deflater = DeflateDecoder::new(&bytes[..]);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":32504,"byte_end":32562,"line_start":146,"line_end":146,"column_start":1,"column_end":59}},{"value":"/    let mut s = String::new();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":32563,"byte_end":32596,"line_start":147,"line_end":147,"column_start":1,"column_end":34}},{"value":"/    deflater.read_to_string(&mut s)?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":32597,"byte_end":32637,"line_start":148,"line_end":148,"column_start":1,"column_end":41}},{"value":"/    Ok(s)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":32638,"byte_end":32650,"line_start":149,"line_end":149,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":32651,"byte_end":32656,"line_start":150,"line_end":150,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":32657,"byte_end":32664,"line_start":151,"line_end":151,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":32904,"byte_end":32907,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateDecoder<R>>::new","value":"pub fn new(R) -> DeflateDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder which will decompress data read from the given","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":32804,"byte_end":32876,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":32881,"byte_end":32892,"line_start":159,"line_end":159,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":33225,"byte_end":33237,"line_start":168,"line_end":168,"column_start":12,"column_end":24},"name":"new_with_buf","qualname":"<DeflateDecoder<R>>::new_with_buf","value":"pub fn new_with_buf(R, Vec<u8>) -> DeflateDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Same as `new`, but the intermediate buffer for data is specified.","sig":null,"attributes":[{"value":"/ Same as `new`, but the intermediate buffer for data is specified.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":33008,"byte_end":33077,"line_start":164,"line_end":164,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":33082,"byte_end":33085,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Note that the capacity of the intermediate buffer is never increased,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":33090,"byte_end":33163,"line_start":166,"line_end":166,"column_start":5,"column_end":78}},{"value":"/ and it is recommended for it to be large.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":33168,"byte_end":33213,"line_start":167,"line_end":167,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":33957,"byte_end":33962,"line_start":186,"line_end":186,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateDecoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the input","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":33435,"byte_end":33504,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":33509,"byte_end":33532,"line_start":177,"line_end":177,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":33537,"byte_end":33540,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":33545,"byte_end":33615,"line_start":179,"line_end":179,"column_start":5,"column_end":75}},{"value":"/ input stream with the one provided, returning the previous input","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":33620,"byte_end":33688,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/ stream. Future data read from this decoder will be the decompressed","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":33693,"byte_end":33764,"line_start":181,"line_end":181,"column_start":5,"column_end":76}},{"value":"/ version of `r`'s data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":33769,"byte_end":33795,"line_start":182,"line_end":182,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":33800,"byte_end":33803,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Note that there may be currently buffered data when this function is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":33808,"byte_end":33880,"line_start":184,"line_end":184,"column_start":5,"column_end":77}},{"value":"/ called, and in that case the buffered data is discarded.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":33885,"byte_end":33945,"line_start":185,"line_end":185,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":34158,"byte_end":34165,"line_start":192,"line_end":192,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":34097,"byte_end":34146,"line_start":191,"line_end":191,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":34431,"byte_end":34438,"line_start":200,"line_end":200,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":34231,"byte_end":34288,"line_start":196,"line_end":196,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":34293,"byte_end":34296,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":34301,"byte_end":34373,"line_start":198,"line_end":198,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":34378,"byte_end":34419,"line_start":199,"line_end":199,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":34779,"byte_end":34789,"line_start":209,"line_end":209,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeflateDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":34512,"byte_end":34571,"line_start":204,"line_end":204,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":34576,"byte_end":34579,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Note that there may be buffered bytes which are not re-acquired as part","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":34584,"byte_end":34659,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ of this transition. It's recommended to only call this function after","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":34664,"byte_end":34737,"line_start":207,"line_end":207,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":34742,"byte_end":34767,"line_start":208,"line_end":208,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":35086,"byte_end":35094,"line_start":217,"line_end":217,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateDecoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":34859,"byte_end":34926,"line_start":213,"line_end":213,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":34931,"byte_end":34934,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than what the decompressor","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":34939,"byte_end":35007,"line_start":215,"line_end":215,"column_start":5,"column_end":73}},{"value":"/ actually read from the underlying stream due to buffering.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":35012,"byte_end":35074,"line_start":216,"line_end":216,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":35231,"byte_end":35240,"line_start":222,"line_end":222,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateDecoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has produced.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":35152,"byte_end":35219,"line_start":221,"line_end":221,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1285},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36463,"byte_end":36477,"line_start":30,"line_end":30,"column_start":12,"column_end":26},"name":"DeflateEncoder","qualname":"::deflate::write::DeflateEncoder","value":"DeflateEncoder {  }","parent":null,"children":[{"krate":0,"index":1287}],"decl_id":null,"docs":" A DEFLATE encoder, or compressor.","sig":null,"attributes":[{"value":"/ A DEFLATE encoder, or compressor.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":35769,"byte_end":35806,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":35807,"byte_end":35810,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Write`] interface and takes a stream of","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":35811,"byte_end":35884,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ uncompressed data, writing the compressed data to the wrapped writer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":35885,"byte_end":35958,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":35959,"byte_end":35962,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":35963,"byte_end":36027,"line_start":12,"line_end":12,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36028,"byte_end":36031,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36032,"byte_end":36046,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36047,"byte_end":36050,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36051,"byte_end":36058,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36059,"byte_end":36087,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36088,"byte_end":36116,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ use flate2::write::DeflateEncoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36117,"byte_end":36155,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36156,"byte_end":36159,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ // Vec<u8> implements Write to print the compressed bytes of sample string","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36160,"byte_end":36238,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ # fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36239,"byte_end":36256,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36257,"byte_end":36260,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let mut e = DeflateEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36261,"byte_end":36333,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36334,"byte_end":36375,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ println!(\"{:?}\", e.finish().unwrap());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36376,"byte_end":36418,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36419,"byte_end":36426,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36427,"byte_end":36434,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36807,"byte_end":36810,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateEncoder<W>>::new","value":"pub fn new(W, crate::Compression) -> DeflateEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will write compressed data to the stream\n given at the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will write compressed data to the stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36569,"byte_end":36641,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ given at the given compression level.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36646,"byte_end":36687,"line_start":36,"line_end":36,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36692,"byte_end":36695,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ When this encoder is dropped or unwrapped the final pieces of data will","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36700,"byte_end":36775,"line_start":38,"line_end":38,"column_start":5,"column_end":80}},{"value":"/ be flushed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36780,"byte_end":36795,"line_start":39,"line_end":39,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":37044,"byte_end":37051,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateEncoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36982,"byte_end":37032,"line_start":46,"line_end":46,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":37328,"byte_end":37335,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateEncoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":37107,"byte_end":37165,"line_start":51,"line_end":51,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":37170,"byte_end":37173,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":37178,"byte_end":37254,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":37259,"byte_end":37316,"line_start":54,"line_end":54,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":38213,"byte_end":38218,"line_start":75,"line_end":75,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateEncoder<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the output\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the output","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":37399,"byte_end":37469,"line_start":59,"line_end":59,"column_start":5,"column_end":75}},{"value":"/ stream for another.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":37474,"byte_end":37497,"line_start":60,"line_end":60,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":37502,"byte_end":37505,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This function will finish encoding the current stream into the current","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":37510,"byte_end":37584,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ output stream before swapping out the two output streams. If the stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":37589,"byte_end":37664,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ cannot be finished an error is returned.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":37669,"byte_end":37713,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":37718,"byte_end":37721,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ After the current stream has been finished, this will reset the internal","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":37726,"byte_end":37802,"line_start":66,"line_end":66,"column_start":5,"column_end":81}},{"value":"/ state of this encoder and replace the output stream with the one","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":37807,"byte_end":37875,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ provided, returning the previous output stream. Future data written to","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":37880,"byte_end":37954,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ this encoder will be the compressed into the stream `w` provided.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":37959,"byte_end":38028,"line_start":69,"line_end":69,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":38033,"byte_end":38036,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":38041,"byte_end":38053,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":38058,"byte_end":38061,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":38066,"byte_end":38137,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":38142,"byte_end":38201,"line_start":74,"line_end":74,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":38978,"byte_end":38988,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<DeflateEncoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":38363,"byte_end":38438,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":38443,"byte_end":38446,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":38451,"byte_end":38524,"line_start":83,"line_end":83,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":38529,"byte_end":38605,"line_start":84,"line_end":84,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":38610,"byte_end":38653,"line_start":85,"line_end":85,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":38658,"byte_end":38661,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":38666,"byte_end":38678,"line_start":87,"line_end":87,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":38683,"byte_end":38686,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":38691,"byte_end":38765,"line_start":89,"line_end":89,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":38770,"byte_end":38793,"line_start":90,"line_end":90,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":38798,"byte_end":38801,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":38806,"byte_end":38818,"line_start":92,"line_end":92,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":38823,"byte_end":38826,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":38831,"byte_end":38902,"line_start":94,"line_end":94,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":38907,"byte_end":38966,"line_start":95,"line_end":95,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":39823,"byte_end":39829,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"finish","qualname":"<DeflateEncoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":39059,"byte_end":39113,"line_start":100,"line_end":100,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":39118,"byte_end":39121,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream, close off the compressed","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":39126,"byte_end":39198,"line_start":102,"line_end":102,"column_start":5,"column_end":77}},{"value":"/ stream and, if successful, return the contained writer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":39203,"byte_end":39262,"line_start":103,"line_end":103,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":39267,"byte_end":39270,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":39275,"byte_end":39351,"line_start":105,"line_end":105,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":39356,"byte_end":39431,"line_start":106,"line_end":106,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":39436,"byte_end":39506,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":39511,"byte_end":39584,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":39589,"byte_end":39638,"line_start":109,"line_end":109,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":39643,"byte_end":39646,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":39651,"byte_end":39663,"line_start":111,"line_end":111,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":39668,"byte_end":39671,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":39676,"byte_end":39747,"line_start":113,"line_end":113,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":39752,"byte_end":39811,"line_start":114,"line_end":114,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":40514,"byte_end":40526,"line_start":132,"line_end":132,"column_start":12,"column_end":24},"name":"flush_finish","qualname":"<DeflateEncoder<W>>::flush_finish","value":"pub fn flush_finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":39936,"byte_end":39990,"line_start":120,"line_end":120,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":39995,"byte_end":39998,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream and then return the contained","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":40003,"byte_end":40079,"line_start":122,"line_end":122,"column_start":5,"column_end":81}},{"value":"/ writer if the flush succeeded.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":40084,"byte_end":40118,"line_start":123,"line_end":123,"column_start":5,"column_end":39}},{"value":"/ The compressed stream will not closed but only flushed. This","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":40123,"byte_end":40187,"line_start":124,"line_end":124,"column_start":5,"column_end":69}},{"value":"/ means that obtained byte array can by extended by another deflated","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":40192,"byte_end":40262,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"/ stream. To close the stream add the two bytes 0x3 and 0x0.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":40267,"byte_end":40329,"line_start":126,"line_end":126,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":40334,"byte_end":40337,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":40342,"byte_end":40354,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":40359,"byte_end":40362,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":40367,"byte_end":40438,"line_start":130,"line_end":130,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":40443,"byte_end":40502,"line_start":131,"line_end":131,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":40853,"byte_end":40861,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateEncoder<W>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been written to this compressor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been written to this compressor.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":40632,"byte_end":40706,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":40711,"byte_end":40714,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes written to this object may be accounted for,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":40719,"byte_end":40791,"line_start":139,"line_end":139,"column_start":5,"column_end":77}},{"value":"/ there may still be some active buffering.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":40796,"byte_end":40841,"line_start":140,"line_end":140,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":41104,"byte_end":41113,"line_start":149,"line_end":149,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateEncoder<W>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":40924,"byte_end":40989,"line_start":145,"line_end":145,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":40994,"byte_end":40997,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been written yet, some may still be","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":41002,"byte_end":41074,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ buffered.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":41079,"byte_end":41092,"line_start":148,"line_end":148,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":42739,"byte_end":42753,"line_start":204,"line_end":204,"column_start":12,"column_end":26},"name":"DeflateDecoder","qualname":"::deflate::write::DeflateDecoder","value":"DeflateDecoder {  }","parent":null,"children":[{"krate":0,"index":1293}],"decl_id":null,"docs":" A DEFLATE decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A DEFLATE decoder, or decompressor.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":41557,"byte_end":41596,"line_start":170,"line_end":170,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":41597,"byte_end":41600,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Write`] and will emit a stream of decompressed","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":41601,"byte_end":41681,"line_start":172,"line_end":172,"column_start":1,"column_end":81}},{"value":"/ data when fed a stream of compressed data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":41682,"byte_end":41728,"line_start":173,"line_end":173,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":41729,"byte_end":41732,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":41733,"byte_end":41796,"line_start":175,"line_end":175,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":41797,"byte_end":41800,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":41801,"byte_end":41815,"line_start":177,"line_end":177,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":41816,"byte_end":41819,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":41820,"byte_end":41827,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":41828,"byte_end":41856,"line_start":180,"line_end":180,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":41857,"byte_end":41873,"line_start":181,"line_end":181,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":41874,"byte_end":41904,"line_start":182,"line_end":182,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::DeflateEncoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":41905,"byte_end":41945,"line_start":183,"line_end":183,"column_start":1,"column_end":41}},{"value":"/ use flate2::write::DeflateDecoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":41946,"byte_end":41984,"line_start":184,"line_end":184,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":41985,"byte_end":41988,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":41989,"byte_end":42006,"line_start":186,"line_end":186,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = DeflateEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":42007,"byte_end":42084,"line_start":187,"line_end":187,"column_start":1,"column_end":78}},{"value":"/ #    e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":42085,"byte_end":42131,"line_start":188,"line_end":188,"column_start":1,"column_end":47}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":42132,"byte_end":42173,"line_start":189,"line_end":189,"column_start":1,"column_end":42}},{"value":"/ #    println!(\"{}\", decode_writer(bytes).unwrap());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":42174,"byte_end":42229,"line_start":190,"line_end":190,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":42230,"byte_end":42237,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ // Uncompresses a Deflate Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":42238,"byte_end":42321,"line_start":192,"line_end":192,"column_start":1,"column_end":84}},{"value":"/ // Here Vec<u8> implements Write","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":42322,"byte_end":42358,"line_start":193,"line_end":193,"column_start":1,"column_end":37}},{"value":"/ fn decode_writer(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":42359,"byte_end":42419,"line_start":194,"line_end":194,"column_start":1,"column_end":61}},{"value":"/    let mut writer = Vec::new();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":42420,"byte_end":42455,"line_start":195,"line_end":195,"column_start":1,"column_end":36}},{"value":"/    let mut deflater = DeflateDecoder::new(writer);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":42456,"byte_end":42510,"line_start":196,"line_end":196,"column_start":1,"column_end":55}},{"value":"/    deflater.write_all(&bytes[..])?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":42511,"byte_end":42550,"line_start":197,"line_end":197,"column_start":1,"column_end":40}},{"value":"/    writer = deflater.finish()?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":42551,"byte_end":42586,"line_start":198,"line_end":198,"column_start":1,"column_end":36}},{"value":"/    let return_string = String::from_utf8(writer).expect(\"String parsing error\");","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":42587,"byte_end":42671,"line_start":199,"line_end":199,"column_start":1,"column_end":85}},{"value":"/    Ok(return_string)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":42672,"byte_end":42696,"line_start":200,"line_end":200,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":42697,"byte_end":42702,"line_start":201,"line_end":201,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":42703,"byte_end":42710,"line_start":202,"line_end":202,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":43042,"byte_end":43045,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateDecoder<W>>::new","value":"pub fn new(W) -> DeflateDecoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will write uncompressed data to the stream.","sig":null,"attributes":[{"value":"/ Creates a new decoder which will write uncompressed data to the stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":42847,"byte_end":42922,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":42927,"byte_end":42930,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ When this encoder is dropped or unwrapped the final pieces of data will","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":42935,"byte_end":43010,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ be flushed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":43015,"byte_end":43030,"line_start":212,"line_end":212,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":43247,"byte_end":43254,"line_start":220,"line_end":220,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateDecoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":43185,"byte_end":43235,"line_start":219,"line_end":219,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":43531,"byte_end":43538,"line_start":228,"line_end":228,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateDecoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":43310,"byte_end":43368,"line_start":224,"line_end":224,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":43373,"byte_end":43376,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":43381,"byte_end":43457,"line_start":226,"line_end":226,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":43462,"byte_end":43519,"line_start":227,"line_end":227,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":44319,"byte_end":44324,"line_start":247,"line_end":247,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateDecoder<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the output\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the output","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":43602,"byte_end":43672,"line_start":232,"line_end":232,"column_start":5,"column_end":75}},{"value":"/ stream for another.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":43677,"byte_end":43700,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":43705,"byte_end":43708,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ This function will finish encoding the current stream into the current","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":43713,"byte_end":43787,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/ output stream before swapping out the two output streams.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":43792,"byte_end":43853,"line_start":236,"line_end":236,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":43858,"byte_end":43861,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ This will then reset the internal state of this decoder and replace the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":43866,"byte_end":43941,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ output stream with the one provided, returning the previous output","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":43946,"byte_end":44016,"line_start":239,"line_end":239,"column_start":5,"column_end":75}},{"value":"/ stream. Future data written to this decoder will be decompressed into","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":44021,"byte_end":44094,"line_start":240,"line_end":240,"column_start":5,"column_end":78}},{"value":"/ the output stream `w`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":44099,"byte_end":44125,"line_start":241,"line_end":241,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":44130,"byte_end":44133,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":44138,"byte_end":44150,"line_start":243,"line_end":243,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":44155,"byte_end":44158,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to finish the stream, and if that I/O","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":44163,"byte_end":44235,"line_start":245,"line_end":245,"column_start":5,"column_end":77}},{"value":"/ returns an error then that will be returned from this function.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":44240,"byte_end":44307,"line_start":246,"line_end":246,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":45065,"byte_end":45075,"line_start":268,"line_end":268,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<DeflateDecoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":44486,"byte_end":44561,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":44566,"byte_end":44569,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":44574,"byte_end":44647,"line_start":255,"line_end":255,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":44652,"byte_end":44728,"line_start":256,"line_end":256,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":44733,"byte_end":44776,"line_start":257,"line_end":257,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":44781,"byte_end":44784,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":44789,"byte_end":44801,"line_start":259,"line_end":259,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":44806,"byte_end":44809,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":44814,"byte_end":44888,"line_start":261,"line_end":261,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":44893,"byte_end":44916,"line_start":262,"line_end":262,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":44921,"byte_end":44924,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":44929,"byte_end":44941,"line_start":264,"line_end":264,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":44946,"byte_end":44949,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to finish the stream, returning any","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":44954,"byte_end":45024,"line_start":266,"line_end":266,"column_start":5,"column_end":75}},{"value":"/ errors which happen.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":45029,"byte_end":45053,"line_start":267,"line_end":267,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":45889,"byte_end":45895,"line_start":287,"line_end":287,"column_start":12,"column_end":18},"name":"finish","qualname":"<DeflateDecoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":45146,"byte_end":45200,"line_start":272,"line_end":272,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":45205,"byte_end":45208,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream and then return the contained","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":45213,"byte_end":45289,"line_start":274,"line_end":274,"column_start":5,"column_end":81}},{"value":"/ writer if the flush succeeded.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":45294,"byte_end":45328,"line_start":275,"line_end":275,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":45333,"byte_end":45336,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":45341,"byte_end":45417,"line_start":277,"line_end":277,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":45422,"byte_end":45497,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":45502,"byte_end":45572,"line_start":279,"line_end":279,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":45577,"byte_end":45650,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":45655,"byte_end":45704,"line_start":281,"line_end":281,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":45709,"byte_end":45712,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":45717,"byte_end":45729,"line_start":283,"line_end":283,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":45734,"byte_end":45737,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":45742,"byte_end":45813,"line_start":285,"line_end":285,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":45818,"byte_end":45877,"line_start":286,"line_end":286,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":46257,"byte_end":46265,"line_start":297,"line_end":297,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateDecoder<W>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed for\n decompression.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed for","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":46002,"byte_end":46072,"line_start":292,"line_end":292,"column_start":5,"column_end":75}},{"value":"/ decompression.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":46077,"byte_end":46095,"line_start":293,"line_end":293,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":46100,"byte_end":46103,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than the number of bytes","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":46108,"byte_end":46174,"line_start":295,"line_end":295,"column_start":5,"column_end":71}},{"value":"/ successfully written to this stream due to internal buffering.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":46179,"byte_end":46245,"line_start":296,"line_end":296,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":46435,"byte_end":46444,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateDecoder<W>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has written to its\n output stream.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has written to its","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":46328,"byte_end":46400,"line_start":301,"line_end":301,"column_start":5,"column_end":77}},{"value":"/ output stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":46405,"byte_end":46423,"line_start":302,"line_end":302,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1325},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":78401,"byte_end":78410,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"GzEncoder","qualname":"::gz::bufread::GzEncoder","value":"GzEncoder {  }","parent":null,"children":[{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330}],"decl_id":null,"docs":" A gzip streaming encoder","sig":null,"attributes":[{"value":"/ A gzip streaming encoder","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":77439,"byte_end":77467,"line_start":127,"line_end":127,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":77468,"byte_end":77471,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`BufRead`] interface that will read uncompressed data","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":77472,"byte_end":77555,"line_start":129,"line_end":129,"column_start":1,"column_end":84}},{"value":"/ from the underlying reader and expose the compressed version as a [`BufRead`]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":77556,"byte_end":77637,"line_start":130,"line_end":130,"column_start":1,"column_end":82}},{"value":"/ interface.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":77638,"byte_end":77652,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":77653,"byte_end":77656,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":77657,"byte_end":77725,"line_start":133,"line_end":133,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":77726,"byte_end":77729,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":77730,"byte_end":77744,"line_start":135,"line_end":135,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":77745,"byte_end":77748,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":77749,"byte_end":77756,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":77757,"byte_end":77785,"line_start":138,"line_end":138,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":77786,"byte_end":77802,"line_start":139,"line_end":139,"column_start":1,"column_end":17}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":77803,"byte_end":77831,"line_start":140,"line_end":140,"column_start":1,"column_end":29}},{"value":"/ use flate2::bufread::GzEncoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":77832,"byte_end":77867,"line_start":141,"line_end":141,"column_start":1,"column_end":36}},{"value":"/ use std::fs::File;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":77868,"byte_end":77890,"line_start":142,"line_end":142,"column_start":1,"column_end":23}},{"value":"/ use std::io::BufReader;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":77891,"byte_end":77918,"line_start":143,"line_end":143,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":77919,"byte_end":77922,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ // Opens sample file, compresses the contents and returns a Vector or error","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":77923,"byte_end":78002,"line_start":145,"line_end":145,"column_start":1,"column_end":80}},{"value":"/ // File wrapped in a BufReader implements BufRead","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":78003,"byte_end":78056,"line_start":146,"line_end":146,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":78057,"byte_end":78060,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ fn open_hello_world() -> io::Result<Vec<u8>> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":78061,"byte_end":78111,"line_start":148,"line_end":148,"column_start":1,"column_end":51}},{"value":"/     let f = File::open(\"examples/hello_world.txt\")?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":78112,"byte_end":78168,"line_start":149,"line_end":149,"column_start":1,"column_end":57}},{"value":"/     let b = BufReader::new(f);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":78169,"byte_end":78203,"line_start":150,"line_end":150,"column_start":1,"column_end":35}},{"value":"/     let mut gz = GzEncoder::new(b, Compression::fast());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":78204,"byte_end":78264,"line_start":151,"line_end":151,"column_start":1,"column_end":61}},{"value":"/     let mut buffer = Vec::new();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":78265,"byte_end":78301,"line_start":152,"line_end":152,"column_start":1,"column_end":37}},{"value":"/     gz.read_to_end(&mut buffer)?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":78302,"byte_end":78339,"line_start":153,"line_end":153,"column_start":1,"column_end":38}},{"value":"/     Ok(buffer)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":78340,"byte_end":78358,"line_start":154,"line_end":154,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":78359,"byte_end":78364,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":78365,"byte_end":78372,"line_start":156,"line_end":156,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":79170,"byte_end":79173,"line_start":183,"line_end":183,"column_start":12,"column_end":15},"name":"new","qualname":"<GzEncoder<R>>::new","value":"pub fn new(R, Compression) -> GzEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will use the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will use the given compression level.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":78829,"byte_end":78898,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":78903,"byte_end":78906,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ The encoder is not configured specially for the emitted header. For","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":78911,"byte_end":78982,"line_start":178,"line_end":178,"column_start":5,"column_end":76}},{"value":"/ header configuration, see the `GzBuilder` type.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":78987,"byte_end":79038,"line_start":179,"line_end":179,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":79043,"byte_end":79046,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ The data read from the stream `r` will be compressed and available","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":79051,"byte_end":79121,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/ through the returned reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":79126,"byte_end":79158,"line_start":182,"line_end":182,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":79928,"byte_end":79935,"line_start":208,"line_end":208,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":79866,"byte_end":79916,"line_start":207,"line_end":207,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":80202,"byte_end":80209,"line_start":216,"line_end":216,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":80001,"byte_end":80059,"line_start":212,"line_end":212,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":80064,"byte_end":80067,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the reader may result in surprising results if","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":80072,"byte_end":80144,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":80149,"byte_end":80190,"line_start":215,"line_end":215,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":80352,"byte_end":80362,"line_start":221,"line_end":221,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<GzEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying stream, consuming this encoder\n","sig":null,"attributes":[{"value":"/ Returns the underlying stream, consuming this encoder","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":80283,"byte_end":80340,"line_start":220,"line_end":220,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1334},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":82726,"byte_end":82735,"line_start":307,"line_end":307,"column_start":12,"column_end":21},"name":"GzDecoder","qualname":"::gz::bufread::GzDecoder","value":"GzDecoder {  }","parent":null,"children":[{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339}],"decl_id":null,"docs":" A gzip streaming decoder","sig":null,"attributes":[{"value":"/ A gzip streaming decoder","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":81696,"byte_end":81724,"line_start":273,"line_end":273,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":81725,"byte_end":81728,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ This structure consumes a [`BufRead`] interface, reading compressed data","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":81729,"byte_end":81805,"line_start":275,"line_end":275,"column_start":1,"column_end":77}},{"value":"/ from the underlying reader, and emitting uncompressed data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":81806,"byte_end":81869,"line_start":276,"line_end":276,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":81870,"byte_end":81873,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":81874,"byte_end":81942,"line_start":278,"line_end":278,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":81943,"byte_end":81946,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":81947,"byte_end":81961,"line_start":280,"line_end":280,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":81962,"byte_end":81965,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":81966,"byte_end":81973,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":81974,"byte_end":82002,"line_start":283,"line_end":283,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":82003,"byte_end":82019,"line_start":284,"line_end":284,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":82020,"byte_end":82050,"line_start":285,"line_end":285,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::GzEncoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":82051,"byte_end":82086,"line_start":286,"line_end":286,"column_start":1,"column_end":36}},{"value":"/ use flate2::bufread::GzDecoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":82087,"byte_end":82122,"line_start":287,"line_end":287,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":82123,"byte_end":82126,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":82127,"byte_end":82144,"line_start":289,"line_end":289,"column_start":1,"column_end":18}},{"value":"/ #   let mut e = GzEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":82145,"byte_end":82216,"line_start":290,"line_end":290,"column_start":1,"column_end":72}},{"value":"/ #   e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":82217,"byte_end":82262,"line_start":291,"line_end":291,"column_start":1,"column_end":46}},{"value":"/ #   let bytes = e.finish().unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":82263,"byte_end":82303,"line_start":292,"line_end":292,"column_start":1,"column_end":41}},{"value":"/ #   println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":82304,"byte_end":82358,"line_start":293,"line_end":293,"column_start":1,"column_end":55}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":82359,"byte_end":82366,"line_start":294,"line_end":294,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":82367,"byte_end":82372,"line_start":295,"line_end":295,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Gz Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":82373,"byte_end":82451,"line_start":296,"line_end":296,"column_start":1,"column_end":79}},{"value":"/ // Here &[u8] implements BufRead","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":82452,"byte_end":82488,"line_start":297,"line_end":297,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":82489,"byte_end":82492,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":82493,"byte_end":82553,"line_start":299,"line_end":299,"column_start":1,"column_end":61}},{"value":"/    let mut gz = GzDecoder::new(&bytes[..]);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":82554,"byte_end":82601,"line_start":300,"line_end":300,"column_start":1,"column_end":48}},{"value":"/    let mut s = String::new();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":82602,"byte_end":82635,"line_start":301,"line_end":301,"column_start":1,"column_end":34}},{"value":"/    gz.read_to_string(&mut s)?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":82636,"byte_end":82670,"line_start":302,"line_end":302,"column_start":1,"column_end":35}},{"value":"/    Ok(s)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":82671,"byte_end":82683,"line_start":303,"line_end":303,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":82684,"byte_end":82689,"line_start":304,"line_end":304,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":82690,"byte_end":82697,"line_start":305,"line_end":305,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":86369,"byte_end":86372,"line_start":440,"line_end":440,"column_start":12,"column_end":15},"name":"new","qualname":"<GzDecoder<R>>::new","value":"pub fn new(R) -> GzDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n gzip header.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder from the given reader, immediately parsing the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":86264,"byte_end":86336,"line_start":438,"line_end":438,"column_start":5,"column_end":77}},{"value":"/ gzip header.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":86341,"byte_end":86357,"line_start":439,"line_end":439,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":87319,"byte_end":87325,"line_start":474,"line_end":474,"column_start":12,"column_end":18},"name":"header","qualname":"<GzDecoder<R>>::header","value":"pub fn header(&Self) -> Option<&GzHeader>","parent":null,"children":[],"decl_id":null,"docs":" Returns the header associated with this stream, if it was valid\n","sig":null,"attributes":[{"value":"/ Returns the header associated with this stream, if it was valid","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":87240,"byte_end":87307,"line_start":473,"line_end":473,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":87458,"byte_end":87465,"line_start":479,"line_end":479,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":87396,"byte_end":87446,"line_start":478,"line_end":478,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":87733,"byte_end":87740,"line_start":487,"line_end":487,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":87532,"byte_end":87590,"line_start":483,"line_end":483,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":87595,"byte_end":87598,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":87603,"byte_end":87675,"line_start":485,"line_end":485,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":87680,"byte_end":87721,"line_start":486,"line_end":486,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":87886,"byte_end":87896,"line_start":492,"line_end":492,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<GzDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":87815,"byte_end":87874,"line_start":491,"line_end":491,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1385},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93948,"byte_end":93962,"line_start":659,"line_end":659,"column_start":12,"column_end":26},"name":"MultiGzDecoder","qualname":"::gz::bufread::MultiGzDecoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" A gzip streaming decoder that decodes all members of a multistream","sig":null,"attributes":[{"value":"/ A gzip streaming decoder that decodes all members of a multistream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":92410,"byte_end":92480,"line_start":618,"line_end":618,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":92481,"byte_end":92484,"line_start":619,"line_end":619,"column_start":1,"column_end":4}},{"value":"/ A gzip member consists of a header, compressed data and a trailer. The [gzip","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":92485,"byte_end":92565,"line_start":620,"line_end":620,"column_start":1,"column_end":81}},{"value":"/ specification](https://tools.ietf.org/html/rfc1952), however, allows multiple","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":92566,"byte_end":92647,"line_start":621,"line_end":621,"column_start":1,"column_end":82}},{"value":"/ gzip members to be joined in a single stream. `MultiGzDecoder` will","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":92648,"byte_end":92719,"line_start":622,"line_end":622,"column_start":1,"column_end":72}},{"value":"/ decode all consecutive members while `GzDecoder` will only decompress","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":92720,"byte_end":92793,"line_start":623,"line_end":623,"column_start":1,"column_end":74}},{"value":"/ the first gzip member. The multistream format is commonly used in","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":92794,"byte_end":92863,"line_start":624,"line_end":624,"column_start":1,"column_end":70}},{"value":"/ bioinformatics, for example when using the BGZF compressed data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":92864,"byte_end":92932,"line_start":625,"line_end":625,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":92933,"byte_end":92936,"line_start":626,"line_end":626,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`BufRead`] interface that will consume all gzip members","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":92937,"byte_end":93022,"line_start":627,"line_end":627,"column_start":1,"column_end":86}},{"value":"/ from the underlying reader and emit uncompressed data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93023,"byte_end":93081,"line_start":628,"line_end":628,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93082,"byte_end":93085,"line_start":629,"line_end":629,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93086,"byte_end":93154,"line_start":630,"line_end":630,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93155,"byte_end":93158,"line_start":631,"line_end":631,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93159,"byte_end":93173,"line_start":632,"line_end":632,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93174,"byte_end":93177,"line_start":633,"line_end":633,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93178,"byte_end":93185,"line_start":634,"line_end":634,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93186,"byte_end":93214,"line_start":635,"line_end":635,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93215,"byte_end":93231,"line_start":636,"line_end":636,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93232,"byte_end":93262,"line_start":637,"line_end":637,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::GzEncoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93263,"byte_end":93298,"line_start":638,"line_end":638,"column_start":1,"column_end":36}},{"value":"/ use flate2::bufread::MultiGzDecoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93299,"byte_end":93339,"line_start":639,"line_end":639,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93340,"byte_end":93343,"line_start":640,"line_end":640,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93344,"byte_end":93361,"line_start":641,"line_end":641,"column_start":1,"column_end":18}},{"value":"/ #   let mut e = GzEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93362,"byte_end":93433,"line_start":642,"line_end":642,"column_start":1,"column_end":72}},{"value":"/ #   e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93434,"byte_end":93479,"line_start":643,"line_end":643,"column_start":1,"column_end":46}},{"value":"/ #   let bytes = e.finish().unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93480,"byte_end":93520,"line_start":644,"line_end":644,"column_start":1,"column_end":41}},{"value":"/ #   println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93521,"byte_end":93575,"line_start":645,"line_end":645,"column_start":1,"column_end":55}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93576,"byte_end":93583,"line_start":646,"line_end":646,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93584,"byte_end":93589,"line_start":647,"line_end":647,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Gz Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93590,"byte_end":93668,"line_start":648,"line_end":648,"column_start":1,"column_end":79}},{"value":"/ // Here &[u8] implements BufRead","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93669,"byte_end":93705,"line_start":649,"line_end":649,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93706,"byte_end":93709,"line_start":650,"line_end":650,"column_start":1,"column_end":4}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93710,"byte_end":93770,"line_start":651,"line_end":651,"column_start":1,"column_end":61}},{"value":"/    let mut gz = MultiGzDecoder::new(&bytes[..]);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93771,"byte_end":93823,"line_start":652,"line_end":652,"column_start":1,"column_end":53}},{"value":"/    let mut s = String::new();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93824,"byte_end":93857,"line_start":653,"line_end":653,"column_start":1,"column_end":34}},{"value":"/    gz.read_to_string(&mut s)?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93858,"byte_end":93892,"line_start":654,"line_end":654,"column_start":1,"column_end":35}},{"value":"/    Ok(s)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93893,"byte_end":93905,"line_start":655,"line_end":655,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93906,"byte_end":93911,"line_start":656,"line_end":656,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93912,"byte_end":93919,"line_start":657,"line_end":657,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":94210,"byte_end":94213,"line_start":665,"line_end":665,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiGzDecoder<R>>::new","value":"pub fn new(R) -> MultiGzDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n (first) gzip header. If the gzip stream contains multiple members all will\n be decoded.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder from the given reader, immediately parsing the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":94023,"byte_end":94095,"line_start":662,"line_end":662,"column_start":5,"column_end":77}},{"value":"/ (first) gzip header. If the gzip stream contains multiple members all will","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":94100,"byte_end":94178,"line_start":663,"line_end":663,"column_start":5,"column_end":83}},{"value":"/ be decoded.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":94183,"byte_end":94198,"line_start":664,"line_end":664,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":94423,"byte_end":94429,"line_start":672,"line_end":672,"column_start":12,"column_end":18},"name":"header","qualname":"<MultiGzDecoder<R>>::header","value":"pub fn header(&Self) -> Option<&GzHeader>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current header associated with this stream, if it's valid\n","sig":null,"attributes":[{"value":"/ Returns the current header associated with this stream, if it's valid","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":94338,"byte_end":94411,"line_start":671,"line_end":671,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":94557,"byte_end":94564,"line_start":677,"line_end":677,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MultiGzDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":94495,"byte_end":94545,"line_start":676,"line_end":676,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":94817,"byte_end":94824,"line_start":685,"line_end":685,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MultiGzDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":94616,"byte_end":94674,"line_start":681,"line_end":681,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":94679,"byte_end":94682,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":94687,"byte_end":94759,"line_start":683,"line_end":683,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":94764,"byte_end":94805,"line_start":684,"line_end":684,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":94955,"byte_end":94965,"line_start":690,"line_end":690,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MultiGzDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":94884,"byte_end":94943,"line_start":689,"line_end":689,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1392},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100760,"byte_end":100769,"line_start":36,"line_end":36,"column_start":12,"column_end":21},"name":"GzEncoder","qualname":"::gz::read::GzEncoder","value":"GzEncoder {  }","parent":null,"children":[{"krate":0,"index":1394}],"decl_id":null,"docs":" A gzip streaming encoder","sig":null,"attributes":[{"value":"/ A gzip streaming encoder","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":99932,"byte_end":99960,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":99961,"byte_end":99964,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`Read`] interface that will read uncompressed data","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":99965,"byte_end":100045,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ from the underlying reader and expose the compressed version as a [`Read`]","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100046,"byte_end":100124,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ interface.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100125,"byte_end":100139,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100140,"byte_end":100143,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100144,"byte_end":100206,"line_start":15,"line_end":15,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100207,"byte_end":100210,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100211,"byte_end":100225,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100226,"byte_end":100229,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100230,"byte_end":100237,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100238,"byte_end":100266,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100267,"byte_end":100283,"line_start":21,"line_end":21,"column_start":1,"column_end":17}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100284,"byte_end":100312,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ use flate2::read::GzEncoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100313,"byte_end":100345,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100346,"byte_end":100349,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ // Return a vector containing the GZ compressed version of hello world","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100350,"byte_end":100424,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100425,"byte_end":100428,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn gzencode_hello_world() -> io::Result<Vec<u8>> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100429,"byte_end":100483,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/     let mut ret_vec = [0;100];","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100484,"byte_end":100518,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/     let bytestring = b\"hello world\";","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100519,"byte_end":100559,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/     let mut gz = GzEncoder::new(&bytestring[..], Compression::fast());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100560,"byte_end":100634,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/     let count = gz.read(&mut ret_vec)?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100635,"byte_end":100678,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/     Ok(ret_vec[0..count].to_vec())","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100679,"byte_end":100717,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100718,"byte_end":100723,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100724,"byte_end":100731,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":101310,"byte_end":101313,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<GzEncoder<R>>::new","value":"pub fn new(R, Compression) -> GzEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will use the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will use the given compression level.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100969,"byte_end":101038,"line_start":45,"line_end":45,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":101043,"byte_end":101046,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The encoder is not configured specially for the emitted header. For","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":101051,"byte_end":101122,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/ header configuration, see the `GzBuilder` type.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":101127,"byte_end":101178,"line_start":48,"line_end":48,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":101183,"byte_end":101186,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ The data read from the stream `r` will be compressed and available","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":101191,"byte_end":101261,"line_start":50,"line_end":50,"column_start":5,"column_end":75}},{"value":"/ through the returned reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":101266,"byte_end":101298,"line_start":51,"line_end":51,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":101496,"byte_end":101503,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":101434,"byte_end":101484,"line_start":58,"line_end":58,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":101770,"byte_end":101777,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":101569,"byte_end":101627,"line_start":63,"line_end":63,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":101632,"byte_end":101635,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the reader may result in surprising results if","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":101640,"byte_end":101712,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":101717,"byte_end":101758,"line_start":66,"line_end":66,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":101920,"byte_end":101930,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<GzEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying stream, consuming this encoder\n","sig":null,"attributes":[{"value":"/ Returns the underlying stream, consuming this encoder","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":101851,"byte_end":101908,"line_start":71,"line_end":71,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1398},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":103395,"byte_end":103404,"line_start":128,"line_end":128,"column_start":12,"column_end":21},"name":"GzDecoder","qualname":"::gz::read::GzDecoder","value":"GzDecoder {  }","parent":null,"children":[{"krate":0,"index":1400}],"decl_id":null,"docs":" A gzip streaming decoder","sig":null,"attributes":[{"value":"/ A gzip streaming decoder","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102369,"byte_end":102397,"line_start":93,"line_end":93,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102398,"byte_end":102401,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`Read`] interface that will consume compressed","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102402,"byte_end":102478,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"/ data from the underlying reader and emit uncompressed data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102479,"byte_end":102542,"line_start":96,"line_end":96,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102543,"byte_end":102546,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102547,"byte_end":102609,"line_start":98,"line_end":98,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102610,"byte_end":102613,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102614,"byte_end":102628,"line_start":100,"line_end":100,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102629,"byte_end":102632,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102633,"byte_end":102640,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102641,"byte_end":102644,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102645,"byte_end":102673,"line_start":104,"line_end":104,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102674,"byte_end":102690,"line_start":105,"line_end":105,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102691,"byte_end":102721,"line_start":106,"line_end":106,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::GzEncoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102722,"byte_end":102757,"line_start":107,"line_end":107,"column_start":1,"column_end":36}},{"value":"/ use flate2::read::GzDecoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102758,"byte_end":102790,"line_start":108,"line_end":108,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102791,"byte_end":102794,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102795,"byte_end":102812,"line_start":110,"line_end":110,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = GzEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102813,"byte_end":102885,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ #    e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102886,"byte_end":102932,"line_start":112,"line_end":112,"column_start":1,"column_end":47}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102933,"byte_end":102974,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/ #    println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102975,"byte_end":103030,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":103031,"byte_end":103038,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":103039,"byte_end":103044,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Gz Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":103045,"byte_end":103123,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/ // Here &[u8] implements Read","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":103124,"byte_end":103157,"line_start":118,"line_end":118,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":103158,"byte_end":103161,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":103162,"byte_end":103222,"line_start":120,"line_end":120,"column_start":1,"column_end":61}},{"value":"/    let mut gz = GzDecoder::new(&bytes[..]);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":103223,"byte_end":103270,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/    let mut s = String::new();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":103271,"byte_end":103304,"line_start":122,"line_end":122,"column_start":1,"column_end":34}},{"value":"/    gz.read_to_string(&mut s)?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":103305,"byte_end":103339,"line_start":123,"line_end":123,"column_start":1,"column_end":35}},{"value":"/    Ok(s)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":103340,"byte_end":103352,"line_start":124,"line_end":124,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":103353,"byte_end":103358,"line_start":125,"line_end":125,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":103359,"byte_end":103366,"line_start":126,"line_end":126,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":103596,"byte_end":103599,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"new","qualname":"<GzDecoder<R>>::new","value":"pub fn new(R) -> GzDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n gzip header.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder from the given reader, immediately parsing the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":103491,"byte_end":103563,"line_start":133,"line_end":133,"column_start":5,"column_end":77}},{"value":"/ gzip header.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":103568,"byte_end":103584,"line_start":134,"line_end":134,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":103833,"byte_end":103839,"line_start":144,"line_end":144,"column_start":12,"column_end":18},"name":"header","qualname":"<GzDecoder<R>>::header","value":"pub fn header(&Self) -> Option<&GzHeader>","parent":null,"children":[],"decl_id":null,"docs":" Returns the header associated with this stream, if it was valid.\n","sig":null,"attributes":[{"value":"/ Returns the header associated with this stream, if it was valid.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":103753,"byte_end":103821,"line_start":143,"line_end":143,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":103971,"byte_end":103978,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":103909,"byte_end":103959,"line_start":148,"line_end":148,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":104245,"byte_end":104252,"line_start":157,"line_end":157,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":104044,"byte_end":104102,"line_start":153,"line_end":153,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":104107,"byte_end":104110,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":104115,"byte_end":104187,"line_start":155,"line_end":155,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":104192,"byte_end":104233,"line_start":156,"line_end":156,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":104397,"byte_end":104407,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<GzDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":104326,"byte_end":104385,"line_start":161,"line_end":161,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1404},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":106374,"byte_end":106388,"line_start":224,"line_end":224,"column_start":12,"column_end":26},"name":"MultiGzDecoder","qualname":"::gz::read::MultiGzDecoder","value":"MultiGzDecoder {  }","parent":null,"children":[{"krate":0,"index":1406}],"decl_id":null,"docs":" A gzip streaming decoder that decodes all members of a multistream","sig":null,"attributes":[{"value":"/ A gzip streaming decoder that decodes all members of a multistream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":104846,"byte_end":104916,"line_start":183,"line_end":183,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":104917,"byte_end":104920,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ A gzip member consists of a header, compressed data and a trailer. The [gzip","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":104921,"byte_end":105001,"line_start":185,"line_end":185,"column_start":1,"column_end":81}},{"value":"/ specification](https://tools.ietf.org/html/rfc1952), however, allows multiple","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105002,"byte_end":105083,"line_start":186,"line_end":186,"column_start":1,"column_end":82}},{"value":"/ gzip members to be joined in a single stream.  `MultiGzDecoder` will","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105084,"byte_end":105156,"line_start":187,"line_end":187,"column_start":1,"column_end":73}},{"value":"/ decode all consecutive members while `GzDecoder` will only decompress the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105157,"byte_end":105234,"line_start":188,"line_end":188,"column_start":1,"column_end":78}},{"value":"/ first gzip member. The multistream format is commonly used in bioinformatics,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105235,"byte_end":105316,"line_start":189,"line_end":189,"column_start":1,"column_end":82}},{"value":"/ for example when using the BGZF compressed data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105317,"byte_end":105369,"line_start":190,"line_end":190,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105370,"byte_end":105373,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`Read`] interface that will consume all gzip members","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105374,"byte_end":105456,"line_start":192,"line_end":192,"column_start":1,"column_end":83}},{"value":"/ from the underlying reader and emit uncompressed data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105457,"byte_end":105515,"line_start":193,"line_end":193,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105516,"byte_end":105519,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105520,"byte_end":105582,"line_start":195,"line_end":195,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105583,"byte_end":105586,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105587,"byte_end":105601,"line_start":197,"line_end":197,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105602,"byte_end":105605,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105606,"byte_end":105613,"line_start":199,"line_end":199,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105614,"byte_end":105642,"line_start":200,"line_end":200,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105643,"byte_end":105659,"line_start":201,"line_end":201,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105660,"byte_end":105690,"line_start":202,"line_end":202,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::GzEncoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105691,"byte_end":105726,"line_start":203,"line_end":203,"column_start":1,"column_end":36}},{"value":"/ use flate2::read::MultiGzDecoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105727,"byte_end":105764,"line_start":204,"line_end":204,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105765,"byte_end":105768,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105769,"byte_end":105786,"line_start":206,"line_end":206,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = GzEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105787,"byte_end":105859,"line_start":207,"line_end":207,"column_start":1,"column_end":73}},{"value":"/ #    e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105860,"byte_end":105906,"line_start":208,"line_end":208,"column_start":1,"column_end":47}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105907,"byte_end":105948,"line_start":209,"line_end":209,"column_start":1,"column_end":42}},{"value":"/ #    println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":105949,"byte_end":106004,"line_start":210,"line_end":210,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":106005,"byte_end":106012,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":106013,"byte_end":106018,"line_start":212,"line_end":212,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Gz Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":106019,"byte_end":106097,"line_start":213,"line_end":213,"column_start":1,"column_end":79}},{"value":"/ // Here &[u8] implements Read","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":106098,"byte_end":106131,"line_start":214,"line_end":214,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":106132,"byte_end":106135,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":106136,"byte_end":106196,"line_start":216,"line_end":216,"column_start":1,"column_end":61}},{"value":"/    let mut gz = MultiGzDecoder::new(&bytes[..]);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":106197,"byte_end":106249,"line_start":217,"line_end":217,"column_start":1,"column_end":53}},{"value":"/    let mut s = String::new();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":106250,"byte_end":106283,"line_start":218,"line_end":218,"column_start":1,"column_end":34}},{"value":"/    gz.read_to_string(&mut s)?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":106284,"byte_end":106318,"line_start":219,"line_end":219,"column_start":1,"column_end":35}},{"value":"/    Ok(s)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":106319,"byte_end":106331,"line_start":220,"line_end":220,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":106332,"byte_end":106337,"line_start":221,"line_end":221,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":106338,"byte_end":106345,"line_start":222,"line_end":222,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":106672,"byte_end":106675,"line_start":232,"line_end":232,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiGzDecoder<R>>::new","value":"pub fn new(R) -> MultiGzDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder from the given reader, immediately parsing the\n (first) gzip header. If the gzip stream contains multiple members all will\n be decoded.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder from the given reader, immediately parsing the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":106485,"byte_end":106557,"line_start":229,"line_end":229,"column_start":5,"column_end":77}},{"value":"/ (first) gzip header. If the gzip stream contains multiple members all will","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":106562,"byte_end":106640,"line_start":230,"line_end":230,"column_start":5,"column_end":83}},{"value":"/ be decoded.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":106645,"byte_end":106660,"line_start":231,"line_end":231,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":106935,"byte_end":106941,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"header","qualname":"<MultiGzDecoder<R>>::header","value":"pub fn header(&Self) -> Option<&GzHeader>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current header associated with this stream, if it's valid.\n","sig":null,"attributes":[{"value":"/ Returns the current header associated with this stream, if it's valid.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":106849,"byte_end":106923,"line_start":240,"line_end":240,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":107073,"byte_end":107080,"line_start":246,"line_end":246,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MultiGzDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":107011,"byte_end":107061,"line_start":245,"line_end":245,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":107347,"byte_end":107354,"line_start":254,"line_end":254,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MultiGzDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":107146,"byte_end":107204,"line_start":250,"line_end":250,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":107209,"byte_end":107212,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":107217,"byte_end":107289,"line_start":252,"line_end":252,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":107294,"byte_end":107335,"line_start":253,"line_end":253,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":107499,"byte_end":107509,"line_start":259,"line_end":259,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MultiGzDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":107428,"byte_end":107487,"line_start":258,"line_end":258,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1410},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":108840,"byte_end":108849,"line_start":34,"line_end":34,"column_start":12,"column_end":21},"name":"GzEncoder","qualname":"::gz::write::GzEncoder","value":"GzEncoder {  }","parent":null,"children":[{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1415}],"decl_id":null,"docs":" A gzip streaming encoder","sig":null,"attributes":[{"value":"/ A gzip streaming encoder","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":108199,"byte_end":108227,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":108228,"byte_end":108231,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`Write`] interface that will emit compressed data","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":108232,"byte_end":108311,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ to the underlying writer `W`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":108312,"byte_end":108345,"line_start":14,"line_end":14,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":108346,"byte_end":108349,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":108350,"byte_end":108414,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":108415,"byte_end":108418,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":108419,"byte_end":108433,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":108434,"byte_end":108437,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":108438,"byte_end":108445,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":108446,"byte_end":108474,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":108475,"byte_end":108503,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ use flate2::write::GzEncoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":108504,"byte_end":108537,"line_start":23,"line_end":23,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":108538,"byte_end":108541,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ // Vec<u8> implements Write to print the compressed bytes of sample string","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":108542,"byte_end":108620,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ # fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":108621,"byte_end":108638,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":108639,"byte_end":108642,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut e = GzEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":108643,"byte_end":108710,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/ e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":108711,"byte_end":108752,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/ println!(\"{:?}\", e.finish().unwrap());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":108753,"byte_end":108795,"line_start":30,"line_end":30,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":108796,"byte_end":108803,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":108804,"byte_end":108811,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":109588,"byte_end":109591,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<GzEncoder<W>>::new","value":"pub fn new(W, Compression) -> GzEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will use the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will use the given compression level.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":109247,"byte_end":109316,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":109321,"byte_end":109324,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The encoder is not configured specially for the emitted header. For","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":109329,"byte_end":109400,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ header configuration, see the `GzBuilder` type.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":109405,"byte_end":109456,"line_start":54,"line_end":54,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":109461,"byte_end":109464,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The data written to the returned encoder will be compressed and then","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":109469,"byte_end":109541,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ written to the stream `w`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":109546,"byte_end":109576,"line_start":57,"line_end":57,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":109750,"byte_end":109757,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzEncoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":109688,"byte_end":109738,"line_start":62,"line_end":62,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":110014,"byte_end":110021,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzEncoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":109813,"byte_end":109871,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":109876,"byte_end":109879,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the writer may result in surprising results if","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":109884,"byte_end":109956,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":109961,"byte_end":110002,"line_start":70,"line_end":70,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":110700,"byte_end":110710,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<GzEncoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":110085,"byte_end":110160,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":110165,"byte_end":110168,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":110173,"byte_end":110246,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":110251,"byte_end":110327,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":110332,"byte_end":110375,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":110380,"byte_end":110383,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":110388,"byte_end":110400,"line_start":81,"line_end":81,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":110405,"byte_end":110408,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":110413,"byte_end":110487,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":110492,"byte_end":110515,"line_start":84,"line_end":84,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":110520,"byte_end":110523,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":110528,"byte_end":110540,"line_start":86,"line_end":86,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":110545,"byte_end":110548,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":110553,"byte_end":110624,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":110629,"byte_end":110688,"line_start":89,"line_end":89,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":112083,"byte_end":112089,"line_start":126,"line_end":126,"column_start":12,"column_end":18},"name":"finish","qualname":"<GzEncoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Finish encoding this stream, returning the underlying writer once the\n encoding is done.","sig":null,"attributes":[{"value":"/ Finish encoding this stream, returning the underlying writer once the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":111423,"byte_end":111496,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ encoding is done.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":111501,"byte_end":111522,"line_start":114,"line_end":114,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":111527,"byte_end":111530,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":111535,"byte_end":111611,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":111616,"byte_end":111691,"line_start":117,"line_end":117,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":111696,"byte_end":111766,"line_start":118,"line_end":118,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":111771,"byte_end":111844,"line_start":119,"line_end":119,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":111849,"byte_end":111898,"line_start":120,"line_end":120,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":111903,"byte_end":111906,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":111911,"byte_end":111923,"line_start":122,"line_end":122,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":111928,"byte_end":111931,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":111936,"byte_end":112007,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":112012,"byte_end":112071,"line_start":125,"line_end":125,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1419},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":114267,"byte_end":114276,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"GzDecoder","qualname":"::gz::write::GzDecoder","value":"GzDecoder {  }","parent":null,"children":[{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424}],"decl_id":null,"docs":" A gzip streaming decoder","sig":null,"attributes":[{"value":"/ A gzip streaming decoder","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113153,"byte_end":113181,"line_start":170,"line_end":170,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113182,"byte_end":113185,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ This structure exposes a [`Write`] interface that will emit compressed data","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113186,"byte_end":113265,"line_start":172,"line_end":172,"column_start":1,"column_end":80}},{"value":"/ to the underlying writer `W`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113266,"byte_end":113299,"line_start":173,"line_end":173,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113300,"byte_end":113303,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113304,"byte_end":113368,"line_start":175,"line_end":175,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113369,"byte_end":113372,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113373,"byte_end":113387,"line_start":177,"line_end":177,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113388,"byte_end":113391,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113392,"byte_end":113399,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113400,"byte_end":113428,"line_start":180,"line_end":180,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113429,"byte_end":113445,"line_start":181,"line_end":181,"column_start":1,"column_end":17}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113446,"byte_end":113474,"line_start":182,"line_end":182,"column_start":1,"column_end":29}},{"value":"/ use flate2::write::{GzEncoder, GzDecoder};","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113475,"byte_end":113521,"line_start":183,"line_end":183,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113522,"byte_end":113525,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113526,"byte_end":113543,"line_start":185,"line_end":185,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = GzEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113544,"byte_end":113616,"line_start":186,"line_end":186,"column_start":1,"column_end":73}},{"value":"/ #    e.write(b\"Hello World\").unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113617,"byte_end":113659,"line_start":187,"line_end":187,"column_start":1,"column_end":43}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113660,"byte_end":113701,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ #    assert_eq!(\"Hello World\", decode_writer(bytes).unwrap());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113702,"byte_end":113768,"line_start":189,"line_end":189,"column_start":1,"column_end":67}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113769,"byte_end":113776,"line_start":190,"line_end":190,"column_start":1,"column_end":8}},{"value":"/ // Uncompresses a gzip encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113777,"byte_end":113857,"line_start":191,"line_end":191,"column_start":1,"column_end":81}},{"value":"/ // Here Vec<u8> implements Write","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113858,"byte_end":113894,"line_start":192,"line_end":192,"column_start":1,"column_end":37}},{"value":"/ fn decode_writer(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113895,"byte_end":113955,"line_start":193,"line_end":193,"column_start":1,"column_end":61}},{"value":"/    let mut writer = Vec::new();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113956,"byte_end":113991,"line_start":194,"line_end":194,"column_start":1,"column_end":36}},{"value":"/    let mut decoder = GzDecoder::new(writer);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113992,"byte_end":114040,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/    decoder.write_all(&bytes[..])?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":114041,"byte_end":114079,"line_start":196,"line_end":196,"column_start":1,"column_end":39}},{"value":"/    writer = decoder.finish()?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":114080,"byte_end":114114,"line_start":197,"line_end":197,"column_start":1,"column_end":35}},{"value":"/    let return_string = String::from_utf8(writer).expect(\"String parsing error\");","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":114115,"byte_end":114199,"line_start":198,"line_end":198,"column_start":1,"column_end":85}},{"value":"/    Ok(return_string)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":114200,"byte_end":114224,"line_start":199,"line_end":199,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":114225,"byte_end":114230,"line_start":200,"line_end":200,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":114231,"byte_end":114238,"line_start":201,"line_end":201,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":114683,"byte_end":114686,"line_start":217,"line_end":217,"column_start":12,"column_end":15},"name":"new","qualname":"<GzDecoder<W>>::new","value":"pub fn new(W) -> GzDecoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will write uncompressed data to the stream.","sig":null,"attributes":[{"value":"/ Creates a new decoder which will write uncompressed data to the stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":114488,"byte_end":114563,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":114568,"byte_end":114571,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ When this encoder is dropped or unwrapped the final pieces of data will","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":114576,"byte_end":114651,"line_start":215,"line_end":215,"column_start":5,"column_end":80}},{"value":"/ be flushed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":114656,"byte_end":114671,"line_start":216,"line_end":216,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":115015,"byte_end":115021,"line_start":227,"line_end":227,"column_start":12,"column_end":18},"name":"header","qualname":"<GzDecoder<W>>::header","value":"pub fn header(&Self) -> Option<&GzHeader>","parent":null,"children":[],"decl_id":null,"docs":" Returns the header associated with this stream.\n","sig":null,"attributes":[{"value":"/ Returns the header associated with this stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":114952,"byte_end":115003,"line_start":226,"line_end":226,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":115154,"byte_end":115161,"line_start":232,"line_end":232,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<GzDecoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":115092,"byte_end":115142,"line_start":231,"line_end":231,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":115448,"byte_end":115455,"line_start":240,"line_end":240,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<GzDecoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":115227,"byte_end":115285,"line_start":236,"line_end":236,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":115290,"byte_end":115293,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":115298,"byte_end":115374,"line_start":238,"line_end":238,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":115379,"byte_end":115436,"line_start":239,"line_end":239,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":116108,"byte_end":116118,"line_start":259,"line_end":259,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<GzDecoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":115529,"byte_end":115604,"line_start":244,"line_end":244,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":115609,"byte_end":115612,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":115617,"byte_end":115690,"line_start":246,"line_end":246,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":115695,"byte_end":115771,"line_start":247,"line_end":247,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":115776,"byte_end":115819,"line_start":248,"line_end":248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":115824,"byte_end":115827,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":115832,"byte_end":115844,"line_start":250,"line_end":250,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":115849,"byte_end":115852,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":115857,"byte_end":115931,"line_start":252,"line_end":252,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":115936,"byte_end":115959,"line_start":253,"line_end":253,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":115964,"byte_end":115967,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":115972,"byte_end":115984,"line_start":255,"line_end":255,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":115989,"byte_end":115992,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to finish the stream, returning any","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":115997,"byte_end":116067,"line_start":257,"line_end":257,"column_start":5,"column_end":75}},{"value":"/ errors which happen.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":116072,"byte_end":116096,"line_start":258,"line_end":258,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":116957,"byte_end":116963,"line_start":279,"line_end":279,"column_start":12,"column_end":18},"name":"finish","qualname":"<GzDecoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this decoder, flushing the output stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":116214,"byte_end":116268,"line_start":264,"line_end":264,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":116273,"byte_end":116276,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream and then return the contained","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":116281,"byte_end":116357,"line_start":266,"line_end":266,"column_start":5,"column_end":81}},{"value":"/ writer if the flush succeeded.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":116362,"byte_end":116396,"line_start":267,"line_end":267,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":116401,"byte_end":116404,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":116409,"byte_end":116485,"line_start":269,"line_end":269,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":116490,"byte_end":116565,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":116570,"byte_end":116640,"line_start":271,"line_end":271,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":116645,"byte_end":116718,"line_start":272,"line_end":272,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":116723,"byte_end":116772,"line_start":273,"line_end":273,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":116777,"byte_end":116780,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":116785,"byte_end":116797,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":116802,"byte_end":116805,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":116810,"byte_end":116881,"line_start":277,"line_end":277,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":116886,"byte_end":116945,"line_start":278,"line_end":278,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1428},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":61527,"byte_end":61535,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"GzHeader","qualname":"::gz::GzHeader","value":"GzHeader {  }","parent":null,"children":[{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433}],"decl_id":null,"docs":" A structure representing the header of a gzip stream.","sig":null,"attributes":[{"value":"/ A structure representing the header of a gzip stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":61322,"byte_end":61379,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":61380,"byte_end":61383,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The header can contain metadata about the file that was compressed, if","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":61384,"byte_end":61458,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ present.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":61459,"byte_end":61471,"line_start":20,"line_end":20,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":61778,"byte_end":61786,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"filename","qualname":"<GzHeader>::filename","value":"pub fn filename(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `filename` field of this gzip stream's header, if present.\n","sig":null,"attributes":[{"value":"/ Returns the `filename` field of this gzip stream's header, if present.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":61692,"byte_end":61766,"line_start":31,"line_end":31,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":61954,"byte_end":61959,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"extra","qualname":"<GzHeader>::extra","value":"pub fn extra(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `extra` field of this gzip stream's header, if present.\n","sig":null,"attributes":[{"value":"/ Returns the `extra` field of this gzip stream's header, if present.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":61871,"byte_end":61942,"line_start":36,"line_end":36,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":62126,"byte_end":62133,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"comment","qualname":"<GzHeader>::comment","value":"pub fn comment(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `comment` field of this gzip stream's header, if present.\n","sig":null,"attributes":[{"value":"/ Returns the `comment` field of this gzip stream's header, if present.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":62041,"byte_end":62114,"line_start":41,"line_end":41,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":62419,"byte_end":62435,"line_start":50,"line_end":50,"column_start":12,"column_end":28},"name":"operating_system","qualname":"<GzHeader>::operating_system","value":"pub fn operating_system(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the `operating_system` field of this gzip stream's header.","sig":null,"attributes":[{"value":"/ Returns the `operating_system` field of this gzip stream's header.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":62217,"byte_end":62287,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":62292,"byte_end":62295,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ There are predefined values for various operating systems.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":62300,"byte_end":62362,"line_start":48,"line_end":48,"column_start":5,"column_end":67}},{"value":"/ 255 means that the value is unknown.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":62367,"byte_end":62407,"line_start":49,"line_end":49,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":63057,"byte_end":63062,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"mtime","qualname":"<GzHeader>::mtime","value":"pub fn mtime(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" This gives the most recent modification time of the original file being compressed.","sig":null,"attributes":[{"value":"/ This gives the most recent modification time of the original file being compressed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":62492,"byte_end":62579,"line_start":54,"line_end":54,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":62584,"byte_end":62587,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The time is in Unix format, i.e., seconds since 00:00:00 GMT, Jan. 1, 1970.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":62592,"byte_end":62671,"line_start":56,"line_end":56,"column_start":5,"column_end":84}},{"value":"/ (Note that this may cause problems for MS-DOS and other systems that use local","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":62676,"byte_end":62758,"line_start":57,"line_end":57,"column_start":5,"column_end":87}},{"value":"/ rather than Universal time.) If the compressed data did not come from a file,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":62763,"byte_end":62844,"line_start":58,"line_end":58,"column_start":5,"column_end":86}},{"value":"/ `mtime` is set to the time at which compression started.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":62849,"byte_end":62909,"line_start":59,"line_end":59,"column_start":5,"column_end":65}},{"value":"/ `mtime` = 0 means no time stamp is available.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":62914,"byte_end":62963,"line_start":60,"line_end":60,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":62968,"byte_end":62971,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The usage of `mtime` is discouraged because of Year 2038 problem.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":62976,"byte_end":63045,"line_start":62,"line_end":62,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":63457,"byte_end":63474,"line_start":74,"line_end":74,"column_start":12,"column_end":29},"name":"mtime_as_datetime","qualname":"<GzHeader>::mtime_as_datetime","value":"pub fn mtime_as_datetime(&Self) -> Option<time::SystemTime>","parent":null,"children":[],"decl_id":null,"docs":" Returns the most recent modification time represented by a date-time type.\n Returns `None` if the value of the underlying counter is 0,\n indicating no time stamp is available.","sig":null,"attributes":[{"value":"/ Returns the most recent modification time represented by a date-time type.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":63109,"byte_end":63187,"line_start":67,"line_end":67,"column_start":5,"column_end":83}},{"value":"/ Returns `None` if the value of the underlying counter is 0,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":63192,"byte_end":63255,"line_start":68,"line_end":68,"column_start":5,"column_end":68}},{"value":"/ indicating no time stamp is available.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":63260,"byte_end":63302,"line_start":69,"line_end":69,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":63307,"byte_end":63310,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":63315,"byte_end":63318,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ The time is measured as seconds since 00:00:00 GMT, Jan. 1 1970.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":63323,"byte_end":63391,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/ See [`mtime`](#method.mtime) for more detail.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":63396,"byte_end":63445,"line_start":73,"line_end":73,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1444},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":64547,"byte_end":64556,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"GzBuilder","qualname":"::gz::GzBuilder","value":"GzBuilder {  }","parent":null,"children":[{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449}],"decl_id":null,"docs":" A builder structure to create a new gzip Encoder.","sig":null,"attributes":[{"value":"/ A builder structure to create a new gzip Encoder.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":63751,"byte_end":63804,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":63805,"byte_end":63808,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This structure controls header configuration options such as the filename.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":63809,"byte_end":63887,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":63888,"byte_end":63891,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":63892,"byte_end":63906,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":63907,"byte_end":63910,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":63911,"byte_end":63918,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":63919,"byte_end":63947,"line_start":92,"line_end":92,"column_start":1,"column_end":29}},{"value":"/ # use std::io;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":63948,"byte_end":63966,"line_start":93,"line_end":93,"column_start":1,"column_end":19}},{"value":"/ use std::fs::File;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":63967,"byte_end":63989,"line_start":94,"line_end":94,"column_start":1,"column_end":23}},{"value":"/ use flate2::GzBuilder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":63990,"byte_end":64016,"line_start":95,"line_end":95,"column_start":1,"column_end":27}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":64017,"byte_end":64045,"line_start":96,"line_end":96,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":64046,"byte_end":64049,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ // GzBuilder opens a file and writes a sample string using GzBuilder pattern","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":64050,"byte_end":64130,"line_start":98,"line_end":98,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":64131,"byte_end":64134,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ # fn sample_builder() -> Result<(), io::Error> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":64135,"byte_end":64187,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ let f = File::create(\"examples/hello_world.gz\")?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":64188,"byte_end":64241,"line_start":101,"line_end":101,"column_start":1,"column_end":54}},{"value":"/ let mut gz = GzBuilder::new()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":64242,"byte_end":64275,"line_start":102,"line_end":102,"column_start":1,"column_end":34}},{"value":"/                 .filename(\"hello_world.txt\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":64276,"byte_end":64324,"line_start":103,"line_end":103,"column_start":1,"column_end":49}},{"value":"/                 .comment(\"test file, please delete\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":64325,"byte_end":64381,"line_start":104,"line_end":104,"column_start":1,"column_end":57}},{"value":"/                 .write(f, Compression::default());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":64382,"byte_end":64436,"line_start":105,"line_end":105,"column_start":1,"column_end":55}},{"value":"/ gz.write_all(b\"hello world\")?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":64437,"byte_end":64471,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/ gz.finish()?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":64472,"byte_end":64489,"line_start":107,"line_end":107,"column_start":1,"column_end":18}},{"value":"/ # Ok(())","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":64490,"byte_end":64502,"line_start":108,"line_end":108,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":64503,"byte_end":64510,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":64511,"byte_end":64518,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":64876,"byte_end":64879,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"name":"new","qualname":"<GzBuilder>::new","value":"pub fn new() -> GzBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create a new blank builder with no header by default.\n","sig":null,"attributes":[{"value":"/ Create a new blank builder with no header by default.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":64807,"byte_end":64864,"line_start":127,"line_end":127,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":65139,"byte_end":65144,"line_start":139,"line_end":139,"column_start":12,"column_end":17},"name":"mtime","qualname":"<GzBuilder>::mtime","value":"pub fn mtime(Self, u32) -> GzBuilder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `mtime` field in the gzip header.\n","sig":null,"attributes":[{"value":"/ Configure the `mtime` field in the gzip header.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":65076,"byte_end":65127,"line_start":138,"line_end":138,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":65308,"byte_end":65324,"line_start":145,"line_end":145,"column_start":12,"column_end":28},"name":"operating_system","qualname":"<GzBuilder>::operating_system","value":"pub fn operating_system(Self, u8) -> GzBuilder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `operating_system` field in the gzip header.\n","sig":null,"attributes":[{"value":"/ Configure the `operating_system` field in the gzip header.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":65234,"byte_end":65296,"line_start":144,"line_end":144,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":65487,"byte_end":65492,"line_start":151,"line_end":151,"column_start":12,"column_end":17},"name":"extra","qualname":"<GzBuilder>::extra","value":"pub fn extra<T: Into<Vec<u8>>>(Self, T) -> GzBuilder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `extra` field in the gzip header.\n","sig":null,"attributes":[{"value":"/ Configure the `extra` field in the gzip header.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":65424,"byte_end":65475,"line_start":150,"line_end":150,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":65766,"byte_end":65774,"line_start":161,"line_end":161,"column_start":12,"column_end":20},"name":"filename","qualname":"<GzBuilder>::filename","value":"pub fn filename<T: Into<Vec<u8>>>(Self, T) -> GzBuilder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `filename` field in the gzip header.","sig":null,"attributes":[{"value":"/ Configure the `filename` field in the gzip header.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":65611,"byte_end":65665,"line_start":156,"line_end":156,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":65670,"byte_end":65673,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":65678,"byte_end":65690,"line_start":158,"line_end":158,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":65695,"byte_end":65698,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Panics if the `filename` slice contains a zero.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":65703,"byte_end":65754,"line_start":160,"line_end":160,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":66078,"byte_end":66085,"line_start":171,"line_end":171,"column_start":12,"column_end":19},"name":"comment","qualname":"<GzBuilder>::comment","value":"pub fn comment<T: Into<Vec<u8>>>(Self, T) -> GzBuilder","parent":null,"children":[],"decl_id":null,"docs":" Configure the `comment` field in the gzip header.","sig":null,"attributes":[{"value":"/ Configure the `comment` field in the gzip header.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":65925,"byte_end":65978,"line_start":166,"line_end":166,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":65983,"byte_end":65986,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":65991,"byte_end":66003,"line_start":168,"line_end":168,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":66008,"byte_end":66011,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Panics if the `comment` slice contains a zero.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":66016,"byte_end":66066,"line_start":170,"line_end":170,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":66448,"byte_end":66453,"line_start":180,"line_end":180,"column_start":12,"column_end":17},"name":"write","qualname":"<GzBuilder>::write","value":"pub fn write<W: Write>(Self, W, Compression) -> write::GzEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Consume this builder, creating a writer encoder in the process.","sig":null,"attributes":[{"value":"/ Consume this builder, creating a writer encoder in the process.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":66233,"byte_end":66300,"line_start":176,"line_end":176,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":66305,"byte_end":66308,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ The data written to the returned encoder will be compressed and then","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":66313,"byte_end":66385,"line_start":178,"line_end":178,"column_start":5,"column_end":77}},{"value":"/ written out to the supplied parameter `w`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":66390,"byte_end":66436,"line_start":179,"line_end":179,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":66797,"byte_end":66801,"line_start":188,"line_end":188,"column_start":12,"column_end":16},"name":"read","qualname":"<GzBuilder>::read","value":"pub fn read<R: Read>(Self, R, Compression) -> read::GzEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Consume this builder, creating a reader encoder in the process.","sig":null,"attributes":[{"value":"/ Consume this builder, creating a reader encoder in the process.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":66587,"byte_end":66654,"line_start":184,"line_end":184,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":66659,"byte_end":66662,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ Data read from the returned encoder will be the compressed version of","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":66667,"byte_end":66740,"line_start":186,"line_end":186,"column_start":5,"column_end":78}},{"value":"/ the data read from the given reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":66745,"byte_end":66785,"line_start":187,"line_end":187,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":67150,"byte_end":67158,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"buf_read","qualname":"<GzBuilder>::buf_read","value":"pub fn buf_read<R>(Self, R, Compression) -> bufread::GzEncoder<R> where\nR: BufRead","parent":null,"children":[],"decl_id":null,"docs":" Consume this builder, creating a reader encoder in the process.","sig":null,"attributes":[{"value":"/ Consume this builder, creating a reader encoder in the process.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":66940,"byte_end":67007,"line_start":192,"line_end":192,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":67012,"byte_end":67015,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Data read from the returned encoder will be the compressed version of","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":67020,"byte_end":67093,"line_start":194,"line_end":194,"column_start":5,"column_end":78}},{"value":"/ the data read from the given reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":67098,"byte_end":67138,"line_start":195,"line_end":195,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1452},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":123709,"byte_end":123717,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"Compress","qualname":"::mem::Compress","value":"Compress {  }","parent":null,"children":[{"krate":0,"index":1453}],"decl_id":null,"docs":" Raw in-memory compression stream for blocks of data.","sig":null,"attributes":[{"value":"/ Raw in-memory compression stream for blocks of data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":123104,"byte_end":123160,"line_start":9,"line_end":9,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":123161,"byte_end":123164,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type is the building block for the I/O streams in the rest of this","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":123165,"byte_end":123240,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ crate. It requires more management than the [`Read`]/[`Write`] API but is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":123241,"byte_end":123318,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ maximally flexible in terms of accepting input from any source and being","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":123319,"byte_end":123395,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ able to produce output to any memory location.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":123396,"byte_end":123446,"line_start":14,"line_end":14,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":123447,"byte_end":123450,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ It is recommended to use the I/O stream adaptors over this type as they're","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":123451,"byte_end":123529,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ easier to use.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":123530,"byte_end":123548,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":123549,"byte_end":123552,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":123553,"byte_end":123615,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":123616,"byte_end":123680,"line_start":20,"line_end":20,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1456},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":124350,"byte_end":124360,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"Decompress","qualname":"::mem::Decompress","value":"Decompress {  }","parent":null,"children":[{"krate":0,"index":1457}],"decl_id":null,"docs":" Raw in-memory decompression stream for blocks of data.","sig":null,"attributes":[{"value":"/ Raw in-memory decompression stream for blocks of data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":123743,"byte_end":123801,"line_start":26,"line_end":26,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":123802,"byte_end":123805,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This type is the building block for the I/O streams in the rest of this","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":123806,"byte_end":123881,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ crate. It requires more management than the [`Read`]/[`Write`] API but is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":123882,"byte_end":123959,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ maximally flexible in terms of accepting input from any source and being","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":123960,"byte_end":124036,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ able to produce output to any memory location.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":124037,"byte_end":124087,"line_start":31,"line_end":31,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":124088,"byte_end":124091,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ It is recommended to use the I/O stream adaptors over this type as they're","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":124092,"byte_end":124170,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ easier to use.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":124171,"byte_end":124189,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":124190,"byte_end":124193,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":124194,"byte_end":124256,"line_start":36,"line_end":36,"column_start":1,"column_end":63}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":124257,"byte_end":124321,"line_start":37,"line_end":37,"column_start":1,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1461},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":124789,"byte_end":124793,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"None","qualname":"::mem::FlushCompress::None","value":"FlushCompress::None","parent":{"krate":0,"index":1460},"children":[],"decl_id":null,"docs":" A typical parameter for passing to compression/decompression functions,\n this indicates that the underlying stream to decide how much data to\n accumulate before producing output in order to maximize compression.\n","sig":null,"attributes":[{"value":"/ A typical parameter for passing to compression/decompression functions,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":124555,"byte_end":124630,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ this indicates that the underlying stream to decide how much data to","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":124635,"byte_end":124707,"line_start":48,"line_end":48,"column_start":5,"column_end":77}},{"value":"/ accumulate before producing output in order to maximize compression.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":124712,"byte_end":124784,"line_start":49,"line_end":49,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1464},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":125244,"byte_end":125248,"line_start":59,"line_end":59,"column_start":5,"column_end":9},"name":"Sync","qualname":"::mem::FlushCompress::Sync","value":"FlushCompress::Sync","parent":{"krate":0,"index":1460},"children":[],"decl_id":null,"docs":" All pending output is flushed to the output buffer and the output is\n aligned on a byte boundary so that the decompressor can get all input\n data available so far.","sig":null,"attributes":[{"value":"/ All pending output is flushed to the output buffer and the output is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":124828,"byte_end":124900,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"/ aligned on a byte boundary so that the decompressor can get all input","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":124905,"byte_end":124978,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ data available so far.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":124983,"byte_end":125009,"line_start":54,"line_end":54,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":125014,"byte_end":125017,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Flushing may degrade compression for some compression algorithms and so","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":125022,"byte_end":125097,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ it should only be used when necessary. This will complete the current","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":125102,"byte_end":125175,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ deflate block and follow it with an empty stored block.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":125180,"byte_end":125239,"line_start":58,"line_end":58,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1467},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":125782,"byte_end":125789,"line_start":69,"line_end":69,"column_start":5,"column_end":12},"name":"Partial","qualname":"::mem::FlushCompress::Partial","value":"FlushCompress::Partial","parent":{"krate":0,"index":1460},"children":[],"decl_id":null,"docs":" All pending output is flushed to the output buffer, but the output is\n not aligned to a byte boundary.","sig":null,"attributes":[{"value":"/ All pending output is flushed to the output buffer, but the output is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":125285,"byte_end":125358,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ not aligned to a byte boundary.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":125363,"byte_end":125398,"line_start":62,"line_end":62,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":125403,"byte_end":125406,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ All of the input data so far will be available to the decompressor (as","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":125411,"byte_end":125485,"line_start":64,"line_end":64,"column_start":5,"column_end":79}},{"value":"/ with `Flush::Sync`. This completes the current deflate block and follows","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":125490,"byte_end":125566,"line_start":65,"line_end":65,"column_start":5,"column_end":81}},{"value":"/ it with an empty fixed codes block that is 10 bites long, and it assures","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":125571,"byte_end":125647,"line_start":66,"line_end":66,"column_start":5,"column_end":81}},{"value":"/ that enough bytes are output in order for the decompressor to finish the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":125652,"byte_end":125728,"line_start":67,"line_end":67,"column_start":5,"column_end":81}},{"value":"/ block before the empty fixed code block.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":125733,"byte_end":125777,"line_start":68,"line_end":68,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1470},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":126133,"byte_end":126137,"line_start":76,"line_end":76,"column_start":5,"column_end":9},"name":"Full","qualname":"::mem::FlushCompress::Full","value":"FlushCompress::Full","parent":{"krate":0,"index":1460},"children":[],"decl_id":null,"docs":" All output is flushed as with `Flush::Sync` and the compression state is\n reset so decompression can restart from this point if previous\n compressed data has been damaged or if random access is desired.","sig":null,"attributes":[{"value":"/ All output is flushed as with `Flush::Sync` and the compression state is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":125829,"byte_end":125905,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ reset so decompression can restart from this point if previous","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":125910,"byte_end":125976,"line_start":72,"line_end":72,"column_start":5,"column_end":71}},{"value":"/ compressed data has been damaged or if random access is desired.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":125981,"byte_end":126049,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":126054,"byte_end":126057,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Using this option too often can seriously degrade compression.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":126062,"byte_end":126128,"line_start":75,"line_end":75,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1473},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":126365,"byte_end":126371,"line_start":82,"line_end":82,"column_start":5,"column_end":11},"name":"Finish","qualname":"::mem::FlushCompress::Finish","value":"FlushCompress::Finish","parent":{"krate":0,"index":1460},"children":[],"decl_id":null,"docs":" Pending input is processed and pending output is flushed.","sig":null,"attributes":[{"value":"/ Pending input is processed and pending output is flushed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":126174,"byte_end":126235,"line_start":78,"line_end":78,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":126240,"byte_end":126243,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ The return value may indicate that the stream is not yet done and more","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":126248,"byte_end":126322,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ data has yet to be processed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":126327,"byte_end":126360,"line_start":81,"line_end":81,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1476},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":126423,"byte_end":126437,"line_start":85,"line_end":85,"column_start":5,"column_end":19},"name":"_Nonexhaustive","qualname":"::mem::FlushCompress::_Nonexhaustive","value":"FlushCompress::_Nonexhaustive","parent":{"krate":0,"index":1460},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1460},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":124535,"byte_end":124548,"line_start":46,"line_end":46,"column_start":10,"column_end":23},"name":"FlushCompress","qualname":"::mem::FlushCompress","value":"pub enum FlushCompress {\n    None = ,\n    Sync = ,\n    Partial = ,\n    Full = ,\n    Finish = ,\n    _Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":1461},{"krate":0,"index":1464},{"krate":0,"index":1467},{"krate":0,"index":1470},{"krate":0,"index":1473},{"krate":0,"index":1476}],"decl_id":null,"docs":" Values which indicate the form of flushing to be used when compressing\n in-memory data.\n","sig":null,"attributes":[{"value":"/ Values which indicate the form of flushing to be used when compressing","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":124431,"byte_end":124505,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ in-memory data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":124506,"byte_end":124525,"line_start":45,"line_end":45,"column_start":1,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1490},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":126849,"byte_end":126853,"line_start":95,"line_end":95,"column_start":5,"column_end":9},"name":"None","qualname":"::mem::FlushDecompress::None","value":"FlushDecompress::None","parent":{"krate":0,"index":1489},"children":[],"decl_id":null,"docs":" A typical parameter for passing to compression/decompression functions,\n this indicates that the underlying stream to decide how much data to\n accumulate before producing output in order to maximize compression.\n","sig":null,"attributes":[{"value":"/ A typical parameter for passing to compression/decompression functions,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":126615,"byte_end":126690,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ this indicates that the underlying stream to decide how much data to","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":126695,"byte_end":126767,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ accumulate before producing output in order to maximize compression.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":126772,"byte_end":126844,"line_start":94,"line_end":94,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1493},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":127304,"byte_end":127308,"line_start":104,"line_end":104,"column_start":5,"column_end":9},"name":"Sync","qualname":"::mem::FlushDecompress::Sync","value":"FlushDecompress::Sync","parent":{"krate":0,"index":1489},"children":[],"decl_id":null,"docs":" All pending output is flushed to the output buffer and the output is\n aligned on a byte boundary so that the decompressor can get all input\n data available so far.","sig":null,"attributes":[{"value":"/ All pending output is flushed to the output buffer and the output is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":126888,"byte_end":126960,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/ aligned on a byte boundary so that the decompressor can get all input","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":126965,"byte_end":127038,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ data available so far.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":127043,"byte_end":127069,"line_start":99,"line_end":99,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":127074,"byte_end":127077,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Flushing may degrade compression for some compression algorithms and so","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":127082,"byte_end":127157,"line_start":101,"line_end":101,"column_start":5,"column_end":80}},{"value":"/ it should only be used when necessary. This will complete the current","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":127162,"byte_end":127235,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/ deflate block and follow it with an empty stored block.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":127240,"byte_end":127299,"line_start":103,"line_end":103,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1496},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":127536,"byte_end":127542,"line_start":110,"line_end":110,"column_start":5,"column_end":11},"name":"Finish","qualname":"::mem::FlushDecompress::Finish","value":"FlushDecompress::Finish","parent":{"krate":0,"index":1489},"children":[],"decl_id":null,"docs":" Pending input is processed and pending output is flushed.","sig":null,"attributes":[{"value":"/ Pending input is processed and pending output is flushed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":127345,"byte_end":127406,"line_start":106,"line_end":106,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":127411,"byte_end":127414,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ The return value may indicate that the stream is not yet done and more","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":127419,"byte_end":127493,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ data has yet to be processed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":127498,"byte_end":127531,"line_start":109,"line_end":109,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1499},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":127594,"byte_end":127608,"line_start":113,"line_end":113,"column_start":5,"column_end":19},"name":"_Nonexhaustive","qualname":"::mem::FlushDecompress::_Nonexhaustive","value":"FlushDecompress::_Nonexhaustive","parent":{"krate":0,"index":1489},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1489},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":126593,"byte_end":126608,"line_start":91,"line_end":91,"column_start":10,"column_end":25},"name":"FlushDecompress","qualname":"::mem::FlushDecompress","value":"pub enum FlushDecompress { None = , Sync = , Finish = , _Nonexhaustive, }","parent":null,"children":[{"krate":0,"index":1490},{"krate":0,"index":1493},{"krate":0,"index":1496},{"krate":0,"index":1499}],"decl_id":null,"docs":" Values which indicate the form of flushing to be used when\n decompressing in-memory data.\n","sig":null,"attributes":[{"value":"/ Values which indicate the form of flushing to be used when","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":126487,"byte_end":126549,"line_start":89,"line_end":89,"column_start":1,"column_end":63}},{"value":"/ decompressing in-memory data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":126550,"byte_end":126583,"line_start":90,"line_end":90,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1520},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":127940,"byte_end":127955,"line_start":126,"line_end":126,"column_start":12,"column_end":27},"name":"DecompressError","qualname":"::mem::DecompressError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned when a decompression object finds that the input stream of\n bytes was not a valid input stream of bytes.\n","sig":null,"attributes":[{"value":"/ Error returned when a decompression object finds that the input stream of","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":127785,"byte_end":127862,"line_start":123,"line_end":123,"column_start":1,"column_end":78}},{"value":"/ bytes was not a valid input stream of bytes.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":127863,"byte_end":127911,"line_start":124,"line_end":124,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":128202,"byte_end":128218,"line_start":133,"line_end":133,"column_start":12,"column_end":28},"name":"needs_dictionary","qualname":"<DecompressError>::needs_dictionary","value":"pub fn needs_dictionary(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether decompression failed due to requiring a dictionary.","sig":null,"attributes":[{"value":"/ Indicates whether decompression failed due to requiring a dictionary.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":128018,"byte_end":128091,"line_start":129,"line_end":129,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":128096,"byte_end":128099,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ The resulting integer is the Adler-32 checksum of the dictionary","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":128104,"byte_end":128172,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ required.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":128177,"byte_end":128190,"line_start":132,"line_end":132,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1525},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":128855,"byte_end":128868,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"CompressError","qualname":"::mem::CompressError","value":"CompressError {  }","parent":null,"children":[{"krate":0,"index":1526}],"decl_id":null,"docs":" Error returned when a compression object is used incorrectly or otherwise\n generates an error.\n","sig":null,"attributes":[{"value":"/ Error returned when a compression object is used incorrectly or otherwise","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":128725,"byte_end":128802,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/ generates an error.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":128803,"byte_end":128826,"line_start":154,"line_end":154,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1530},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":129384,"byte_end":129386,"line_start":173,"line_end":173,"column_start":5,"column_end":7},"name":"Ok","qualname":"::mem::Status::Ok","value":"Status::Ok","parent":{"krate":0,"index":1529},"children":[],"decl_id":null,"docs":" Indicates success.","sig":null,"attributes":[{"value":"/ Indicates success.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":129205,"byte_end":129227,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":129232,"byte_end":129235,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Means that more input may be needed but isn't available","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":129240,"byte_end":129299,"line_start":171,"line_end":171,"column_start":5,"column_end":64}},{"value":"/ and/or there's more output to be written but the output buffer is full.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":129304,"byte_end":129379,"line_start":172,"line_end":172,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1532},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":129865,"byte_end":129873,"line_start":184,"line_end":184,"column_start":5,"column_end":13},"name":"BufError","qualname":"::mem::Status::BufError","value":"Status::BufError","parent":{"krate":0,"index":1529},"children":[],"decl_id":null,"docs":" Indicates that forward progress is not possible due to input or output\n buffers being empty.","sig":null,"attributes":[{"value":"/ Indicates that forward progress is not possible due to input or output","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":129393,"byte_end":129467,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/ buffers being empty.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":129472,"byte_end":129496,"line_start":176,"line_end":176,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":129501,"byte_end":129504,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ For compression it means the input buffer needs some more data or the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":129509,"byte_end":129582,"line_start":178,"line_end":178,"column_start":5,"column_end":78}},{"value":"/ output buffer needs to be freed up before trying again.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":129587,"byte_end":129646,"line_start":179,"line_end":179,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":129651,"byte_end":129654,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ For decompression this means that more input is needed to continue or","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":129659,"byte_end":129732,"line_start":181,"line_end":181,"column_start":5,"column_end":78}},{"value":"/ the output buffer isn't large enough to contain the result. The function","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":129737,"byte_end":129813,"line_start":182,"line_end":182,"column_start":5,"column_end":81}},{"value":"/ can be called again after fixing both.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":129818,"byte_end":129860,"line_start":183,"line_end":183,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1534},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":130155,"byte_end":130164,"line_start":191,"line_end":191,"column_start":5,"column_end":14},"name":"StreamEnd","qualname":"::mem::Status::StreamEnd","value":"Status::StreamEnd","parent":{"krate":0,"index":1529},"children":[],"decl_id":null,"docs":" Indicates that all input has been consumed and all output bytes have\n been written. Decompression/compression should not be called again.","sig":null,"attributes":[{"value":"/ Indicates that all input has been consumed and all output bytes have","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":129880,"byte_end":129952,"line_start":186,"line_end":186,"column_start":5,"column_end":77}},{"value":"/ been written. Decompression/compression should not be called again.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":129957,"byte_end":130028,"line_start":187,"line_end":187,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":130033,"byte_end":130036,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ For decompression with zlib streams the adler-32 of the decompressed","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":130041,"byte_end":130113,"line_start":189,"line_end":189,"column_start":5,"column_end":77}},{"value":"/ data has also been verified.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":130118,"byte_end":130150,"line_start":190,"line_end":190,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":129192,"byte_end":129198,"line_start":168,"line_end":168,"column_start":10,"column_end":16},"name":"Status","qualname":"::mem::Status","value":"pub enum Status { Ok, BufError, StreamEnd, }","parent":null,"children":[{"krate":0,"index":1530},{"krate":0,"index":1532},{"krate":0,"index":1534}],"decl_id":null,"docs":" Possible status results of compressing some data or successfully\n decompressing a block of data.\n","sig":null,"attributes":[{"value":"/ Possible status results of compressing some data or successfully","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":129034,"byte_end":129102,"line_start":165,"line_end":165,"column_start":1,"column_end":69}},{"value":"/ decompressing a block of data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":129103,"byte_end":129137,"line_start":166,"line_end":166,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":130488,"byte_end":130491,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"new","qualname":"<Compress>::new","value":"pub fn new(Compression, bool) -> Compress","parent":null,"children":[],"decl_id":null,"docs":" Creates a new object ready for compressing data that it's given.","sig":null,"attributes":[{"value":"/ Creates a new object ready for compressing data that it's given.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":130189,"byte_end":130257,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":130262,"byte_end":130265,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ The `level` argument here indicates what level of compression is going","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":130270,"byte_end":130344,"line_start":197,"line_end":197,"column_start":5,"column_end":79}},{"value":"/ to be performed, and the `zlib_header` argument indicates whether the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":130349,"byte_end":130422,"line_start":198,"line_end":198,"column_start":5,"column_end":78}},{"value":"/ output data should have a zlib header or not.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":130427,"byte_end":130476,"line_start":199,"line_end":199,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":131453,"byte_end":131473,"line_start":224,"line_end":224,"column_start":12,"column_end":32},"name":"new_with_window_bits","qualname":"<Compress>::new_with_window_bits","value":"pub fn new_with_window_bits(Compression, bool, u8) -> Compress","parent":null,"children":[],"decl_id":null,"docs":" Creates a new object ready for compressing data that it's given.","sig":null,"attributes":[{"value":"/ Creates a new object ready for compressing data that it's given.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":130674,"byte_end":130742,"line_start":206,"line_end":206,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":130747,"byte_end":130750,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The `level` argument here indicates what level of compression is going","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":130755,"byte_end":130829,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ to be performed, and the `zlib_header` argument indicates whether the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":130834,"byte_end":130907,"line_start":209,"line_end":209,"column_start":5,"column_end":78}},{"value":"/ output data should have a zlib header or not. The `window_bits` parameter","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":130912,"byte_end":130989,"line_start":210,"line_end":210,"column_start":5,"column_end":82}},{"value":"/ indicates the base-2 logarithm of the sliding window size and must be","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":130994,"byte_end":131067,"line_start":211,"line_end":211,"column_start":5,"column_end":78}},{"value":"/ between 9 and 15.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":131072,"byte_end":131093,"line_start":212,"line_end":212,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":131098,"byte_end":131101,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":131106,"byte_end":131118,"line_start":214,"line_end":214,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":131123,"byte_end":131126,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If `window_bits` does not fall into the range 9 ..= 15,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":131131,"byte_end":131190,"line_start":216,"line_end":216,"column_start":5,"column_end":64}},{"value":"/ `new_with_window_bits` will panic.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":131195,"byte_end":131233,"line_start":217,"line_end":217,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":131238,"byte_end":131241,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":131246,"byte_end":131256,"line_start":219,"line_end":219,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":131261,"byte_end":131264,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This constructor is only available when the `zlib` feature is used.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":131269,"byte_end":131340,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"/ Other backends currently do not support custom window bits.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":131345,"byte_end":131408,"line_start":222,"line_end":222,"column_start":5,"column_end":68}},{"value":"cfg(feature = \"any_zlib\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":131413,"byte_end":131441,"line_start":223,"line_end":223,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":132475,"byte_end":132483,"line_start":256,"line_end":256,"column_start":12,"column_end":20},"name":"new_gzip","qualname":"<Compress>::new_gzip","value":"pub fn new_gzip(Compression, u8) -> Compress","parent":null,"children":[],"decl_id":null,"docs":" Creates a new object ready for compressing data that it's given.","sig":null,"attributes":[{"value":"/ Creates a new object ready for compressing data that it's given.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":131809,"byte_end":131877,"line_start":238,"line_end":238,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":131882,"byte_end":131885,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ The `level` argument here indicates what level of compression is going","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":131890,"byte_end":131964,"line_start":240,"line_end":240,"column_start":5,"column_end":79}},{"value":"/ to be performed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":131969,"byte_end":131989,"line_start":241,"line_end":241,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":131994,"byte_end":131997,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ The Compress object produced by this constructor outputs gzip headers","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":132002,"byte_end":132075,"line_start":243,"line_end":243,"column_start":5,"column_end":78}},{"value":"/ for the compressed data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":132080,"byte_end":132108,"line_start":244,"line_end":244,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":132113,"byte_end":132116,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":132121,"byte_end":132133,"line_start":246,"line_end":246,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":132138,"byte_end":132141,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ If `window_bits` does not fall into the range 9 ..= 15,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":132146,"byte_end":132205,"line_start":248,"line_end":248,"column_start":5,"column_end":64}},{"value":"/ `new_with_window_bits` will panic.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":132210,"byte_end":132248,"line_start":249,"line_end":249,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":132253,"byte_end":132256,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":132261,"byte_end":132271,"line_start":251,"line_end":251,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":132276,"byte_end":132279,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ This constructor is only available when the `zlib` feature is used.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":132284,"byte_end":132355,"line_start":253,"line_end":253,"column_start":5,"column_end":76}},{"value":"/ Other backends currently do not support gzip headers for Compress.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":132360,"byte_end":132430,"line_start":254,"line_end":254,"column_start":5,"column_end":75}},{"value":"cfg(feature = \"any_zlib\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":132435,"byte_end":132463,"line_start":255,"line_end":255,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":132884,"byte_end":132892,"line_start":268,"line_end":268,"column_start":12,"column_end":20},"name":"total_in","qualname":"<Compress>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of input bytes which have been processed by\n this compression object.\n","sig":null,"attributes":[{"value":"/ Returns the total number of input bytes which have been processed by","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":132767,"byte_end":132839,"line_start":266,"line_end":266,"column_start":5,"column_end":77}},{"value":"/ this compression object.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":132844,"byte_end":132872,"line_start":267,"line_end":267,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":133067,"byte_end":133076,"line_start":274,"line_end":274,"column_start":12,"column_end":21},"name":"total_out","qualname":"<Compress>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of output bytes which have been produced by\n this compression object.\n","sig":null,"attributes":[{"value":"/ Returns the total number of output bytes which have been produced by","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":132950,"byte_end":133022,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ this compression object.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":133027,"byte_end":133055,"line_start":273,"line_end":273,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":133293,"byte_end":133307,"line_start":282,"line_end":282,"column_start":12,"column_end":26},"name":"set_dictionary","qualname":"<Compress>::set_dictionary","value":"pub fn set_dictionary(&mut Self, &[u8]) -> Result<u32, CompressError>","parent":null,"children":[],"decl_id":null,"docs":" Specifies the compression dictionary to use.","sig":null,"attributes":[{"value":"/ Specifies the compression dictionary to use.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":133135,"byte_end":133183,"line_start":278,"line_end":278,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":133188,"byte_end":133191,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Returns the Adler-32 checksum of the dictionary.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":133196,"byte_end":133248,"line_start":280,"line_end":280,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"any_zlib\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":133253,"byte_end":133281,"line_start":281,"line_end":281,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":134070,"byte_end":134075,"line_start":300,"line_end":300,"column_start":12,"column_end":17},"name":"reset","qualname":"<Compress>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Quickly resets this compressor without having to reallocate anything.","sig":null,"attributes":[{"value":"/ Quickly resets this compressor without having to reallocate anything.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":133897,"byte_end":133970,"line_start":297,"line_end":297,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":133975,"byte_end":133978,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to dropping this object and then creating a new one.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":133983,"byte_end":134058,"line_start":299,"line_end":299,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":134714,"byte_end":134723,"line_start":315,"line_end":315,"column_start":12,"column_end":21},"name":"set_level","qualname":"<Compress>::set_level","value":"pub fn set_level(&mut Self, Compression) -> Result<(), CompressError>","parent":null,"children":[],"decl_id":null,"docs":" Dynamically updates the compression level.","sig":null,"attributes":[{"value":"/ Dynamically updates the compression level.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":134128,"byte_end":134174,"line_start":304,"line_end":304,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":134179,"byte_end":134182,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ This can be used to switch between compression levels for different","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":134187,"byte_end":134258,"line_start":306,"line_end":306,"column_start":5,"column_end":76}},{"value":"/ kinds of data, or it can be used in conjunction with a call to reset","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":134263,"byte_end":134335,"line_start":307,"line_end":307,"column_start":5,"column_end":77}},{"value":"/ to reuse the compressor.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":134340,"byte_end":134368,"line_start":308,"line_end":308,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":134373,"byte_end":134376,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This may return an error if there wasn't enough output space to complete","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":134381,"byte_end":134457,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ the compression of the available input data before changing the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":134462,"byte_end":134529,"line_start":311,"line_end":311,"column_start":5,"column_end":72}},{"value":"/ compression level. Flushing the stream before calling this method","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":134534,"byte_end":134603,"line_start":312,"line_end":312,"column_start":5,"column_end":74}},{"value":"/ ensures that the function will succeed on the first call.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":134608,"byte_end":134669,"line_start":313,"line_end":313,"column_start":5,"column_end":66}},{"value":"cfg(feature = \"any_zlib\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":134674,"byte_end":134702,"line_start":314,"line_end":314,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":135628,"byte_end":135636,"line_start":336,"line_end":336,"column_start":12,"column_end":20},"name":"compress","qualname":"<Compress>::compress","value":"pub fn compress(&mut Self, &[u8], &mut [u8], FlushCompress)\n-> Result<Status, CompressError>","parent":null,"children":[],"decl_id":null,"docs":" Compresses the input data into the output, consuming only as much\n input as needed and writing as much output as possible.","sig":null,"attributes":[{"value":"/ Compresses the input data into the output, consuming only as much","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":135227,"byte_end":135296,"line_start":329,"line_end":329,"column_start":5,"column_end":74}},{"value":"/ input as needed and writing as much output as possible.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":135301,"byte_end":135360,"line_start":330,"line_end":330,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":135365,"byte_end":135368,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ The flush option can be any of the available `FlushCompress` parameters.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":135373,"byte_end":135449,"line_start":332,"line_end":332,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":135454,"byte_end":135457,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ To learn how much data was consumed or how much output was produced, use","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":135462,"byte_end":135538,"line_start":334,"line_end":334,"column_start":5,"column_end":81}},{"value":"/ the `total_in` and `total_out` functions before/after this is called.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":135543,"byte_end":135616,"line_start":335,"line_end":335,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":136337,"byte_end":136349,"line_start":353,"line_end":353,"column_start":12,"column_end":24},"name":"compress_vec","qualname":"<Compress>::compress_vec","value":"pub fn compress_vec(&mut Self, &[u8], &mut Vec<u8>, FlushCompress)\n-> Result<Status, CompressError>","parent":null,"children":[],"decl_id":null,"docs":" Compresses the input data into the extra space of the output, consuming\n only as much input as needed and writing as much output as possible.","sig":null,"attributes":[{"value":"/ Compresses the input data into the extra space of the output, consuming","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":135838,"byte_end":135913,"line_start":345,"line_end":345,"column_start":5,"column_end":80}},{"value":"/ only as much input as needed and writing as much output as possible.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":135918,"byte_end":135990,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":135995,"byte_end":135998,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ This function has the same semantics as `compress`, except that the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":136003,"byte_end":136074,"line_start":348,"line_end":348,"column_start":5,"column_end":76}},{"value":"/ length of `vec` is managed by this function. This will not reallocate","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":136079,"byte_end":136152,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ the vector provided or attempt to grow it, so space for the output must","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":136157,"byte_end":136232,"line_start":350,"line_end":350,"column_start":5,"column_end":80}},{"value":"/ be reserved in the output vector by the caller before calling this","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":136237,"byte_end":136307,"line_start":351,"line_end":351,"column_start":5,"column_end":75}},{"value":"/ function.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":136312,"byte_end":136325,"line_start":352,"line_end":352,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":137185,"byte_end":137188,"line_start":380,"line_end":380,"column_start":12,"column_end":15},"name":"new","qualname":"<Decompress>::new","value":"pub fn new(bool) -> Decompress","parent":null,"children":[],"decl_id":null,"docs":" Creates a new object ready for decompressing data that it's given.","sig":null,"attributes":[{"value":"/ Creates a new object ready for decompressing data that it's given.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":136977,"byte_end":137047,"line_start":376,"line_end":376,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":137052,"byte_end":137055,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ The `zlib_header` argument indicates whether the input data is expected","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":137060,"byte_end":137135,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ to have a zlib header or not.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":137140,"byte_end":137173,"line_start":379,"line_end":379,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":138028,"byte_end":138048,"line_start":402,"line_end":402,"column_start":12,"column_end":32},"name":"new_with_window_bits","qualname":"<Decompress>::new_with_window_bits","value":"pub fn new_with_window_bits(bool, u8) -> Decompress","parent":null,"children":[],"decl_id":null,"docs":" Creates a new object ready for decompressing data that it's given.","sig":null,"attributes":[{"value":"/ Creates a new object ready for decompressing data that it's given.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":137348,"byte_end":137418,"line_start":386,"line_end":386,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":137423,"byte_end":137426,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ The `zlib_header` argument indicates whether the input data is expected","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":137431,"byte_end":137506,"line_start":388,"line_end":388,"column_start":5,"column_end":80}},{"value":"/ to have a zlib header or not. The `window_bits` parameter indicates the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":137511,"byte_end":137586,"line_start":389,"line_end":389,"column_start":5,"column_end":80}},{"value":"/ base-2 logarithm of the sliding window size and must be between 9 and 15.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":137591,"byte_end":137668,"line_start":390,"line_end":390,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":137673,"byte_end":137676,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":137681,"byte_end":137693,"line_start":392,"line_end":392,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":137698,"byte_end":137701,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ If `window_bits` does not fall into the range 9 ..= 15,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":137706,"byte_end":137765,"line_start":394,"line_end":394,"column_start":5,"column_end":64}},{"value":"/ `new_with_window_bits` will panic.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":137770,"byte_end":137808,"line_start":395,"line_end":395,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":137813,"byte_end":137816,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":137821,"byte_end":137831,"line_start":397,"line_end":397,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":137836,"byte_end":137839,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ This constructor is only available when the `zlib` feature is used.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":137844,"byte_end":137915,"line_start":399,"line_end":399,"column_start":5,"column_end":76}},{"value":"/ Other backends currently do not support custom window bits.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":137920,"byte_end":137983,"line_start":400,"line_end":400,"column_start":5,"column_end":68}},{"value":"cfg(feature = \"any_zlib\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":137988,"byte_end":138016,"line_start":401,"line_end":401,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":138890,"byte_end":138898,"line_start":427,"line_end":427,"column_start":12,"column_end":20},"name":"new_gzip","qualname":"<Decompress>::new_gzip","value":"pub fn new_gzip(u8) -> Decompress","parent":null,"children":[],"decl_id":null,"docs":" Creates a new object ready for decompressing data that it's given.","sig":null,"attributes":[{"value":"/ Creates a new object ready for decompressing data that it's given.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":138330,"byte_end":138400,"line_start":412,"line_end":412,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":138405,"byte_end":138408,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ The Decompress object produced by this constructor expects gzip headers","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":138413,"byte_end":138488,"line_start":414,"line_end":414,"column_start":5,"column_end":80}},{"value":"/ for the compressed data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":138493,"byte_end":138521,"line_start":415,"line_end":415,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":138526,"byte_end":138529,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":138534,"byte_end":138546,"line_start":417,"line_end":417,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":138551,"byte_end":138554,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ If `window_bits` does not fall into the range 9 ..= 15,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":138559,"byte_end":138618,"line_start":419,"line_end":419,"column_start":5,"column_end":64}},{"value":"/ `new_with_window_bits` will panic.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":138623,"byte_end":138661,"line_start":420,"line_end":420,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":138666,"byte_end":138669,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":138674,"byte_end":138684,"line_start":422,"line_end":422,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":138689,"byte_end":138692,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ This constructor is only available when the `zlib` feature is used.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":138697,"byte_end":138768,"line_start":424,"line_end":424,"column_start":5,"column_end":76}},{"value":"/ Other backends currently do not support gzip headers for Decompress.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":138773,"byte_end":138845,"line_start":425,"line_end":425,"column_start":5,"column_end":77}},{"value":"cfg(feature = \"any_zlib\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":138850,"byte_end":138878,"line_start":426,"line_end":426,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":139278,"byte_end":139286,"line_start":439,"line_end":439,"column_start":12,"column_end":20},"name":"total_in","qualname":"<Decompress>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of input bytes which have been processed by\n this decompression object.\n","sig":null,"attributes":[{"value":"/ Returns the total number of input bytes which have been processed by","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":139159,"byte_end":139231,"line_start":437,"line_end":437,"column_start":5,"column_end":77}},{"value":"/ this decompression object.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":139236,"byte_end":139266,"line_start":438,"line_end":438,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":139463,"byte_end":139472,"line_start":445,"line_end":445,"column_start":12,"column_end":21},"name":"total_out","qualname":"<Decompress>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of output bytes which have been produced by\n this decompression object.\n","sig":null,"attributes":[{"value":"/ Returns the total number of output bytes which have been produced by","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":139344,"byte_end":139416,"line_start":443,"line_end":443,"column_start":5,"column_end":77}},{"value":"/ this decompression object.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":139421,"byte_end":139451,"line_start":444,"line_end":444,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":140671,"byte_end":140681,"line_start":471,"line_end":471,"column_start":12,"column_end":22},"name":"decompress","qualname":"<Decompress>::decompress","value":"pub fn decompress(&mut Self, &[u8], &mut [u8], FlushDecompress)\n-> Result<Status, DecompressError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the input data into the output, consuming only as much\n input as needed and writing as much output as possible.","sig":null,"attributes":[{"value":"/ Decompresses the input data into the output, consuming only as much","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":139531,"byte_end":139602,"line_start":449,"line_end":449,"column_start":5,"column_end":76}},{"value":"/ input as needed and writing as much output as possible.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":139607,"byte_end":139666,"line_start":450,"line_end":450,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":139671,"byte_end":139674,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ The flush option can be any of the available `FlushDecompress` parameters.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":139679,"byte_end":139757,"line_start":452,"line_end":452,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":139762,"byte_end":139765,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ If the first call passes `FlushDecompress::Finish` it is assumed that","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":139770,"byte_end":139843,"line_start":454,"line_end":454,"column_start":5,"column_end":78}},{"value":"/ the input and output buffers are both sized large enough to decompress","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":139848,"byte_end":139922,"line_start":455,"line_end":455,"column_start":5,"column_end":79}},{"value":"/ the entire stream in a single call.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":139927,"byte_end":139966,"line_start":456,"line_end":456,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":139971,"byte_end":139974,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ A flush value of `FlushDecompress::Finish` indicates that there are no","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":139979,"byte_end":140053,"line_start":458,"line_end":458,"column_start":5,"column_end":79}},{"value":"/ more source bytes available beside what's already in the input buffer,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":140058,"byte_end":140132,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/ and the output buffer is large enough to hold the rest of the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":140137,"byte_end":140202,"line_start":460,"line_end":460,"column_start":5,"column_end":70}},{"value":"/ decompressed data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":140207,"byte_end":140229,"line_start":461,"line_end":461,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":140234,"byte_end":140237,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ To learn how much data was consumed or how much output was produced, use","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":140242,"byte_end":140318,"line_start":463,"line_end":463,"column_start":5,"column_end":81}},{"value":"/ the `total_in` and `total_out` functions before/after this is called.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":140323,"byte_end":140396,"line_start":464,"line_end":464,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":140401,"byte_end":140404,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":140409,"byte_end":140421,"line_start":466,"line_end":466,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":140426,"byte_end":140429,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ If the input data to this instance of `Decompress` is not a valid","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":140434,"byte_end":140503,"line_start":468,"line_end":468,"column_start":5,"column_end":74}},{"value":"/ zlib/deflate stream then this function may return an instance of","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":140508,"byte_end":140576,"line_start":469,"line_end":469,"column_start":5,"column_end":73}},{"value":"/ `DecompressError` to indicate that the stream of input bytes is corrupted.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":140581,"byte_end":140659,"line_start":470,"line_end":470,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":141605,"byte_end":141619,"line_start":494,"line_end":494,"column_start":12,"column_end":26},"name":"decompress_vec","qualname":"<Decompress>::decompress_vec","value":"pub fn decompress_vec(&mut Self, &[u8], &mut Vec<u8>, FlushDecompress)\n-> Result<Status, DecompressError>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the input data into the extra space in the output vector\n specified by `output`.","sig":null,"attributes":[{"value":"/ Decompresses the input data into the extra space in the output vector","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":140889,"byte_end":140962,"line_start":480,"line_end":480,"column_start":5,"column_end":78}},{"value":"/ specified by `output`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":140967,"byte_end":140993,"line_start":481,"line_end":481,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":140998,"byte_end":141001,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ This function has the same semantics as `decompress`, except that the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":141006,"byte_end":141079,"line_start":483,"line_end":483,"column_start":5,"column_end":78}},{"value":"/ length of `vec` is managed by this function. This will not reallocate","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":141084,"byte_end":141157,"line_start":484,"line_end":484,"column_start":5,"column_end":78}},{"value":"/ the vector provided or attempt to grow it, so space for the output must","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":141162,"byte_end":141237,"line_start":485,"line_end":485,"column_start":5,"column_end":80}},{"value":"/ be reserved in the output vector by the caller before calling this","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":141242,"byte_end":141312,"line_start":486,"line_end":486,"column_start":5,"column_end":75}},{"value":"/ function.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":141317,"byte_end":141330,"line_start":487,"line_end":487,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":141335,"byte_end":141338,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":141343,"byte_end":141355,"line_start":489,"line_end":489,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":141360,"byte_end":141363,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ If the input data to this instance of `Decompress` is not a valid","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":141368,"byte_end":141437,"line_start":491,"line_end":491,"column_start":5,"column_end":74}},{"value":"/ zlib/deflate stream then this function may return an instance of","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":141442,"byte_end":141510,"line_start":492,"line_end":492,"column_start":5,"column_end":73}},{"value":"/ `DecompressError` to indicate that the stream of input bytes is corrupted.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":141515,"byte_end":141593,"line_start":493,"line_end":493,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":142328,"byte_end":142342,"line_start":517,"line_end":517,"column_start":12,"column_end":26},"name":"set_dictionary","qualname":"<Decompress>::set_dictionary","value":"pub fn set_dictionary(&mut Self, &[u8]) -> Result<u32, DecompressError>","parent":null,"children":[],"decl_id":null,"docs":" Specifies the decompression dictionary to use.\n","sig":null,"attributes":[{"value":"/ Specifies the decompression dictionary to use.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":142233,"byte_end":142283,"line_start":515,"line_end":515,"column_start":5,"column_end":55}},{"value":"cfg(feature = \"any_zlib\")","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":142288,"byte_end":142316,"line_start":516,"line_end":516,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":143393,"byte_end":143398,"line_start":541,"line_end":541,"column_start":12,"column_end":17},"name":"reset","qualname":"<Decompress>::reset","value":"pub fn reset(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Performs the equivalent of replacing this decompression state with a\n freshly allocated copy.","sig":null,"attributes":[{"value":"/ Performs the equivalent of replacing this decompression state with a","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":143013,"byte_end":143085,"line_start":533,"line_end":533,"column_start":5,"column_end":77}},{"value":"/ freshly allocated copy.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":143090,"byte_end":143117,"line_start":534,"line_end":534,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":143122,"byte_end":143125,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ This function may not allocate memory, though, and attempts to reuse any","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":143130,"byte_end":143206,"line_start":536,"line_end":536,"column_start":5,"column_end":81}},{"value":"/ previously existing resources.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":143211,"byte_end":143245,"line_start":537,"line_end":537,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":143250,"byte_end":143253,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ The argument provided here indicates whether the reset state will","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":143258,"byte_end":143327,"line_start":539,"line_end":539,"column_start":5,"column_end":74}},{"value":"/ attempt to decode a zlib header first or not.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":143332,"byte_end":143381,"line_start":540,"line_end":540,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":143641,"byte_end":143648,"line_start":550,"line_end":550,"column_start":12,"column_end":19},"name":"message","qualname":"<DecompressError>::message","value":"pub fn message(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the implementation's message about why the operation failed, if one exists.\n","sig":null,"attributes":[{"value":"/ Retrieve the implementation's message about why the operation failed, if one exists.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":143541,"byte_end":143629,"line_start":549,"line_end":549,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":144591,"byte_end":144598,"line_start":581,"line_end":581,"column_start":12,"column_end":19},"name":"message","qualname":"<CompressError>::message","value":"pub fn message(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the implementation's message about why the operation failed, if one exists.\n","sig":null,"attributes":[{"value":"/ Retrieve the implementation's message about why the operation failed, if one exists.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":144491,"byte_end":144579,"line_start":580,"line_end":580,"column_start":5,"column_end":93}}]},{"kind":"Type","id":{"krate":0,"index":955},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zio.rs","byte_start":151961,"byte_end":151966,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Flush","qualname":"::zio::Ops::Flush","value":"type Flush: Flush;","parent":{"krate":0,"index":954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1557},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165674,"byte_end":165685,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"name":"ZlibEncoder","qualname":"::zlib::bufread::ZlibEncoder","value":"ZlibEncoder {  }","parent":null,"children":[{"krate":0,"index":1559},{"krate":0,"index":1560}],"decl_id":null,"docs":" A ZLIB encoder, or compressor.","sig":null,"attributes":[{"value":"/ A ZLIB encoder, or compressor.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":164845,"byte_end":164879,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":164880,"byte_end":164883,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This structure consumes a [`BufRead`] interface, reading uncompressed data","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":164884,"byte_end":164962,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ from the underlying reader, and emitting compressed data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":164963,"byte_end":165024,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165025,"byte_end":165028,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165029,"byte_end":165097,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165098,"byte_end":165101,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165102,"byte_end":165116,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165117,"byte_end":165120,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165121,"byte_end":165128,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165129,"byte_end":165157,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165158,"byte_end":165186,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ use flate2::bufread::ZlibEncoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165187,"byte_end":165224,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/ use std::fs::File;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165225,"byte_end":165247,"line_start":21,"line_end":21,"column_start":1,"column_end":23}},{"value":"/ use std::io::BufReader;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165248,"byte_end":165275,"line_start":22,"line_end":22,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165276,"byte_end":165279,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ // Use a buffered file to compress contents into a Vec<u8>","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165280,"byte_end":165342,"line_start":24,"line_end":24,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165343,"byte_end":165346,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # fn open_hello_world() -> std::io::Result<Vec<u8>> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165347,"byte_end":165404,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/ let f = File::open(\"examples/hello_world.txt\")?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165405,"byte_end":165457,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/ let b = BufReader::new(f);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165458,"byte_end":165488,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ let mut z = ZlibEncoder::new(b, Compression::fast());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165489,"byte_end":165546,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165547,"byte_end":165579,"line_start":30,"line_end":30,"column_start":1,"column_end":33}},{"value":"/ z.read_to_end(&mut buffer)?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165580,"byte_end":165612,"line_start":31,"line_end":31,"column_start":1,"column_end":33}},{"value":"/ # Ok(buffer)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165613,"byte_end":165629,"line_start":32,"line_end":32,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165630,"byte_end":165637,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165638,"byte_end":165645,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165897,"byte_end":165900,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibEncoder<R>>::new","value":"pub fn new(R, crate::Compression) -> ZlibEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder which will read uncompressed data from the given","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165764,"byte_end":165838,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ stream and emit the compressed stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165843,"byte_end":165885,"line_start":43,"line_end":43,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":166552,"byte_end":166557,"line_start":64,"line_end":64,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibEncoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the input","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":166173,"byte_end":166242,"line_start":57,"line_end":57,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":166247,"byte_end":166270,"line_start":58,"line_end":58,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":166275,"byte_end":166278,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function will reset the internal state of this encoder and replace","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":166283,"byte_end":166358,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/ the input stream with the one provided, returning the previous input","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":166363,"byte_end":166435,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ stream. Future data read from this encoder will be the compressed","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":166440,"byte_end":166509,"line_start":62,"line_end":62,"column_start":5,"column_end":74}},{"value":"/ version of `r`'s data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":166514,"byte_end":166540,"line_start":63,"line_end":63,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":166727,"byte_end":166734,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying reader","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":166666,"byte_end":166715,"line_start":69,"line_end":69,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":166979,"byte_end":166986,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":166779,"byte_end":166836,"line_start":74,"line_end":74,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":166841,"byte_end":166844,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":166849,"byte_end":166921,"line_start":76,"line_end":76,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":166926,"byte_end":166967,"line_start":77,"line_end":77,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":167114,"byte_end":167124,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ZlibEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this encoder, returning the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":167043,"byte_end":167102,"line_start":82,"line_end":82,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":167395,"byte_end":167403,"line_start":91,"line_end":91,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibEncoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been read into this compressor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been read into this compressor.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":167166,"byte_end":167239,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":167244,"byte_end":167247,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes read from the underlying object may be accounted","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":167252,"byte_end":167328,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ for, there may still be some active buffering.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":167333,"byte_end":167383,"line_start":90,"line_end":90,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":167637,"byte_end":167646,"line_start":99,"line_end":99,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibEncoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":167460,"byte_end":167525,"line_start":95,"line_end":95,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":167530,"byte_end":167533,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been read yet, some may still be","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":167538,"byte_end":167607,"line_start":97,"line_end":97,"column_start":5,"column_end":74}},{"value":"/ buffered.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":167612,"byte_end":167625,"line_start":98,"line_end":98,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1564},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":169154,"byte_end":169165,"line_start":154,"line_end":154,"column_start":12,"column_end":23},"name":"ZlibDecoder","qualname":"::zlib::bufread::ZlibDecoder","value":"ZlibDecoder {  }","parent":null,"children":[{"krate":0,"index":1566},{"krate":0,"index":1567}],"decl_id":null,"docs":" A ZLIB decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A ZLIB decoder, or decompressor.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168106,"byte_end":168142,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168143,"byte_end":168146,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ This structure consumes a [`BufRead`] interface, reading compressed data","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168147,"byte_end":168223,"line_start":122,"line_end":122,"column_start":1,"column_end":77}},{"value":"/ from the underlying reader, and emitting uncompressed data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168224,"byte_end":168287,"line_start":123,"line_end":123,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168288,"byte_end":168291,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168292,"byte_end":168360,"line_start":125,"line_end":125,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168361,"byte_end":168364,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168365,"byte_end":168379,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168380,"byte_end":168383,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168384,"byte_end":168391,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168392,"byte_end":168420,"line_start":130,"line_end":130,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168421,"byte_end":168437,"line_start":131,"line_end":131,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168438,"byte_end":168468,"line_start":132,"line_end":132,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::ZlibEncoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168469,"byte_end":168506,"line_start":133,"line_end":133,"column_start":1,"column_end":38}},{"value":"/ use flate2::bufread::ZlibDecoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168507,"byte_end":168544,"line_start":134,"line_end":134,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168545,"byte_end":168548,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168549,"byte_end":168566,"line_start":136,"line_end":136,"column_start":1,"column_end":18}},{"value":"/ # let mut e = ZlibEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168567,"byte_end":168638,"line_start":137,"line_end":137,"column_start":1,"column_end":72}},{"value":"/ # e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168639,"byte_end":168682,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/ # let bytes = e.finish().unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168683,"byte_end":168721,"line_start":139,"line_end":139,"column_start":1,"column_end":39}},{"value":"/ # println!(\"{}\", decode_bufreader(bytes).unwrap());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168722,"byte_end":168777,"line_start":140,"line_end":140,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168778,"byte_end":168785,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168786,"byte_end":168791,"line_start":142,"line_end":142,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Zlib Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168792,"byte_end":168872,"line_start":143,"line_end":143,"column_start":1,"column_end":81}},{"value":"/ // Here &[u8] implements BufRead","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168873,"byte_end":168909,"line_start":144,"line_end":144,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168910,"byte_end":168913,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ fn decode_bufreader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168914,"byte_end":168977,"line_start":146,"line_end":146,"column_start":1,"column_end":64}},{"value":"/     let mut z = ZlibDecoder::new(&bytes[..]);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":168978,"byte_end":169027,"line_start":147,"line_end":147,"column_start":1,"column_end":50}},{"value":"/     let mut s = String::new();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":169028,"byte_end":169062,"line_start":148,"line_end":148,"column_start":1,"column_end":35}},{"value":"/     z.read_to_string(&mut s)?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":169063,"byte_end":169097,"line_start":149,"line_end":149,"column_start":1,"column_end":35}},{"value":"/     Ok(s)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":169098,"byte_end":169111,"line_start":150,"line_end":150,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":169112,"byte_end":169117,"line_start":151,"line_end":151,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":169118,"byte_end":169125,"line_start":152,"line_end":152,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":169346,"byte_end":169349,"line_start":162,"line_end":162,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibDecoder<R>>::new","value":"pub fn new(R) -> ZlibDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder which will decompress data read from the given","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":169246,"byte_end":169318,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":169323,"byte_end":169334,"line_start":161,"line_end":161,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":169979,"byte_end":169984,"line_start":182,"line_end":182,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibDecoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the input","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":169607,"byte_end":169676,"line_start":175,"line_end":175,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":169681,"byte_end":169704,"line_start":176,"line_end":176,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":169709,"byte_end":169712,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":169717,"byte_end":169787,"line_start":178,"line_end":178,"column_start":5,"column_end":75}},{"value":"/ input stream with the one provided, returning the previous input","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":169792,"byte_end":169860,"line_start":179,"line_end":179,"column_start":5,"column_end":73}},{"value":"/ stream. Future data read from this decoder will be the decompressed","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":169865,"byte_end":169936,"line_start":180,"line_end":180,"column_start":5,"column_end":76}},{"value":"/ version of `r`'s data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":169941,"byte_end":169967,"line_start":181,"line_end":181,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":170154,"byte_end":170161,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":170093,"byte_end":170142,"line_start":187,"line_end":187,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":170406,"byte_end":170413,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":170206,"byte_end":170263,"line_start":192,"line_end":192,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":170268,"byte_end":170271,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":170276,"byte_end":170348,"line_start":194,"line_end":194,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":170353,"byte_end":170394,"line_start":195,"line_end":195,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":170541,"byte_end":170551,"line_start":201,"line_end":201,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ZlibDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.\n","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":170470,"byte_end":170529,"line_start":200,"line_end":200,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":170820,"byte_end":170828,"line_start":209,"line_end":209,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibDecoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":170593,"byte_end":170660,"line_start":205,"line_end":205,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":170665,"byte_end":170668,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than what the decompressor","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":170673,"byte_end":170741,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/ actually read from the underlying stream due to buffering.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":170746,"byte_end":170808,"line_start":208,"line_end":208,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":170964,"byte_end":170973,"line_start":214,"line_end":214,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibDecoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has produced.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":170885,"byte_end":170952,"line_start":213,"line_end":213,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1571},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":172338,"byte_end":172349,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"ZlibEncoder","qualname":"::zlib::read::ZlibEncoder","value":"ZlibEncoder {  }","parent":null,"children":[{"krate":0,"index":1573}],"decl_id":null,"docs":" A ZLIB encoder, or compressor.","sig":null,"attributes":[{"value":"/ A ZLIB encoder, or compressor.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":171528,"byte_end":171562,"line_start":7,"line_end":7,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":171563,"byte_end":171566,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Read`] interface and will read uncompressed","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":171567,"byte_end":171644,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ data from an underlying stream and emit a stream of compressed data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":171645,"byte_end":171717,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":171718,"byte_end":171721,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":171722,"byte_end":171784,"line_start":12,"line_end":12,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":171785,"byte_end":171788,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":171789,"byte_end":171803,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":171804,"byte_end":171807,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":171808,"byte_end":171815,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":171816,"byte_end":171844,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":171845,"byte_end":171873,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ use flate2::read::ZlibEncoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":171874,"byte_end":171908,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/ use std::fs::File;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":171909,"byte_end":171931,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":171932,"byte_end":171935,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // Open example file and compress the contents using Read interface","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":171936,"byte_end":172007,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":172008,"byte_end":172011,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # fn open_hello_world() -> std::io::Result<Vec<u8>> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":172012,"byte_end":172069,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/ let f = File::open(\"examples/hello_world.txt\")?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":172070,"byte_end":172122,"line_start":25,"line_end":25,"column_start":1,"column_end":53}},{"value":"/ let mut z = ZlibEncoder::new(f, Compression::fast());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":172123,"byte_end":172180,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/ let mut buffer = [0;50];","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":172181,"byte_end":172209,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ let byte_count = z.read(&mut buffer)?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":172210,"byte_end":172252,"line_start":28,"line_end":28,"column_start":1,"column_end":43}},{"value":"/ # Ok(buffer[0..byte_count].to_vec())","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":172253,"byte_end":172293,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":172294,"byte_end":172301,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":172302,"byte_end":172309,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":172573,"byte_end":172576,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibEncoder<R>>::new","value":"pub fn new(R, crate::Compression) -> ZlibEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will read uncompressed data from the given\n stream and emit the compressed stream.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder which will read uncompressed data from the given","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":172440,"byte_end":172514,"line_start":38,"line_end":38,"column_start":5,"column_end":79}},{"value":"/ stream and emit the compressed stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":172519,"byte_end":172561,"line_start":39,"line_end":39,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":173301,"byte_end":173306,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibEncoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the input","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":172772,"byte_end":172841,"line_start":48,"line_end":48,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":172846,"byte_end":172869,"line_start":49,"line_end":49,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":172874,"byte_end":172877,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This function will reset the internal state of this encoder and replace","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":172882,"byte_end":172957,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ the input stream with the one provided, returning the previous input","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":172962,"byte_end":173034,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"/ stream. Future data read from this encoder will be the compressed","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":173039,"byte_end":173108,"line_start":53,"line_end":53,"column_start":5,"column_end":74}},{"value":"/ version of `r`'s data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":173113,"byte_end":173139,"line_start":54,"line_end":54,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":173144,"byte_end":173147,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that there may be currently buffered data when this function is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":173152,"byte_end":173224,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ called, and in that case the buffered data is discarded.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":173229,"byte_end":173289,"line_start":57,"line_end":57,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":173502,"byte_end":173509,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":173441,"byte_end":173490,"line_start":63,"line_end":63,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":173775,"byte_end":173782,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":173575,"byte_end":173632,"line_start":68,"line_end":68,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":173637,"byte_end":173640,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":173645,"byte_end":173717,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":173722,"byte_end":173763,"line_start":71,"line_end":71,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":174123,"byte_end":174133,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ZlibEncoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this encoder, returning the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":173856,"byte_end":173915,"line_start":76,"line_end":76,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":173920,"byte_end":173923,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Note that there may be buffered bytes which are not re-acquired as part","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":173928,"byte_end":174003,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ of this transition. It's recommended to only call this function after","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":174008,"byte_end":174081,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":174086,"byte_end":174111,"line_start":80,"line_end":80,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":174432,"byte_end":174440,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibEncoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been read into this compressor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been read into this compressor.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":174203,"byte_end":174276,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":174281,"byte_end":174284,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes read from the underlying object may be accounted","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":174289,"byte_end":174365,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ for, there may still be some active buffering.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":174370,"byte_end":174420,"line_start":88,"line_end":88,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":174675,"byte_end":174684,"line_start":97,"line_end":97,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibEncoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":174498,"byte_end":174563,"line_start":93,"line_end":93,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":174568,"byte_end":174571,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been read yet, some may still be","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":174576,"byte_end":174645,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/ buffered.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":174650,"byte_end":174663,"line_start":96,"line_end":96,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1577},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":176154,"byte_end":176165,"line_start":152,"line_end":152,"column_start":12,"column_end":23},"name":"ZlibDecoder","qualname":"::zlib::read::ZlibDecoder","value":"ZlibDecoder {  }","parent":null,"children":[{"krate":0,"index":1579}],"decl_id":null,"docs":" A ZLIB decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A ZLIB decoder, or decompressor.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175114,"byte_end":175150,"line_start":118,"line_end":118,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175151,"byte_end":175154,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Read`] interface and takes a stream of","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175155,"byte_end":175227,"line_start":120,"line_end":120,"column_start":1,"column_end":73}},{"value":"/ compressed data as input, providing the decompressed data when read from.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175228,"byte_end":175305,"line_start":121,"line_end":121,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175306,"byte_end":175309,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175310,"byte_end":175372,"line_start":123,"line_end":123,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175373,"byte_end":175376,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175377,"byte_end":175391,"line_start":125,"line_end":125,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175392,"byte_end":175395,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175396,"byte_end":175403,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175404,"byte_end":175432,"line_start":128,"line_end":128,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175433,"byte_end":175449,"line_start":129,"line_end":129,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175450,"byte_end":175480,"line_start":130,"line_end":130,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::ZlibEncoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175481,"byte_end":175518,"line_start":131,"line_end":131,"column_start":1,"column_end":38}},{"value":"/ use flate2::read::ZlibDecoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175519,"byte_end":175553,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175554,"byte_end":175557,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175558,"byte_end":175575,"line_start":134,"line_end":134,"column_start":1,"column_end":18}},{"value":"/ # let mut e = ZlibEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175576,"byte_end":175647,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"/ # e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175648,"byte_end":175691,"line_start":136,"line_end":136,"column_start":1,"column_end":44}},{"value":"/ # let bytes = e.finish().unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175692,"byte_end":175730,"line_start":137,"line_end":137,"column_start":1,"column_end":39}},{"value":"/ # println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175731,"byte_end":175783,"line_start":138,"line_end":138,"column_start":1,"column_end":53}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175784,"byte_end":175791,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175792,"byte_end":175797,"line_start":140,"line_end":140,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Zlib Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175798,"byte_end":175878,"line_start":141,"line_end":141,"column_start":1,"column_end":81}},{"value":"/ // Here &[u8] implements Read","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175879,"byte_end":175912,"line_start":142,"line_end":142,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175913,"byte_end":175916,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175917,"byte_end":175977,"line_start":144,"line_end":144,"column_start":1,"column_end":61}},{"value":"/     let mut z = ZlibDecoder::new(&bytes[..]);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":175978,"byte_end":176027,"line_start":145,"line_end":145,"column_start":1,"column_end":50}},{"value":"/     let mut s = String::new();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":176028,"byte_end":176062,"line_start":146,"line_end":146,"column_start":1,"column_end":35}},{"value":"/     z.read_to_string(&mut s)?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":176063,"byte_end":176097,"line_start":147,"line_end":147,"column_start":1,"column_end":35}},{"value":"/     Ok(s)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":176098,"byte_end":176111,"line_start":148,"line_end":148,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":176112,"byte_end":176117,"line_start":149,"line_end":149,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":176118,"byte_end":176125,"line_start":150,"line_end":150,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":176356,"byte_end":176359,"line_start":159,"line_end":159,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibDecoder<R>>::new","value":"pub fn new(R) -> ZlibDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will decompress data read from the given\n stream.\n","sig":null,"attributes":[{"value":"/ Creates a new decoder which will decompress data read from the given","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":176256,"byte_end":176328,"line_start":157,"line_end":157,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":176333,"byte_end":176344,"line_start":158,"line_end":158,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":176686,"byte_end":176698,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"new_with_buf","qualname":"<ZlibDecoder<R>>::new_with_buf","value":"pub fn new_with_buf(R, Vec<u8>) -> ZlibDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Same as `new`, but the intermediate buffer for data is specified.","sig":null,"attributes":[{"value":"/ Same as `new`, but the intermediate buffer for data is specified.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":176454,"byte_end":176523,"line_start":163,"line_end":163,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":176528,"byte_end":176531,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Note that the specified buffer will only be used up to its current","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":176536,"byte_end":176606,"line_start":165,"line_end":165,"column_start":5,"column_end":75}},{"value":"/ length. The buffer's capacity will also not grow over time.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":176611,"byte_end":176674,"line_start":166,"line_end":166,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":177406,"byte_end":177411,"line_start":185,"line_end":185,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibDecoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the input\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the input","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":176884,"byte_end":176953,"line_start":175,"line_end":175,"column_start":5,"column_end":74}},{"value":"/ stream for another.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":176958,"byte_end":176981,"line_start":176,"line_end":176,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":176986,"byte_end":176989,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":176994,"byte_end":177064,"line_start":178,"line_end":178,"column_start":5,"column_end":75}},{"value":"/ input stream with the one provided, returning the previous input","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":177069,"byte_end":177137,"line_start":179,"line_end":179,"column_start":5,"column_end":73}},{"value":"/ stream. Future data read from this decoder will be the decompressed","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":177142,"byte_end":177213,"line_start":180,"line_end":180,"column_start":5,"column_end":76}},{"value":"/ version of `r`'s data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":177218,"byte_end":177244,"line_start":181,"line_end":181,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":177249,"byte_end":177252,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Note that there may be currently buffered data when this function is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":177257,"byte_end":177329,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/ called, and in that case the buffered data is discarded.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":177334,"byte_end":177394,"line_start":184,"line_end":184,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":177607,"byte_end":177614,"line_start":191,"line_end":191,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":177546,"byte_end":177595,"line_start":190,"line_end":190,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":177880,"byte_end":177887,"line_start":199,"line_end":199,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":177680,"byte_end":177737,"line_start":195,"line_end":195,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":177742,"byte_end":177745,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":177750,"byte_end":177822,"line_start":197,"line_end":197,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":177827,"byte_end":177868,"line_start":198,"line_end":198,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":178228,"byte_end":178238,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ZlibDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this decoder, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this decoder, returning the underlying reader.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":177961,"byte_end":178020,"line_start":203,"line_end":203,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":178025,"byte_end":178028,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Note that there may be buffered bytes which are not re-acquired as part","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":178033,"byte_end":178108,"line_start":205,"line_end":205,"column_start":5,"column_end":80}},{"value":"/ of this transition. It's recommended to only call this function after","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":178113,"byte_end":178186,"line_start":206,"line_end":206,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":178191,"byte_end":178216,"line_start":207,"line_end":207,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":178535,"byte_end":178543,"line_start":216,"line_end":216,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibDecoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":178308,"byte_end":178375,"line_start":212,"line_end":212,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":178380,"byte_end":178383,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than what the decompressor","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":178388,"byte_end":178456,"line_start":214,"line_end":214,"column_start":5,"column_end":73}},{"value":"/ actually read from the underlying stream due to buffering.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":178461,"byte_end":178523,"line_start":215,"line_end":215,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":178680,"byte_end":178689,"line_start":221,"line_end":221,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibDecoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has produced.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has produced.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":178601,"byte_end":178668,"line_start":220,"line_end":220,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1583},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":179927,"byte_end":179938,"line_start":31,"line_end":31,"column_start":12,"column_end":23},"name":"ZlibEncoder","qualname":"::zlib::write::ZlibEncoder","value":"ZlibEncoder {  }","parent":null,"children":[{"krate":0,"index":1585}],"decl_id":null,"docs":" A ZLIB encoder, or compressor.","sig":null,"attributes":[{"value":"/ A ZLIB encoder, or compressor.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":179212,"byte_end":179246,"line_start":7,"line_end":7,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":179247,"byte_end":179250,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Write`] interface and takes a stream of","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":179251,"byte_end":179324,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ uncompressed data, writing the compressed data to the wrapped writer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":179325,"byte_end":179398,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":179399,"byte_end":179402,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":179403,"byte_end":179467,"line_start":12,"line_end":12,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":179468,"byte_end":179471,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":179472,"byte_end":179486,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":179487,"byte_end":179490,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":179491,"byte_end":179498,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":179499,"byte_end":179527,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/ use flate2::Compression;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":179528,"byte_end":179556,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/ use flate2::write::ZlibEncoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":179557,"byte_end":179592,"line_start":19,"line_end":19,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":179593,"byte_end":179596,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ // Vec<u8> implements Write, assigning the compressed bytes of sample string","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":179597,"byte_end":179677,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":179678,"byte_end":179681,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # fn zlib_encoding() -> std::io::Result<()> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":179682,"byte_end":179731,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/ let mut e = ZlibEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":179732,"byte_end":179801,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/ e.write_all(b\"Hello World\")?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":179802,"byte_end":179835,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ let compressed = e.finish()?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":179836,"byte_end":179869,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":179870,"byte_end":179882,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":179883,"byte_end":179890,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":179891,"byte_end":179898,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":180265,"byte_end":180268,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibEncoder<W>>::new","value":"pub fn new(W, crate::Compression) -> ZlibEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will write compressed data to the stream\n given at the given compression level.","sig":null,"attributes":[{"value":"/ Creates a new encoder which will write compressed data to the stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":180027,"byte_end":180099,"line_start":36,"line_end":36,"column_start":5,"column_end":77}},{"value":"/ given at the given compression level.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":180104,"byte_end":180145,"line_start":37,"line_end":37,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":180150,"byte_end":180153,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ When this encoder is dropped or unwrapped the final pieces of data will","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":180158,"byte_end":180233,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ be flushed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":180238,"byte_end":180253,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":180495,"byte_end":180502,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibEncoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":180433,"byte_end":180483,"line_start":47,"line_end":47,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":180779,"byte_end":180786,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibEncoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":180558,"byte_end":180616,"line_start":52,"line_end":52,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":180621,"byte_end":180624,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":180629,"byte_end":180705,"line_start":54,"line_end":54,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":180710,"byte_end":180767,"line_start":55,"line_end":55,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":181601,"byte_end":181606,"line_start":75,"line_end":75,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibEncoder<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this encoder entirely, swapping out the output\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this encoder entirely, swapping out the output","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":180850,"byte_end":180920,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ stream for another.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":180925,"byte_end":180948,"line_start":61,"line_end":61,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":180953,"byte_end":180956,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function will finish encoding the current stream into the current","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":180961,"byte_end":181035,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ output stream before swapping out the two output streams.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":181040,"byte_end":181101,"line_start":64,"line_end":64,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":181106,"byte_end":181109,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ After the current stream has been finished, this will reset the internal","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":181114,"byte_end":181190,"line_start":66,"line_end":66,"column_start":5,"column_end":81}},{"value":"/ state of this encoder and replace the output stream with the one","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":181195,"byte_end":181263,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ provided, returning the previous output stream. Future data written to","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":181268,"byte_end":181342,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ this encoder will be the compressed into the stream `w` provided.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":181347,"byte_end":181416,"line_start":69,"line_end":69,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":181421,"byte_end":181424,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":181429,"byte_end":181441,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":181446,"byte_end":181449,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":181454,"byte_end":181525,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":181530,"byte_end":181589,"line_start":74,"line_end":74,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":182366,"byte_end":182376,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<ZlibEncoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":181751,"byte_end":181826,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":181831,"byte_end":181834,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":181839,"byte_end":181912,"line_start":83,"line_end":83,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":181917,"byte_end":181993,"line_start":84,"line_end":84,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":181998,"byte_end":182041,"line_start":85,"line_end":85,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":182046,"byte_end":182049,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":182054,"byte_end":182066,"line_start":87,"line_end":87,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":182071,"byte_end":182074,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":182079,"byte_end":182153,"line_start":89,"line_end":89,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":182158,"byte_end":182181,"line_start":90,"line_end":90,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":182186,"byte_end":182189,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":182194,"byte_end":182206,"line_start":92,"line_end":92,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":182211,"byte_end":182214,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":182219,"byte_end":182290,"line_start":94,"line_end":94,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":182295,"byte_end":182354,"line_start":95,"line_end":95,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":183211,"byte_end":183217,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"finish","qualname":"<ZlibEncoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":182447,"byte_end":182501,"line_start":100,"line_end":100,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":182506,"byte_end":182509,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream, close off the compressed","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":182514,"byte_end":182586,"line_start":102,"line_end":102,"column_start":5,"column_end":77}},{"value":"/ stream and, if successful, return the contained writer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":182591,"byte_end":182650,"line_start":103,"line_end":103,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":182655,"byte_end":182658,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":182663,"byte_end":182739,"line_start":105,"line_end":105,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":182744,"byte_end":182819,"line_start":106,"line_end":106,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":182824,"byte_end":182894,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":182899,"byte_end":182972,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":182977,"byte_end":183026,"line_start":109,"line_end":109,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":183031,"byte_end":183034,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":183039,"byte_end":183051,"line_start":111,"line_end":111,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":183056,"byte_end":183059,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":183064,"byte_end":183135,"line_start":113,"line_end":113,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":183140,"byte_end":183199,"line_start":114,"line_end":114,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":183902,"byte_end":183914,"line_start":132,"line_end":132,"column_start":12,"column_end":24},"name":"flush_finish","qualname":"<ZlibEncoder<W>>::flush_finish","value":"pub fn flush_finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":183324,"byte_end":183378,"line_start":120,"line_end":120,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":183383,"byte_end":183386,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream and then return the contained","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":183391,"byte_end":183467,"line_start":122,"line_end":122,"column_start":5,"column_end":81}},{"value":"/ writer if the flush succeeded.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":183472,"byte_end":183506,"line_start":123,"line_end":123,"column_start":5,"column_end":39}},{"value":"/ The compressed stream will not closed but only flushed. This","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":183511,"byte_end":183575,"line_start":124,"line_end":124,"column_start":5,"column_end":69}},{"value":"/ means that obtained byte array can by extended by another deflated","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":183580,"byte_end":183650,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"/ stream. To close the stream add the two bytes 0x3 and 0x0.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":183655,"byte_end":183717,"line_start":126,"line_end":126,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":183722,"byte_end":183725,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":183730,"byte_end":183742,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":183747,"byte_end":183750,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":183755,"byte_end":183826,"line_start":130,"line_end":130,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":183831,"byte_end":183890,"line_start":131,"line_end":131,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":184241,"byte_end":184249,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibEncoder<W>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that have been written to this compressor.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that have been written to this compressor.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":184020,"byte_end":184094,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":184099,"byte_end":184102,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes written to this object may be accounted for,","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":184107,"byte_end":184179,"line_start":139,"line_end":139,"column_start":5,"column_end":77}},{"value":"/ there may still be some active buffering.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":184184,"byte_end":184229,"line_start":140,"line_end":140,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":184492,"byte_end":184501,"line_start":149,"line_end":149,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibEncoder<W>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the compressor has produced.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the compressor has produced.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":184312,"byte_end":184377,"line_start":145,"line_end":145,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":184382,"byte_end":184385,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Note that not all bytes may have been written yet, some may still be","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":184390,"byte_end":184462,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ buffered.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":184467,"byte_end":184480,"line_start":148,"line_end":148,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1589},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":186087,"byte_end":186098,"line_start":206,"line_end":206,"column_start":12,"column_end":23},"name":"ZlibDecoder","qualname":"::zlib::write::ZlibDecoder","value":"ZlibDecoder {  }","parent":null,"children":[{"krate":0,"index":1591}],"decl_id":null,"docs":" A ZLIB decoder, or decompressor.","sig":null,"attributes":[{"value":"/ A ZLIB decoder, or decompressor.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":184933,"byte_end":184969,"line_start":170,"line_end":170,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":184970,"byte_end":184973,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ This structure implements a [`Write`] and will emit a stream of decompressed","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":184974,"byte_end":185054,"line_start":172,"line_end":172,"column_start":1,"column_end":81}},{"value":"/ data when fed a stream of compressed data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185055,"byte_end":185101,"line_start":173,"line_end":173,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185102,"byte_end":185105,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185106,"byte_end":185170,"line_start":175,"line_end":175,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185171,"byte_end":185174,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185175,"byte_end":185189,"line_start":177,"line_end":177,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185190,"byte_end":185193,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185194,"byte_end":185201,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/ use std::io::prelude::*;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185202,"byte_end":185230,"line_start":180,"line_end":180,"column_start":1,"column_end":29}},{"value":"/ use std::io;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185231,"byte_end":185247,"line_start":181,"line_end":181,"column_start":1,"column_end":17}},{"value":"/ # use flate2::Compression;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185248,"byte_end":185278,"line_start":182,"line_end":182,"column_start":1,"column_end":31}},{"value":"/ # use flate2::write::ZlibEncoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185279,"byte_end":185316,"line_start":183,"line_end":183,"column_start":1,"column_end":38}},{"value":"/ use flate2::write::ZlibDecoder;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185317,"byte_end":185352,"line_start":184,"line_end":184,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185353,"byte_end":185356,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185357,"byte_end":185374,"line_start":186,"line_end":186,"column_start":1,"column_end":18}},{"value":"/ #    let mut e = ZlibEncoder::new(Vec::new(), Compression::default());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185375,"byte_end":185449,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"/ #    e.write_all(b\"Hello World\").unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185450,"byte_end":185496,"line_start":188,"line_end":188,"column_start":1,"column_end":47}},{"value":"/ #    let bytes = e.finish().unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185497,"byte_end":185538,"line_start":189,"line_end":189,"column_start":1,"column_end":42}},{"value":"/ #    println!(\"{}\", decode_reader(bytes).unwrap());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185539,"byte_end":185594,"line_start":190,"line_end":190,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185595,"byte_end":185602,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185603,"byte_end":185608,"line_start":192,"line_end":192,"column_start":1,"column_end":6}},{"value":"/ // Uncompresses a Zlib Encoded vector of bytes and returns a string or error","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185609,"byte_end":185689,"line_start":193,"line_end":193,"column_start":1,"column_end":81}},{"value":"/ // Here Vec<u8> implements Write","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185690,"byte_end":185726,"line_start":194,"line_end":194,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185727,"byte_end":185730,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ fn decode_reader(bytes: Vec<u8>) -> io::Result<String> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185731,"byte_end":185791,"line_start":196,"line_end":196,"column_start":1,"column_end":61}},{"value":"/    let mut writer = Vec::new();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185792,"byte_end":185827,"line_start":197,"line_end":197,"column_start":1,"column_end":36}},{"value":"/    let mut z = ZlibDecoder::new(writer);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185828,"byte_end":185872,"line_start":198,"line_end":198,"column_start":1,"column_end":45}},{"value":"/    z.write_all(&bytes[..])?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185873,"byte_end":185905,"line_start":199,"line_end":199,"column_start":1,"column_end":33}},{"value":"/    writer = z.finish()?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185906,"byte_end":185934,"line_start":200,"line_end":200,"column_start":1,"column_end":29}},{"value":"/    let return_string = String::from_utf8(writer).expect(\"String parsing error\");","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":185935,"byte_end":186019,"line_start":201,"line_end":201,"column_start":1,"column_end":85}},{"value":"/    Ok(return_string)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":186020,"byte_end":186044,"line_start":202,"line_end":202,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":186045,"byte_end":186050,"line_start":203,"line_end":203,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":186051,"byte_end":186058,"line_start":204,"line_end":204,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":186384,"byte_end":186387,"line_start":215,"line_end":215,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibDecoder<W>>::new","value":"pub fn new(W) -> ZlibDecoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder which will write uncompressed data to the stream.","sig":null,"attributes":[{"value":"/ Creates a new decoder which will write uncompressed data to the stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":186189,"byte_end":186264,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":186269,"byte_end":186272,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ When this decoder is dropped or unwrapped the final pieces of data will","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":186277,"byte_end":186352,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/ be flushed.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":186357,"byte_end":186372,"line_start":214,"line_end":214,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":186582,"byte_end":186589,"line_start":222,"line_end":222,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ZlibDecoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying writer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":186520,"byte_end":186570,"line_start":221,"line_end":221,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":186866,"byte_end":186873,"line_start":230,"line_end":230,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ZlibDecoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying writer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":186645,"byte_end":186703,"line_start":226,"line_end":226,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":186708,"byte_end":186711,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt this","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":186716,"byte_end":186792,"line_start":228,"line_end":228,"column_start":5,"column_end":81}},{"value":"/ object, so care must be taken when using this method.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":186797,"byte_end":186854,"line_start":229,"line_end":229,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":187487,"byte_end":187492,"line_start":246,"line_end":246,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibDecoder<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the state of this decoder entirely, swapping out the output\n stream for another.","sig":null,"attributes":[{"value":"/ Resets the state of this decoder entirely, swapping out the output","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":186937,"byte_end":187007,"line_start":234,"line_end":234,"column_start":5,"column_end":75}},{"value":"/ stream for another.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":187012,"byte_end":187035,"line_start":235,"line_end":235,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":187040,"byte_end":187043,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ This will reset the internal state of this decoder and replace the","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":187048,"byte_end":187118,"line_start":237,"line_end":237,"column_start":5,"column_end":75}},{"value":"/ output stream with the one provided, returning the previous output","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":187123,"byte_end":187193,"line_start":238,"line_end":238,"column_start":5,"column_end":75}},{"value":"/ stream. Future data written to this decoder will be decompressed into","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":187198,"byte_end":187271,"line_start":239,"line_end":239,"column_start":5,"column_end":78}},{"value":"/ the output stream `w`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":187276,"byte_end":187302,"line_start":240,"line_end":240,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":187307,"byte_end":187310,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":187315,"byte_end":187327,"line_start":242,"line_end":242,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":187332,"byte_end":187335,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":187340,"byte_end":187411,"line_start":244,"line_end":244,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":187416,"byte_end":187475,"line_start":245,"line_end":245,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":188268,"byte_end":188278,"line_start":267,"line_end":267,"column_start":12,"column_end":22},"name":"try_finish","qualname":"<ZlibDecoder<W>>::try_finish","value":"pub fn try_finish(&mut Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to finish this output stream, writing out final chunks of data.","sig":null,"attributes":[{"value":"/ Attempt to finish this output stream, writing out final chunks of data.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":187653,"byte_end":187728,"line_start":252,"line_end":252,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":187733,"byte_end":187736,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ Note that this function can only be used once data has finished being","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":187741,"byte_end":187814,"line_start":254,"line_end":254,"column_start":5,"column_end":78}},{"value":"/ written to the output stream. After this function is called then further","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":187819,"byte_end":187895,"line_start":255,"line_end":255,"column_start":5,"column_end":81}},{"value":"/ calls to `write` may result in a panic.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":187900,"byte_end":187943,"line_start":256,"line_end":256,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":187948,"byte_end":187951,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":187956,"byte_end":187968,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":187973,"byte_end":187976,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ Attempts to write data to this stream may result in a panic after this","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":187981,"byte_end":188055,"line_start":260,"line_end":260,"column_start":5,"column_end":79}},{"value":"/ function is called.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":188060,"byte_end":188083,"line_start":261,"line_end":261,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":188088,"byte_end":188091,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":188096,"byte_end":188108,"line_start":263,"line_end":263,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":188113,"byte_end":188116,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":188121,"byte_end":188192,"line_start":265,"line_end":265,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":188197,"byte_end":188256,"line_start":266,"line_end":266,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":189092,"byte_end":189098,"line_start":286,"line_end":286,"column_start":12,"column_end":18},"name":"finish","qualname":"<ZlibDecoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this encoder, flushing the output stream.","sig":null,"attributes":[{"value":"/ Consumes this encoder, flushing the output stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":188349,"byte_end":188403,"line_start":271,"line_end":271,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":188408,"byte_end":188411,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ This will flush the underlying data stream and then return the contained","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":188416,"byte_end":188492,"line_start":273,"line_end":273,"column_start":5,"column_end":81}},{"value":"/ writer if the flush succeeded.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":188497,"byte_end":188531,"line_start":274,"line_end":274,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":188536,"byte_end":188539,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Note that this function may not be suitable to call in a situation where","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":188544,"byte_end":188620,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ the underlying stream is an asynchronous I/O stream. To finish a stream","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":188625,"byte_end":188700,"line_start":277,"line_end":277,"column_start":5,"column_end":80}},{"value":"/ the `try_finish` (or `shutdown`) method should be used instead. To","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":188705,"byte_end":188775,"line_start":278,"line_end":278,"column_start":5,"column_end":75}},{"value":"/ re-acquire ownership of a stream it is safe to call this method after","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":188780,"byte_end":188853,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ `try_finish` or `shutdown` has returned `Ok`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":188858,"byte_end":188907,"line_start":280,"line_end":280,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":188912,"byte_end":188915,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":188920,"byte_end":188932,"line_start":282,"line_end":282,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":188937,"byte_end":188940,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ This function will perform I/O to complete this stream, and any I/O","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":188945,"byte_end":189016,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ errors which occur will be returned from this function.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":189021,"byte_end":189080,"line_start":285,"line_end":285,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":189460,"byte_end":189468,"line_start":296,"line_end":296,"column_start":12,"column_end":20},"name":"total_in","qualname":"<ZlibDecoder<W>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has consumed for\n decompression.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has consumed for","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":189205,"byte_end":189275,"line_start":291,"line_end":291,"column_start":5,"column_end":75}},{"value":"/ decompression.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":189280,"byte_end":189298,"line_start":292,"line_end":292,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":189303,"byte_end":189306,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ Note that this will likely be smaller than the number of bytes","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":189311,"byte_end":189377,"line_start":294,"line_end":294,"column_start":5,"column_end":71}},{"value":"/ successfully written to this stream due to internal buffering.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":189382,"byte_end":189448,"line_start":295,"line_end":295,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":189638,"byte_end":189647,"line_start":302,"line_end":302,"column_start":12,"column_end":21},"name":"total_out","qualname":"<ZlibDecoder<W>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that the decompressor has written to its\n output stream.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes that the decompressor has written to its","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":189531,"byte_end":189603,"line_start":300,"line_end":300,"column_start":5,"column_end":77}},{"value":"/ output stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":189608,"byte_end":189626,"line_start":301,"line_end":301,"column_start":5,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":1166},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3970,"byte_end":3974,"line_start":99,"line_end":99,"column_start":9,"column_end":13},"name":"read","qualname":"::read","value":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":1170},{"krate":0,"index":1173},{"krate":0,"index":1176},{"krate":0,"index":1179},{"krate":0,"index":1182},{"krate":0,"index":1185}],"decl_id":null,"docs":" Types which operate over [`Read`] streams, both encoders and decoders for\n various formats.","sig":null,"attributes":[{"value":"/ Types which operate over [`Read`] streams, both encoders and decoders for","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3796,"byte_end":3873,"line_start":95,"line_end":95,"column_start":1,"column_end":78}},{"value":"/ various formats.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3874,"byte_end":3894,"line_start":96,"line_end":96,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3895,"byte_end":3898,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":3899,"byte_end":3961,"line_start":98,"line_end":98,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":1188},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":4470,"byte_end":4475,"line_start":113,"line_end":113,"column_start":9,"column_end":14},"name":"write","qualname":"::write","value":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":1192},{"krate":0,"index":1195},{"krate":0,"index":1198},{"krate":0,"index":1201},{"krate":0,"index":1204}],"decl_id":null,"docs":" Types which operate over [`Write`] streams, both encoders and decoders for\n various formats.","sig":null,"attributes":[{"value":"/ Types which operate over [`Write`] streams, both encoders and decoders for","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":4293,"byte_end":4371,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ various formats.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":4372,"byte_end":4392,"line_start":110,"line_end":110,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":4393,"byte_end":4396,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":4397,"byte_end":4461,"line_start":112,"line_end":112,"column_start":1,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":1207},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":4938,"byte_end":4945,"line_start":126,"line_end":126,"column_start":9,"column_end":16},"name":"bufread","qualname":"::bufread","value":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","parent":null,"children":[{"krate":0,"index":1208},{"krate":0,"index":1211},{"krate":0,"index":1214},{"krate":0,"index":1217},{"krate":0,"index":1220},{"krate":0,"index":1223},{"krate":0,"index":1226}],"decl_id":null,"docs":" Types which operate over [`BufRead`] streams, both encoders and decoders for\n various formats.","sig":null,"attributes":[{"value":"/ Types which operate over [`BufRead`] streams, both encoders and decoders for","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":4755,"byte_end":4835,"line_start":122,"line_end":122,"column_start":1,"column_end":81}},{"value":"/ various formats.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":4836,"byte_end":4856,"line_start":123,"line_end":123,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":4857,"byte_end":4860,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ [`BufRead`]: https://doc.rust-lang.org/std/io/trait.BufRead.html","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":4861,"byte_end":4929,"line_start":125,"line_end":125,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1595},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":6225,"byte_end":6236,"line_start":157,"line_end":157,"column_start":12,"column_end":23},"name":"Compression","qualname":"::Compression","value":"","parent":null,"children":[],"decl_id":null,"docs":" When compressing data, the compression level can be specified by a value in\n this enum.\n","sig":null,"attributes":[{"value":"/ When compressing data, the compression level can be specified by a value in","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":6074,"byte_end":6153,"line_start":154,"line_end":154,"column_start":1,"column_end":80}},{"value":"/ this enum.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":6154,"byte_end":6168,"line_start":155,"line_end":155,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":6530,"byte_end":6533,"line_start":165,"line_end":165,"column_start":18,"column_end":21},"name":"new","qualname":"<Compression>::new","value":"pub const fn new(u32) -> Compression","parent":null,"children":[],"decl_id":null,"docs":" Creates a new description of the compression level with an explicitly\n specified integer.","sig":null,"attributes":[{"value":"/ Creates a new description of the compression level with an explicitly","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":6267,"byte_end":6340,"line_start":160,"line_end":160,"column_start":5,"column_end":78}},{"value":"/ specified integer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":6345,"byte_end":6367,"line_start":161,"line_end":161,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":6372,"byte_end":6375,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ The integer here is typically on a scale of 0-9 where 0 means \"no","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":6380,"byte_end":6449,"line_start":163,"line_end":163,"column_start":5,"column_end":74}},{"value":"/ compression\" and 9 means \"take as long as you'd like\".","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":6454,"byte_end":6512,"line_start":164,"line_end":164,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":6720,"byte_end":6724,"line_start":171,"line_end":171,"column_start":18,"column_end":22},"name":"none","qualname":"<Compression>::none","value":"pub const fn none() -> Compression","parent":null,"children":[],"decl_id":null,"docs":" No compression is to be performed, this may actually inflate data\n slightly when encoding.\n","sig":null,"attributes":[{"value":"/ No compression is to be performed, this may actually inflate data","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":6601,"byte_end":6670,"line_start":169,"line_end":169,"column_start":5,"column_end":74}},{"value":"/ slightly when encoding.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":6675,"byte_end":6702,"line_start":170,"line_end":170,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":6840,"byte_end":6844,"line_start":176,"line_end":176,"column_start":18,"column_end":22},"name":"fast","qualname":"<Compression>::fast","value":"pub const fn fast() -> Compression","parent":null,"children":[],"decl_id":null,"docs":" Optimize for the best speed of encoding.\n","sig":null,"attributes":[{"value":"/ Optimize for the best speed of encoding.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":6778,"byte_end":6822,"line_start":175,"line_end":175,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":6964,"byte_end":6968,"line_start":181,"line_end":181,"column_start":18,"column_end":22},"name":"best","qualname":"<Compression>::best","value":"pub const fn best() -> Compression","parent":null,"children":[],"decl_id":null,"docs":" Optimize for the size of data being encoded.\n","sig":null,"attributes":[{"value":"/ Optimize for the size of data being encoded.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":6898,"byte_end":6946,"line_start":180,"line_end":180,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":7128,"byte_end":7133,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"level","qualname":"<Compression>::level","value":"pub fn level(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns an integer representing the compression level, typically on a\n scale of 0-9\n","sig":null,"attributes":[{"value":"/ Returns an integer representing the compression level, typically on a","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":7022,"byte_end":7095,"line_start":185,"line_end":185,"column_start":5,"column_end":78}},{"value":"/ scale of 0-9","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":7100,"byte_end":7116,"line_start":186,"line_end":186,"column_start":5,"column_end":21}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/bufreader.rs","byte_start":8115,"byte_end":8124,"line_start":23,"line_end":23,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/bufreader.rs","byte_start":8510,"byte_end":8519,"line_start":38,"line_end":38,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/bufreader.rs","byte_start":8839,"byte_end":8848,"line_start":53,"line_end":53,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/bufreader.rs","byte_start":9215,"byte_end":9224,"line_start":73,"line_end":73,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/bufreader.rs","byte_start":9765,"byte_end":9774,"line_start":90,"line_end":90,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":10724,"byte_end":10727,"line_start":26,"line_end":26,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":10791,"byte_end":10794,"line_start":32,"line_end":32,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":11812,"byte_end":11821,"line_start":71,"line_end":71,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":11996,"byte_end":12005,"line_start":81,"line_end":81,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":12642,"byte_end":12651,"line_start":108,"line_end":108,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":12855,"byte_end":12864,"line_start":116,"line_end":116,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":13350,"byte_end":13359,"line_start":137,"line_end":137,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":13988,"byte_end":13997,"line_start":164,"line_end":164,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":14189,"byte_end":14198,"line_start":174,"line_end":174,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21791,"byte_end":21805,"line_start":45,"line_end":45,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":22214,"byte_end":22228,"line_start":60,"line_end":60,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":23793,"byte_end":23807,"line_start":108,"line_end":108,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":23973,"byte_end":23987,"line_start":114,"line_end":114,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":25424,"byte_end":25438,"line_start":165,"line_end":165,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":25695,"byte_end":25709,"line_start":176,"line_end":176,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":27414,"byte_end":27428,"line_start":229,"line_end":229,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":27596,"byte_end":27610,"line_start":235,"line_end":235,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28907,"byte_end":28921,"line_start":40,"line_end":40,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":29251,"byte_end":29265,"line_start":50,"line_end":50,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":31267,"byte_end":31281,"line_start":105,"line_end":105,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":31419,"byte_end":31433,"line_start":111,"line_end":111,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":32780,"byte_end":32794,"line_start":157,"line_end":157,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":33411,"byte_end":33425,"line_start":175,"line_end":175,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":35320,"byte_end":35334,"line_start":227,"line_end":227,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":35474,"byte_end":35488,"line_start":233,"line_end":233,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36545,"byte_end":36559,"line_start":34,"line_end":34,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":41200,"byte_end":41214,"line_start":154,"line_end":154,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":41427,"byte_end":41441,"line_start":164,"line_end":164,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":42823,"byte_end":42837,"line_start":208,"line_end":208,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":46531,"byte_end":46545,"line_start":308,"line_end":308,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":46758,"byte_end":46772,"line_start":318,"line_end":318,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":48680,"byte_end":48692,"line_start":17,"line_end":17,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":48840,"byte_end":48853,"line_start":27,"line_end":27,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":48987,"byte_end":49000,"line_start":33,"line_end":33,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":51870,"byte_end":51883,"line_start":113,"line_end":113,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":52003,"byte_end":52016,"line_start":121,"line_end":121,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":52139,"byte_end":52145,"line_start":127,"line_end":127,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":52187,"byte_end":52193,"line_start":128,"line_end":128,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":52661,"byte_end":52667,"line_start":149,"line_end":149,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":52991,"byte_end":52997,"line_start":161,"line_end":161,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":53142,"byte_end":53153,"line_start":169,"line_end":169,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":53270,"byte_end":53283,"line_start":174,"line_end":174,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":53485,"byte_end":53492,"line_start":185,"line_end":185,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":55833,"byte_end":55840,"line_start":253,"line_end":253,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":56110,"byte_end":56117,"line_start":270,"line_end":270,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":58360,"byte_end":58367,"line_start":334,"line_end":334,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/mod.rs","byte_start":48195,"byte_end":48207,"line_start":48,"line_end":48,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":78810,"byte_end":78819,"line_start":175,"line_end":175,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":79847,"byte_end":79856,"line_start":206,"line_end":206,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":80803,"byte_end":80812,"line_start":239,"line_end":239,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":81497,"byte_end":81506,"line_start":263,"line_end":263,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":83160,"byte_end":83175,"line_start":334,"line_end":334,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":84189,"byte_end":84195,"line_start":376,"line_end":376,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":84447,"byte_end":84453,"line_start":387,"line_end":387,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":85752,"byte_end":85758,"line_start":420,"line_end":420,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":86245,"byte_end":86254,"line_start":437,"line_end":437,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":87221,"byte_end":87230,"line_start":472,"line_end":472,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":87991,"byte_end":88000,"line_start":497,"line_end":497,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":92211,"byte_end":92220,"line_start":608,"line_end":608,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93999,"byte_end":94013,"line_start":661,"line_end":661,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":94314,"byte_end":94328,"line_start":670,"line_end":670,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":95042,"byte_end":95056,"line_start":695,"line_end":695,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100950,"byte_end":100959,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":101415,"byte_end":101424,"line_start":57,"line_end":57,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102021,"byte_end":102030,"line_start":77,"line_end":77,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102170,"byte_end":102179,"line_start":83,"line_end":83,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":103472,"byte_end":103481,"line_start":132,"line_end":132,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":103734,"byte_end":103743,"line_start":142,"line_end":142,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":104498,"byte_end":104507,"line_start":167,"line_end":167,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":104647,"byte_end":104656,"line_start":173,"line_end":173,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":106461,"byte_end":106475,"line_start":228,"line_end":228,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":106825,"byte_end":106839,"line_start":239,"line_end":239,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":107600,"byte_end":107614,"line_start":264,"line_end":264,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":107754,"byte_end":107768,"line_start":270,"line_end":270,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":109228,"byte_end":109237,"line_start":50,"line_end":50,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":112439,"byte_end":112448,"line_start":140,"line_end":140,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":112875,"byte_end":112884,"line_start":156,"line_end":156,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113018,"byte_end":113027,"line_start":162,"line_end":162,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":114469,"byte_end":114478,"line_start":212,"line_end":212,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":117972,"byte_end":117979,"line_start":314,"line_end":314,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":118163,"byte_end":118172,"line_start":322,"line_end":322,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":119814,"byte_end":119823,"line_start":370,"line_end":370,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":61677,"byte_end":61685,"line_start":30,"line_end":30,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":815},{"krate":0,"index":817},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":64718,"byte_end":64727,"line_start":120,"line_end":120,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":64791,"byte_end":64800,"line_start":126,"line_end":126,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":830},{"krate":0,"index":832},{"krate":0,"index":834},{"krate":0,"index":836},{"krate":0,"index":838},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":127996,"byte_end":128011,"line_start":128,"line_end":128,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":130174,"byte_end":130182,"line_start":194,"line_end":194,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":901},{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":136960,"byte_end":136970,"line_start":375,"line_end":375,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":143494,"byte_end":143509,"line_start":546,"line_end":546,"column_start":16,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":143519,"byte_end":143534,"line_start":548,"line_end":548,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":143839,"byte_end":143844,"line_start":558,"line_end":558,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":143979,"byte_end":143994,"line_start":564,"line_end":564,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":144448,"byte_end":144461,"line_start":577,"line_end":577,"column_start":16,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":144471,"byte_end":144484,"line_start":579,"line_end":579,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":144689,"byte_end":144694,"line_start":586,"line_end":586,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":144827,"byte_end":144840,"line_start":592,"line_end":592,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zio.rs","byte_start":152361,"byte_end":152369,"line_start":32,"line_end":32,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zio.rs","byte_start":152989,"byte_end":152999,"line_start":58,"line_end":58,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zio.rs","byte_start":153697,"byte_end":153710,"line_start":90,"line_end":90,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zio.rs","byte_start":153911,"byte_end":153926,"line_start":104,"line_end":104,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zio.rs","byte_start":155555,"byte_end":155561,"line_start":161,"line_end":161,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zio.rs","byte_start":158514,"byte_end":158520,"line_start":252,"line_end":252,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1002},{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zio.rs","byte_start":159548,"byte_end":159554,"line_start":282,"line_end":282,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1008}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165743,"byte_end":165754,"line_start":41,"line_end":41,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":166152,"byte_end":166163,"line_start":56,"line_end":56,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":167728,"byte_end":167739,"line_start":104,"line_end":104,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":167905,"byte_end":167916,"line_start":110,"line_end":110,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":169225,"byte_end":169236,"line_start":159,"line_end":159,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":169586,"byte_end":169597,"line_start":174,"line_end":174,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":171055,"byte_end":171066,"line_start":219,"line_end":219,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":171234,"byte_end":171245,"line_start":225,"line_end":225,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1066},{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":172419,"byte_end":172430,"line_start":37,"line_end":37,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":172751,"byte_end":172762,"line_start":47,"line_end":47,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":174764,"byte_end":174775,"line_start":102,"line_end":102,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":174913,"byte_end":174924,"line_start":108,"line_end":108,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":176235,"byte_end":176246,"line_start":156,"line_end":156,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":176863,"byte_end":176874,"line_start":174,"line_end":174,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":178769,"byte_end":178780,"line_start":226,"line_end":226,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":178920,"byte_end":178931,"line_start":232,"line_end":232,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1114},{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":180006,"byte_end":180017,"line_start":35,"line_end":35,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":184588,"byte_end":184599,"line_start":154,"line_end":154,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1144},{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":184812,"byte_end":184823,"line_start":164,"line_end":164,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":186168,"byte_end":186179,"line_start":210,"line_end":210,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":189734,"byte_end":189745,"line_start":307,"line_end":307,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":189958,"byte_end":189969,"line_start":317,"line_end":317,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":6249,"byte_end":6260,"line_start":159,"line_end":159,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":7191,"byte_end":7202,"line_start":192,"line_end":192,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/bufreader.rs","byte_start":8115,"byte_end":8124,"line_start":23,"line_end":23,"column_start":31,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":53},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/bufreader.rs","byte_start":8510,"byte_end":8519,"line_start":38,"line_end":38,"column_start":15,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/bufreader.rs","byte_start":8839,"byte_end":8848,"line_start":53,"line_end":53,"column_start":9,"column_end":18},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/bufreader.rs","byte_start":9215,"byte_end":9224,"line_start":73,"line_end":73,"column_start":24,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":53},"to":{"krate":1,"index":4399}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/bufreader.rs","byte_start":9765,"byte_end":9774,"line_start":90,"line_end":90,"column_start":27,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":53},"to":{"krate":1,"index":4481}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":10724,"byte_end":10727,"line_start":26,"line_end":26,"column_start":18,"column_end":21},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1240},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":10791,"byte_end":10794,"line_start":32,"line_end":32,"column_start":6,"column_end":9},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":11812,"byte_end":11821,"line_start":71,"line_end":71,"column_start":15,"column_end":24},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":11996,"byte_end":12005,"line_start":81,"line_end":81,"column_start":9,"column_end":18},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":12642,"byte_end":12651,"line_start":108,"line_end":108,"column_start":24,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1245},"to":{"krate":1,"index":4399}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":12855,"byte_end":12864,"line_start":116,"line_end":116,"column_start":30,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1245},"to":{"krate":1,"index":4481}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":13350,"byte_end":13359,"line_start":137,"line_end":137,"column_start":9,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":13988,"byte_end":13997,"line_start":164,"line_end":164,"column_start":16,"column_end":25},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/crc.rs","byte_start":14189,"byte_end":14198,"line_start":174,"line_end":174,"column_start":26,"column_end":35},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1252},"to":{"krate":1,"index":4456}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":21791,"byte_end":21805,"line_start":45,"line_end":45,"column_start":18,"column_end":32},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":22214,"byte_end":22228,"line_start":60,"line_end":60,"column_start":9,"column_end":23},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":23793,"byte_end":23807,"line_start":108,"line_end":108,"column_start":27,"column_end":41},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1259},"to":{"krate":1,"index":4399}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":23973,"byte_end":23987,"line_start":114,"line_end":114,"column_start":36,"column_end":50},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1259},"to":{"krate":1,"index":4456}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":25424,"byte_end":25438,"line_start":165,"line_end":165,"column_start":18,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":25695,"byte_end":25709,"line_start":176,"line_end":176,"column_start":9,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":27414,"byte_end":27428,"line_start":229,"line_end":229,"column_start":27,"column_end":41},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1266},"to":{"krate":1,"index":4399}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/bufread.rs","byte_start":27596,"byte_end":27610,"line_start":235,"line_end":235,"column_start":36,"column_end":50},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1266},"to":{"krate":1,"index":4456}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":28907,"byte_end":28921,"line_start":40,"line_end":40,"column_start":15,"column_end":29},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":29251,"byte_end":29265,"line_start":50,"line_end":50,"column_start":9,"column_end":23},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":31267,"byte_end":31281,"line_start":105,"line_end":105,"column_start":24,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1273},"to":{"krate":1,"index":4399}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":31419,"byte_end":31433,"line_start":111,"line_end":111,"column_start":33,"column_end":47},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1273},"to":{"krate":1,"index":4456}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":32780,"byte_end":32794,"line_start":157,"line_end":157,"column_start":15,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":33411,"byte_end":33425,"line_start":175,"line_end":175,"column_start":9,"column_end":23},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":35320,"byte_end":35334,"line_start":227,"line_end":227,"column_start":24,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1279},"to":{"krate":1,"index":4399}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/read.rs","byte_start":35474,"byte_end":35488,"line_start":233,"line_end":233,"column_start":33,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1279},"to":{"krate":1,"index":4456}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":36545,"byte_end":36559,"line_start":34,"line_end":34,"column_start":16,"column_end":30},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":41200,"byte_end":41214,"line_start":154,"line_end":154,"column_start":26,"column_end":40},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1285},"to":{"krate":1,"index":4456}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":41427,"byte_end":41441,"line_start":164,"line_end":164,"column_start":32,"column_end":46},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1285},"to":{"krate":1,"index":4399}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":42823,"byte_end":42837,"line_start":208,"line_end":208,"column_start":16,"column_end":30},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":46531,"byte_end":46545,"line_start":308,"line_end":308,"column_start":26,"column_end":40},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1291},"to":{"krate":1,"index":4456}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/deflate/write.rs","byte_start":46758,"byte_end":46772,"line_start":318,"line_end":318,"column_start":32,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1291},"to":{"krate":1,"index":4399}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/mod.rs","byte_start":47220,"byte_end":47224,"line_start":10,"line_end":10,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":3031},"to":{"krate":0,"index":305}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/mod.rs","byte_start":47227,"byte_end":47231,"line_start":10,"line_end":10,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3019},"to":{"krate":0,"index":305}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/mod.rs","byte_start":47326,"byte_end":47333,"line_start":15,"line_end":15,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":305},"to":{"krate":0,"index":308}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/mod.rs","byte_start":47627,"byte_end":47634,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":305},"to":{"krate":0,"index":312}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":48680,"byte_end":48692,"line_start":17,"line_end":17,"column_start":6,"column_end":18},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":48840,"byte_end":48853,"line_start":27,"line_end":27,"column_start":21,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":48987,"byte_end":49000,"line_start":33,"line_end":33,"column_start":18,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":51870,"byte_end":51883,"line_start":113,"line_end":113,"column_start":16,"column_end":29},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":52003,"byte_end":52016,"line_start":121,"line_end":121,"column_start":19,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":52139,"byte_end":52145,"line_start":127,"line_end":127,"column_start":36,"column_end":42},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1308},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":52187,"byte_end":52193,"line_start":128,"line_end":128,"column_start":36,"column_end":42},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1308},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":52661,"byte_end":52667,"line_start":149,"line_end":149,"column_start":20,"column_end":26},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":52991,"byte_end":52997,"line_start":161,"line_end":161,"column_start":29,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1308},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":53142,"byte_end":53153,"line_start":169,"line_end":169,"column_start":20,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1302},"to":{"krate":0,"index":391}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":53270,"byte_end":53283,"line_start":174,"line_end":174,"column_start":20,"column_end":33},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1305},"to":{"krate":0,"index":391}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":53485,"byte_end":53492,"line_start":185,"line_end":185,"column_start":25,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1317},"to":{"krate":0,"index":308}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":55833,"byte_end":55840,"line_start":253,"line_end":253,"column_start":18,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1317},"to":{"krate":0,"index":305}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":56110,"byte_end":56117,"line_start":270,"line_end":270,"column_start":25,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1321},"to":{"krate":0,"index":312}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/c.rs","byte_start":58360,"byte_end":58367,"line_start":334,"line_end":334,"column_start":18,"column_end":25},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1321},"to":{"krate":0,"index":305}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/ffi/mod.rs","byte_start":48195,"byte_end":48207,"line_start":48,"line_end":48,"column_start":26,"column_end":38},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":9555}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":78810,"byte_end":78819,"line_start":175,"line_end":175,"column_start":18,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":79847,"byte_end":79856,"line_start":206,"line_end":206,"column_start":9,"column_end":18},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":80803,"byte_end":80812,"line_start":239,"line_end":239,"column_start":27,"column_end":36},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1325},"to":{"krate":1,"index":4399}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":81497,"byte_end":81506,"line_start":263,"line_end":263,"column_start":36,"column_end":45},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1325},"to":{"krate":1,"index":4456}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":83160,"byte_end":83175,"line_start":334,"line_end":334,"column_start":6,"column_end":21},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":84189,"byte_end":84195,"line_start":376,"line_end":376,"column_start":13,"column_end":19},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":84447,"byte_end":84453,"line_start":387,"line_end":387,"column_start":28,"column_end":34},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":599},"to":{"krate":1,"index":4399}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":85752,"byte_end":85758,"line_start":420,"line_end":420,"column_start":13,"column_end":19},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":86245,"byte_end":86254,"line_start":437,"line_end":437,"column_start":18,"column_end":27},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":87221,"byte_end":87230,"line_start":472,"line_end":472,"column_start":9,"column_end":18},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":87991,"byte_end":88000,"line_start":497,"line_end":497,"column_start":27,"column_end":36},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1334},"to":{"krate":1,"index":4399}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":92211,"byte_end":92220,"line_start":608,"line_end":608,"column_start":36,"column_end":45},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1334},"to":{"krate":1,"index":4456}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":93999,"byte_end":94013,"line_start":661,"line_end":661,"column_start":18,"column_end":32},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":94314,"byte_end":94328,"line_start":670,"line_end":670,"column_start":9,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/bufread.rs","byte_start":95042,"byte_end":95056,"line_start":695,"line_end":695,"column_start":27,"column_end":41},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1385},"to":{"krate":1,"index":4399}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":100950,"byte_end":100959,"line_start":44,"line_end":44,"column_start":15,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":101415,"byte_end":101424,"line_start":57,"line_end":57,"column_start":9,"column_end":18},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102021,"byte_end":102030,"line_start":77,"line_end":77,"column_start":24,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1392},"to":{"krate":1,"index":4399}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":102170,"byte_end":102179,"line_start":83,"line_end":83,"column_start":33,"column_end":42},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1392},"to":{"krate":1,"index":4456}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":103472,"byte_end":103481,"line_start":132,"line_end":132,"column_start":15,"column_end":24},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":103734,"byte_end":103743,"line_start":142,"line_end":142,"column_start":9,"column_end":18},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":104498,"byte_end":104507,"line_start":167,"line_end":167,"column_start":24,"column_end":33},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1398},"to":{"krate":1,"index":4399}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":104647,"byte_end":104656,"line_start":173,"line_end":173,"column_start":33,"column_end":42},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1398},"to":{"krate":1,"index":4456}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":106461,"byte_end":106475,"line_start":228,"line_end":228,"column_start":15,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":106825,"byte_end":106839,"line_start":239,"line_end":239,"column_start":9,"column_end":23},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":107600,"byte_end":107614,"line_start":264,"line_end":264,"column_start":24,"column_end":38},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1404},"to":{"krate":1,"index":4399}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/read.rs","byte_start":107754,"byte_end":107768,"line_start":270,"line_end":270,"column_start":33,"column_end":47},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1404},"to":{"krate":1,"index":4456}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":109228,"byte_end":109237,"line_start":50,"line_end":50,"column_start":16,"column_end":25},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":112439,"byte_end":112448,"line_start":140,"line_end":140,"column_start":26,"column_end":35},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1410},"to":{"krate":1,"index":4456}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":112875,"byte_end":112884,"line_start":156,"line_end":156,"column_start":32,"column_end":41},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1410},"to":{"krate":1,"index":4399}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":113018,"byte_end":113027,"line_start":162,"line_end":162,"column_start":25,"column_end":34},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1410},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":114469,"byte_end":114478,"line_start":212,"line_end":212,"column_start":16,"column_end":25},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":117972,"byte_end":117979,"line_start":314,"line_end":314,"column_start":24,"column_end":31},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":798},"to":{"krate":1,"index":4399}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":118163,"byte_end":118172,"line_start":322,"line_end":322,"column_start":26,"column_end":35},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1419},"to":{"krate":1,"index":4456}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/write.rs","byte_start":119814,"byte_end":119823,"line_start":370,"line_end":370,"column_start":32,"column_end":41},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1419},"to":{"krate":1,"index":4399}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":61677,"byte_end":61685,"line_start":30,"line_end":30,"column_start":6,"column_end":14},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":64718,"byte_end":64727,"line_start":120,"line_end":120,"column_start":18,"column_end":27},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1444},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/gz/mod.rs","byte_start":64791,"byte_end":64800,"line_start":126,"line_end":126,"column_start":6,"column_end":15},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":127996,"byte_end":128011,"line_start":128,"line_end":128,"column_start":6,"column_end":21},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":130174,"byte_end":130182,"line_start":194,"line_end":194,"column_start":6,"column_end":14},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":136960,"byte_end":136970,"line_start":375,"line_end":375,"column_start":6,"column_end":16},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":143494,"byte_end":143509,"line_start":546,"line_end":546,"column_start":16,"column_end":31},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1520},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":143519,"byte_end":143534,"line_start":548,"line_end":548,"column_start":6,"column_end":21},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":143839,"byte_end":143844,"line_start":558,"line_end":558,"column_start":36,"column_end":41},"kind":{"Impl":{"id":95}},"from":{"krate":1,"index":3816},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":143979,"byte_end":143994,"line_start":564,"line_end":564,"column_start":23,"column_end":38},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1520},"to":{"krate":2,"index":9562}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":144448,"byte_end":144461,"line_start":577,"line_end":577,"column_start":16,"column_end":29},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":144471,"byte_end":144484,"line_start":579,"line_end":579,"column_start":6,"column_end":19},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":144689,"byte_end":144694,"line_start":586,"line_end":586,"column_start":34,"column_end":39},"kind":{"Impl":{"id":99}},"from":{"krate":1,"index":3816},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/mem.rs","byte_start":144827,"byte_end":144840,"line_start":592,"line_end":592,"column_start":23,"column_end":36},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1525},"to":{"krate":2,"index":9562}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zio.rs","byte_start":152361,"byte_end":152369,"line_start":32,"line_end":32,"column_start":14,"column_end":22},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":954}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zio.rs","byte_start":152989,"byte_end":152999,"line_start":58,"line_end":58,"column_start":14,"column_end":24},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1456},"to":{"krate":0,"index":954}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zio.rs","byte_start":153697,"byte_end":153710,"line_start":90,"line_end":90,"column_start":16,"column_end":29},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1460},"to":{"krate":0,"index":972}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zio.rs","byte_start":153911,"byte_end":153926,"line_start":104,"line_end":104,"column_start":16,"column_end":31},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1489},"to":{"krate":0,"index":972}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zio.rs","byte_start":155555,"byte_end":155561,"line_start":161,"line_end":161,"column_start":24,"column_end":30},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zio.rs","byte_start":158514,"byte_end":158520,"line_start":252,"line_end":252,"column_start":34,"column_end":40},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1547},"to":{"krate":1,"index":4456}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zio.rs","byte_start":159548,"byte_end":159554,"line_start":282,"line_end":282,"column_start":33,"column_end":39},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1547},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":165743,"byte_end":165754,"line_start":41,"line_end":41,"column_start":18,"column_end":29},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":166152,"byte_end":166163,"line_start":56,"line_end":56,"column_start":9,"column_end":20},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":167728,"byte_end":167739,"line_start":104,"line_end":104,"column_start":27,"column_end":38},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1557},"to":{"krate":1,"index":4399}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":167905,"byte_end":167916,"line_start":110,"line_end":110,"column_start":36,"column_end":47},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1557},"to":{"krate":1,"index":4456}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":169225,"byte_end":169236,"line_start":159,"line_end":159,"column_start":18,"column_end":29},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":169586,"byte_end":169597,"line_start":174,"line_end":174,"column_start":9,"column_end":20},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":171055,"byte_end":171066,"line_start":219,"line_end":219,"column_start":27,"column_end":38},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1564},"to":{"krate":1,"index":4399}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/bufread.rs","byte_start":171234,"byte_end":171245,"line_start":225,"line_end":225,"column_start":36,"column_end":47},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1564},"to":{"krate":1,"index":4456}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":172419,"byte_end":172430,"line_start":37,"line_end":37,"column_start":15,"column_end":26},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":172751,"byte_end":172762,"line_start":47,"line_end":47,"column_start":9,"column_end":20},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":174764,"byte_end":174775,"line_start":102,"line_end":102,"column_start":24,"column_end":35},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1571},"to":{"krate":1,"index":4399}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":174913,"byte_end":174924,"line_start":108,"line_end":108,"column_start":33,"column_end":44},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1571},"to":{"krate":1,"index":4456}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":176235,"byte_end":176246,"line_start":156,"line_end":156,"column_start":15,"column_end":26},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":176863,"byte_end":176874,"line_start":174,"line_end":174,"column_start":9,"column_end":20},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":178769,"byte_end":178780,"line_start":226,"line_end":226,"column_start":24,"column_end":35},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1577},"to":{"krate":1,"index":4399}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/read.rs","byte_start":178920,"byte_end":178931,"line_start":232,"line_end":232,"column_start":33,"column_end":44},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1577},"to":{"krate":1,"index":4456}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":180006,"byte_end":180017,"line_start":35,"line_end":35,"column_start":16,"column_end":27},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":184588,"byte_end":184599,"line_start":154,"line_end":154,"column_start":26,"column_end":37},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1583},"to":{"krate":1,"index":4456}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":184812,"byte_end":184823,"line_start":164,"line_end":164,"column_start":32,"column_end":43},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1583},"to":{"krate":1,"index":4399}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":186168,"byte_end":186179,"line_start":210,"line_end":210,"column_start":16,"column_end":27},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":189734,"byte_end":189745,"line_start":307,"line_end":307,"column_start":26,"column_end":37},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1589},"to":{"krate":1,"index":4456}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/zlib/write.rs","byte_start":189958,"byte_end":189969,"line_start":317,"line_end":317,"column_start":32,"column_end":43},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1589},"to":{"krate":1,"index":4399}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":6249,"byte_end":6260,"line_start":159,"line_end":159,"column_start":6,"column_end":17},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/flate2-1.0.24/src/lib.rs","byte_start":7191,"byte_end":7202,"line_start":192,"line_end":192,"column_start":18,"column_end":29},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1595},"to":{"krate":2,"index":2997}}]}