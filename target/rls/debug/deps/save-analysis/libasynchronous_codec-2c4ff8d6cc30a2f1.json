{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0","program":"/Users/Polly/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","asynchronous_codec","--edition=2018","/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=2c4ff8d6cc30a2f1","-C","extra-filename=-2c4ff8d6cc30a2f1","--out-dir","/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps","-L","dependency=/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps","--extern","bytes=/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps/libbytes-82f33f27752c4d28.rmeta","--extern","futures_sink=/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps/libfutures_sink-406092b7a7af181e.rmeta","--extern","futures_util=/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps/libfutures_util-f0772c0dd87252ff.rmeta","--extern","memchr=/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps/libmemchr-13302a2cf6b060f0.rmeta","--extern","pin_project_lite=/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps/libpin_project_lite-0850d9e15bde4102.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/Polly/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/Polly/Documents/GitHub/Summer-Project-with-Dr-Mendes/target/rls/debug/deps/libasynchronous_codec-2c4ff8d6cc30a2f1.rmeta"},"prelude":{"crate_id":{"name":"asynchronous_codec","disambiguator":[6987740067560804554,0]},"crate_root":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src","external_crates":[{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8160662364186215271,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[15508592535294299014,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17322933587189210298,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13179528220501159687,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14405461281750379523,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13415789777365414266,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14087240094303311622,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8480099122681864520,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7455356171819553965,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4032517352972638871,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[100442770310914164,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[10836884096018266442,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[8583823352757433821,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16157489773683242703,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[6201654522556613481,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15759299131545182078,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[10203585439616027660,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","num":18,"id":{"name":"bytes","disambiguator":[14808528456276691465,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","num":19,"id":{"name":"serde","disambiguator":[2674988930338937467,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","num":20,"id":{"name":"serde_derive","disambiguator":[5084869341105120970,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/lines.rs","num":21,"id":{"name":"memchr","disambiguator":[15287225856752822126,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","num":22,"id":{"name":"futures_sink","disambiguator":[12075197759302643648,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","num":23,"id":{"name":"futures_util","disambiguator":[10470475124294685923,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","num":24,"id":{"name":"futures_core","disambiguator":[9469155933332540082,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","num":25,"id":{"name":"pin_utils","disambiguator":[2446226106123567817,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","num":26,"id":{"name":"futures_macro","disambiguator":[9237288534452348485,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","num":27,"id":{"name":"futures_task","disambiguator":[18188561179055591678,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","num":28,"id":{"name":"pin_project_lite","disambiguator":[15885804937172283939,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","num":29,"id":{"name":"futures_channel","disambiguator":[10835550237692749810,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","num":30,"id":{"name":"slab","disambiguator":[2518725053203609018,0]}},{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","num":31,"id":{"name":"futures_io","disambiguator":[9815622883913370378,0]}}],"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":0,"byte_end":1303,"line_start":1,"line_end":48,"column_start":1,"column_end":10}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":526},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":806,"byte_end":811,"line_start":25,"line_end":25,"column_start":17,"column_end":22},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":786},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":813,"byte_end":821,"line_start":25,"line_end":25,"column_start":24,"column_end":32},"alias_span":null,"name":"BytesMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":22},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":840,"byte_end":850,"line_start":26,"line_end":26,"column_start":17,"column_end":27},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":23},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":840,"byte_end":850,"line_start":26,"line_end":26,"column_start":17,"column_end":27},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":60},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":852,"byte_end":863,"line_start":26,"line_end":26,"column_start":29,"column_end":40},"alias_span":null,"name":"LengthCodec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":61},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":852,"byte_end":863,"line_start":26,"line_end":26,"column_start":29,"column_end":40},"alias_span":null,"name":"LengthCodec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":99},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":865,"byte_end":875,"line_start":26,"line_end":26,"column_start":42,"column_end":52},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":865,"byte_end":875,"line_start":26,"line_end":26,"column_start":42,"column_end":52},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":143},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":1048,"byte_end":1055,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":174},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":1088,"byte_end":1095,"line_start":37,"line_end":37,"column_start":18,"column_end":25},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":619},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":1127,"byte_end":1133,"line_start":40,"line_end":40,"column_start":18,"column_end":24},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":287},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":1135,"byte_end":1146,"line_start":40,"line_end":40,"column_start":26,"column_end":37},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":664},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":1189,"byte_end":1199,"line_start":43,"line_end":43,"column_start":23,"column_end":33},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":412},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":1201,"byte_end":1216,"line_start":43,"line_end":43,"column_start":35,"column_end":50},"alias_span":null,"name":"FramedReadParts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":712},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":1261,"byte_end":1272,"line_start":46,"line_end":46,"column_start":24,"column_end":35},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":542},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":1274,"byte_end":1290,"line_start":46,"line_end":46,"column_start":37,"column_end":53},"alias_span":null,"name":"FramedWriteParts","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":0,"byte_end":1303,"line_start":1,"line_end":48,"column_start":1,"column_end":10},"name":"","qualname":"::","value":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":562}],"decl_id":null,"docs":" Utilities for encoding and decoding frames using `async/await`.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/ Utilities for encoding and decoding frames using `async/await`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":23,"byte_end":90,"line_start":2,"line_end":2,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":91,"byte_end":94,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Contains adapters to go from streams of bytes, [`AsyncRead`](futures::io::AsyncRead)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":95,"byte_end":183,"line_start":4,"line_end":4,"column_start":1,"column_end":89}},{"value":"/ and [`AsyncWrite`](futures::io::AsyncWrite), to framed streams implementing [`Sink`](futures::Sink) and [`Stream`](futures::Stream).","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":184,"byte_end":320,"line_start":5,"line_end":5,"column_start":1,"column_end":137}},{"value":"/ Framed streams are also known as `transports`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":321,"byte_end":371,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":372,"byte_end":375,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":376,"byte_end":383,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async move {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":384,"byte_end":430,"line_start":9,"line_end":9,"column_start":1,"column_end":47}},{"value":"/ use futures::TryStreamExt;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":431,"byte_end":461,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":462,"byte_end":490,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/ use asynchronous_codec::{LinesCodec, Framed};","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":491,"byte_end":540,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":541,"byte_end":544,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let io = Cursor::new(Vec::new());","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":545,"byte_end":582,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/ let mut framed = Framed::new(io, LinesCodec);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":583,"byte_end":632,"line_start":15,"line_end":15,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":633,"byte_end":636,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ while let Some(line) = framed.try_next().await? {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":637,"byte_end":690,"line_start":17,"line_end":17,"column_start":1,"column_end":54}},{"value":"/     dbg!(line);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":691,"byte_end":710,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":711,"byte_end":716,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ # Ok::<_, std::io::Error>(())","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":717,"byte_end":750,"line_start":20,"line_end":20,"column_start":1,"column_end":34}},{"value":"/ # }).unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":751,"byte_end":769,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/lib.rs","byte_start":770,"byte_end":777,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":22},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":2392,"byte_end":2402,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple codec that ships bytes around","sig":null,"attributes":[{"value":"/ A simple codec that ships bytes around","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":1745,"byte_end":1787,"line_start":5,"line_end":5,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":1788,"byte_end":1791,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":1792,"byte_end":1805,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":1806,"byte_end":1809,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/  ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":1810,"byte_end":1818,"line_start":9,"line_end":9,"column_start":1,"column_end":9}},{"value":"/ # futures::executor::block_on(async move {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":1819,"byte_end":1865,"line_start":10,"line_end":10,"column_start":1,"column_end":47}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":1866,"byte_end":1887,"line_start":11,"line_end":11,"column_start":1,"column_end":22}},{"value":"/ use futures::{SinkExt, TryStreamExt};","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":1888,"byte_end":1929,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":1930,"byte_end":1958,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/ use asynchronous_codec::{BytesCodec, Framed};","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":1959,"byte_end":2008,"line_start":14,"line_end":14,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":2009,"byte_end":2012,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":2013,"byte_end":2038,"line_start":16,"line_end":16,"column_start":1,"column_end":26}},{"value":"/ // Cursor implements AsyncRead and AsyncWrite","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":2039,"byte_end":2088,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/ let cur = Cursor::new(&mut buf);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":2089,"byte_end":2125,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/ let mut framed = Framed::new(cur, BytesCodec);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":2126,"byte_end":2176,"line_start":19,"line_end":19,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":2177,"byte_end":2180,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ framed.send(Bytes::from(\"Hello World!\")).await?;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":2181,"byte_end":2233,"line_start":21,"line_end":21,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":2234,"byte_end":2237,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ while let Some(bytes) = framed.try_next().await? {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":2238,"byte_end":2292,"line_start":23,"line_end":23,"column_start":1,"column_end":55}},{"value":"/     dbg!(bytes);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":2293,"byte_end":2313,"line_start":24,"line_end":24,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":2314,"byte_end":2319,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # Ok::<_, std::io::Error>(())","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":2320,"byte_end":2353,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ # }).unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":2354,"byte_end":2372,"line_start":27,"line_end":27,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":2373,"byte_end":2380,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":60},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":4360,"byte_end":4371,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"LengthCodec","qualname":"::codec::length::LengthCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple `Codec` implementation sending your data by prefixing it by its length.","sig":null,"attributes":[{"value":"/ A simple `Codec` implementation sending your data by prefixing it by its length.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3109,"byte_end":3193,"line_start":7,"line_end":7,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3194,"byte_end":3197,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3198,"byte_end":3211,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3212,"byte_end":3215,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This codec will most likely be used wrapped in another codec like so.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3216,"byte_end":3289,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3290,"byte_end":3293,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3294,"byte_end":3301,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use asynchronous_codec::{Decoder, Encoder, LengthCodec};","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3302,"byte_end":3362,"line_start":14,"line_end":14,"column_start":1,"column_end":61}},{"value":"/ use bytes::{Bytes, BytesMut};","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3363,"byte_end":3396,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"/ use std::io::{Error, ErrorKind};","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3397,"byte_end":3433,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3434,"byte_end":3437,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ pub struct MyStringCodec(LengthCodec);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3438,"byte_end":3480,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3481,"byte_end":3484,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ impl Encoder for MyStringCodec {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3485,"byte_end":3521,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/     type Item = String;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3522,"byte_end":3549,"line_start":21,"line_end":21,"column_start":1,"column_end":28}},{"value":"/     type Error = Error;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3550,"byte_end":3577,"line_start":22,"line_end":22,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3578,"byte_end":3581,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, src: Self::Item, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3582,"byte_end":3676,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"/         let bytes = Bytes::from(src);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3677,"byte_end":3718,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/         self.0.encode(bytes, dst)","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3719,"byte_end":3756,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3757,"byte_end":3766,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3767,"byte_end":3772,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3773,"byte_end":3776,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringCodec {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3777,"byte_end":3813,"line_start":30,"line_end":30,"column_start":1,"column_end":37}},{"value":"/     type Item = String;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3814,"byte_end":3841,"line_start":31,"line_end":31,"column_start":1,"column_end":28}},{"value":"/     type Error = Error;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3842,"byte_end":3869,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3870,"byte_end":3873,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3874,"byte_end":3967,"line_start":34,"line_end":34,"column_start":1,"column_end":94}},{"value":"/         match self.0.decode(src)? {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":3968,"byte_end":4007,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/             Some(bytes) => {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":4008,"byte_end":4040,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/                 match String::from_utf8(bytes.to_vec()) {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":4041,"byte_end":4102,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/                     Ok(string) => Ok(Some(string)),","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":4103,"byte_end":4158,"line_start":38,"line_end":38,"column_start":1,"column_end":56}},{"value":"/                     Err(e) => Err(Error::new(ErrorKind::InvalidData, e))","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":4159,"byte_end":4235,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/                 }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":4236,"byte_end":4257,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/             },","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":4258,"byte_end":4276,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/             None => Ok(None),","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":4277,"byte_end":4310,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/         }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":4311,"byte_end":4324,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":4325,"byte_end":4334,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":4335,"byte_end":4340,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":4341,"byte_end":4348,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":99},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/lines.rs","byte_start":6443,"byte_end":6453,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines::LinesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple `Codec` implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple `Codec` implementation that splits up data into lines.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/lines.rs","byte_start":5914,"byte_end":5981,"line_start":6,"line_end":6,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/lines.rs","byte_start":5982,"byte_end":5985,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/lines.rs","byte_start":5986,"byte_end":5997,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async move {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/lines.rs","byte_start":5998,"byte_end":6044,"line_start":9,"line_end":9,"column_start":1,"column_end":47}},{"value":"/ use futures::stream::TryStreamExt; // for lines.try_next()","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/lines.rs","byte_start":6045,"byte_end":6107,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/ use asynchronous_codec::{FramedRead, LinesCodec};","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/lines.rs","byte_start":6108,"byte_end":6161,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/lines.rs","byte_start":6162,"byte_end":6165,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ let input = \"hello\\nworld\\nthis\\nis\\ndog\\n\".as_bytes();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/lines.rs","byte_start":6166,"byte_end":6225,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ let mut lines = FramedRead::new(input, LinesCodec);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/lines.rs","byte_start":6226,"byte_end":6281,"line_start":14,"line_end":14,"column_start":1,"column_end":56}},{"value":"/ while let Some(line) = lines.try_next().await? {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/lines.rs","byte_start":6282,"byte_end":6334,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"/     println!(\"{}\", line);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/lines.rs","byte_start":6335,"byte_end":6364,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/lines.rs","byte_start":6365,"byte_end":6370,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/ # Ok::<_, std::io::Error>(())","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/lines.rs","byte_start":6371,"byte_end":6404,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/ # }).unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/lines.rs","byte_start":6405,"byte_end":6423,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/lines.rs","byte_start":6424,"byte_end":6431,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":143},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/decoder.rs","byte_start":7386,"byte_end":7393,"line_start":7,"line_end":7,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147}],"decl_id":null,"docs":" Decoding of frames via buffers, for use with `FramedRead`.\n","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers, for use with `FramedRead`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/decoder.rs","byte_start":7313,"byte_end":7375,"line_start":6,"line_end":6,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":144},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/decoder.rs","byte_start":7452,"byte_end":7456,"line_start":9,"line_end":9,"column_start":10,"column_end":14},"name":"Item","qualname":"::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":" The type of items returned by `decode`\n","sig":null,"attributes":[{"value":"/ The type of items returned by `decode`","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/decoder.rs","byte_start":7400,"byte_end":7442,"line_start":8,"line_end":8,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":145},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/decoder.rs","byte_start":7504,"byte_end":7509,"line_start":11,"line_end":11,"column_start":10,"column_end":15},"name":"Error","qualname":"::decoder::Decoder::Error","value":"type Error: From<Error>;","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":" The type of decoding errors.\n","sig":null,"attributes":[{"value":"/ The type of decoding errors.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/decoder.rs","byte_start":7462,"byte_end":7494,"line_start":10,"line_end":10,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/decoder.rs","byte_start":7592,"byte_end":7598,"line_start":14,"line_end":14,"column_start":8,"column_end":14},"name":"decode","qualname":"::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":" Decode an item from the src `BytesMut` into an item\n","sig":null,"attributes":[{"value":"/ Decode an item from the src `BytesMut` into an item","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/decoder.rs","byte_start":7529,"byte_end":7584,"line_start":13,"line_end":13,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/decoder.rs","byte_start":7887,"byte_end":7897,"line_start":21,"line_end":21,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":" Called when the input stream reaches EOF, signaling a last attempt to decode","sig":null,"attributes":[{"value":"/ Called when the input stream reaches EOF, signaling a last attempt to decode","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/decoder.rs","byte_start":7679,"byte_end":7759,"line_start":16,"line_end":16,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/decoder.rs","byte_start":7764,"byte_end":7767,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/decoder.rs","byte_start":7772,"byte_end":7783,"line_start":18,"line_end":18,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/decoder.rs","byte_start":7788,"byte_end":7791,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ The default implementation of this method invokes the `Decoder::decode` method.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/decoder.rs","byte_start":7796,"byte_end":7879,"line_start":20,"line_end":20,"column_start":5,"column_end":88}}]},{"kind":"Trait","id":{"krate":0,"index":174},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/encoder.rs","byte_start":8868,"byte_end":8875,"line_start":6,"line_end":6,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"decl_id":null,"docs":" Encoding of messages as bytes, for use with `FramedWrite`.\n","sig":null,"attributes":[{"value":"/ Encoding of messages as bytes, for use with `FramedWrite`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/encoder.rs","byte_start":8795,"byte_end":8857,"line_start":5,"line_end":5,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":175},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/encoder.rs","byte_start":8934,"byte_end":8938,"line_start":8,"line_end":8,"column_start":10,"column_end":14},"name":"Item","qualname":"::encoder::Encoder::Item","value":"type Item;","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" The type of items consumed by `encode`\n","sig":null,"attributes":[{"value":"/ The type of items consumed by `encode`","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/encoder.rs","byte_start":8882,"byte_end":8924,"line_start":7,"line_end":7,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":176},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/encoder.rs","byte_start":8986,"byte_end":8991,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"name":"Error","qualname":"::encoder::Encoder::Error","value":"type Error: From<Error>;","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" The type of encoding errors.\n","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/encoder.rs","byte_start":8944,"byte_end":8976,"line_start":9,"line_end":9,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/encoder.rs","byte_start":9075,"byte_end":9081,"line_start":13,"line_end":13,"column_start":8,"column_end":14},"name":"encode","qualname":"::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Self::Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" Encodes an item into the `BytesMut` provided by dst.\n","sig":null,"attributes":[{"value":"/ Encodes an item into the `BytesMut` provided by dst.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/encoder.rs","byte_start":9011,"byte_end":9067,"line_start":12,"line_end":12,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":619},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":10782,"byte_end":10788,"line_start":41,"line_end":41,"column_start":16,"column_end":22},"name":"Framed","qualname":"::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":622}],"decl_id":null,"docs":" A unified `Stream` and `Sink` interface to an underlying I/O object,\n using the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":11333,"byte_end":11336,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Framed` transport with the given codec.\n A codec is a type which implements `Decoder` and `Encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `Framed` transport with the given codec.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":11195,"byte_end":11253,"line_start":66,"line_end":66,"column_start":5,"column_end":63}},{"value":"/ A codec is a type which implements `Decoder` and `Encoder`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":11258,"byte_end":11321,"line_start":67,"line_end":67,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":11599,"byte_end":11609,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Framed` from [`FramedParts`].","sig":null,"attributes":[{"value":"/ Creates a new `Framed` from [`FramedParts`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":11490,"byte_end":11538,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":11543,"byte_end":11546,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ See also [`Framed::into_parts`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":11551,"byte_end":11587,"line_start":76,"line_end":76,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":12180,"byte_end":12190,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its parts, such that a new\n `Framed` may be constructed, possibly with a different codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its parts, such that a new","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":11986,"byte_end":12049,"line_start":91,"line_end":91,"column_start":5,"column_end":68}},{"value":"/ `Framed` may be constructed, possibly with a different codec.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":12054,"byte_end":12119,"line_start":92,"line_end":92,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":12124,"byte_end":12127,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ See also [`Framed::from_parts`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":12132,"byte_end":12168,"line_start":94,"line_end":94,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":12827,"byte_end":12837,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":12517,"byte_end":12580,"line_start":107,"line_end":107,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":12585,"byte_end":12588,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Note that data that has already been read or written but not yet","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":12593,"byte_end":12661,"line_start":109,"line_end":109,"column_start":5,"column_end":73}},{"value":"/ consumed by the decoder or flushed, respectively, is dropped.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":12666,"byte_end":12731,"line_start":110,"line_end":110,"column_start":5,"column_end":70}},{"value":"/ To retain any such potentially buffered data, use [`Framed::into_parts()`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":12736,"byte_end":12815,"line_start":111,"line_end":111,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":13142,"byte_end":13147,"line_start":121,"line_end":121,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":12891,"byte_end":12949,"line_start":116,"line_end":116,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":12954,"byte_end":12967,"line_start":117,"line_end":117,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":12972,"byte_end":12975,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":12980,"byte_end":13054,"line_start":119,"line_end":119,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":13059,"byte_end":13130,"line_start":120,"line_end":120,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":13455,"byte_end":13464,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":13196,"byte_end":13262,"line_start":125,"line_end":125,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":13267,"byte_end":13280,"line_start":126,"line_end":126,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":13285,"byte_end":13288,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":13293,"byte_end":13367,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":13372,"byte_end":13443,"line_start":129,"line_end":129,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":13580,"byte_end":13591,"line_start":135,"line_end":135,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":13525,"byte_end":13568,"line_start":134,"line_end":134,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":287},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":14679,"byte_end":14690,"line_start":174,"line_end":174,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::framed::FramedParts","value":"FramedParts { io, codec, read_buffer, write_buffer }","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"decl_id":null,"docs":" The parts obtained from [`Framed::into_parts`].\n","sig":null,"attributes":[{"value":"/ The parts obtained from [`Framed::into_parts`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":14616,"byte_end":14667,"line_start":173,"line_end":173,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":290},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":14742,"byte_end":14744,"line_start":176,"line_end":176,"column_start":9,"column_end":11},"name":"io","qualname":"::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" The underlying I/O stream.\n","sig":null,"attributes":[{"value":"/ The underlying I/O stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":14703,"byte_end":14733,"line_start":175,"line_end":175,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":291},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":14814,"byte_end":14819,"line_start":178,"line_end":178,"column_start":9,"column_end":14},"name":"codec","qualname":"::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" The codec used for encoding and decoding frames.\n","sig":null,"attributes":[{"value":"/ The codec used for encoding and decoding frames.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":14753,"byte_end":14805,"line_start":177,"line_end":177,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":292},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":14965,"byte_end":14976,"line_start":181,"line_end":181,"column_start":9,"column_end":20},"name":"read_buffer","qualname":"::framed::FramedParts::read_buffer","value":"bytes::BytesMut","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" The remaining read buffer, containing data that has been\n read from `io` but not yet consumed by the codec's decoder.\n","sig":null,"attributes":[{"value":"/ The remaining read buffer, containing data that has been","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":14828,"byte_end":14888,"line_start":179,"line_end":179,"column_start":5,"column_end":65}},{"value":"/ read from `io` but not yet consumed by the codec's decoder.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":14893,"byte_end":14956,"line_start":180,"line_end":180,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":293},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":15115,"byte_end":15127,"line_start":184,"line_end":184,"column_start":9,"column_end":21},"name":"write_buffer","qualname":"::framed::FramedParts::write_buffer","value":"bytes::BytesMut","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":" The remaining write buffer, containing framed data that has been\n buffered but not yet flushed to `io`.\n","sig":null,"attributes":[{"value":"/ The remaining write buffer, containing framed data that has been","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":14992,"byte_end":15060,"line_start":182,"line_end":182,"column_start":5,"column_end":73}},{"value":"/ buffered but not yet flushed to `io`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":15065,"byte_end":15106,"line_start":183,"line_end":183,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":15291,"byte_end":15300,"line_start":191,"line_end":191,"column_start":12,"column_end":21},"name":"map_codec","qualname":"<FramedParts<T, U>>::map_codec","value":"pub fn map_codec<V, F>(Self, F) -> FramedParts<T, V> where V: Encoder +\nDecoder, F: FnOnce(U) -> V","parent":null,"children":[],"decl_id":null,"docs":" Changes the codec used in this `FramedParts`.\n","sig":null,"attributes":[{"value":"/ Changes the codec used in this `FramedParts`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":15230,"byte_end":15279,"line_start":190,"line_end":190,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":664},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16516,"byte_end":16526,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"FramedRead","qualname":"::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":667}],"decl_id":null,"docs":" A `Stream` of messages decoded from an `AsyncRead`.","sig":null,"attributes":[{"value":"/ A `Stream` of messages decoded from an `AsyncRead`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":15978,"byte_end":16033,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16034,"byte_end":16037,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16038,"byte_end":16051,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16052,"byte_end":16059,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use asynchronous_codec::{BytesCodec, FramedRead};","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16060,"byte_end":16113,"line_start":20,"line_end":20,"column_start":1,"column_end":54}},{"value":"/ use futures::TryStreamExt;","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16114,"byte_end":16144,"line_start":21,"line_end":21,"column_start":1,"column_end":31}},{"value":"/ use bytes::{Bytes};","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16145,"byte_end":16168,"line_start":22,"line_end":22,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16169,"byte_end":16172,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let buf = [3u8; 3];","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16173,"byte_end":16196,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/ let mut framed = FramedRead::new(&buf[..], BytesCodec);","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16197,"byte_end":16256,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16257,"byte_end":16260,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # futures::executor::block_on(async move {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16261,"byte_end":16307,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ if let Some(bytes) = framed.try_next().await? {","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16308,"byte_end":16359,"line_start":28,"line_end":28,"column_start":1,"column_end":52}},{"value":"/     assert_eq!(bytes, Bytes::copy_from_slice(&buf[..]));","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16360,"byte_end":16420,"line_start":29,"line_end":29,"column_start":1,"column_end":61}},{"value":"/ }","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16421,"byte_end":16426,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok::<_, std::io::Error>(())","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16427,"byte_end":16460,"line_start":31,"line_end":31,"column_start":1,"column_end":34}},{"value":"/ # }).unwrap();","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16461,"byte_end":16479,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16480,"byte_end":16487,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16961,"byte_end":16964,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` transport with the given `Decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` transport with the given `Decoder`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16883,"byte_end":16949,"line_start":58,"line_end":58,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":17221,"byte_end":17231,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<FramedRead<T, D>>::from_parts","value":"pub fn from_parts(FramedReadParts<T, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` from [`FramedReadParts`].","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` from [`FramedReadParts`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":17100,"byte_end":17156,"line_start":65,"line_end":65,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":17161,"byte_end":17164,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ See also [`FramedRead::into_parts`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":17169,"byte_end":17209,"line_start":67,"line_end":67,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":17696,"byte_end":17706,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<FramedRead<T, D>>::into_parts","value":"pub fn into_parts(Self) -> FramedReadParts<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its parts such that a\n new `FramedRead` may be constructed, possibly with a different decoder.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its parts such that a","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":17489,"byte_end":17551,"line_start":81,"line_end":81,"column_start":5,"column_end":67}},{"value":"/ new `FramedRead` may be constructed, possibly with a different decoder.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":17556,"byte_end":17631,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":17636,"byte_end":17639,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ See also [`FramedRead::from_parts`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":17644,"byte_end":17684,"line_start":84,"line_end":84,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":18218,"byte_end":18228,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":17937,"byte_end":18004,"line_start":95,"line_end":95,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":18009,"byte_end":18012,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Note that data that has already been read but not yet consumed","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":18017,"byte_end":18083,"line_start":97,"line_end":97,"column_start":5,"column_end":71}},{"value":"/ by the decoder is dropped. To retain any such potentially","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":18088,"byte_end":18149,"line_start":98,"line_end":98,"column_start":5,"column_end":66}},{"value":"/ buffered data, use [`FramedRead::into_parts()`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":18154,"byte_end":18206,"line_start":99,"line_end":99,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":18509,"byte_end":18516,"line_start":108,"line_end":108,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":18282,"byte_end":18332,"line_start":104,"line_end":104,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":18337,"byte_end":18340,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying decoder","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":18345,"byte_end":18421,"line_start":106,"line_end":106,"column_start":5,"column_end":81}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":18426,"byte_end":18497,"line_start":107,"line_end":107,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":18800,"byte_end":18811,"line_start":116,"line_end":116,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":18565,"byte_end":18623,"line_start":112,"line_end":112,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":18628,"byte_end":18631,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying decoder","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":18636,"byte_end":18712,"line_start":114,"line_end":114,"column_start":5,"column_end":81}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":18717,"byte_end":18788,"line_start":115,"line_end":115,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":18927,"byte_end":18938,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":18872,"byte_end":18915,"line_start":120,"line_end":120,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":412},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":22409,"byte_end":22424,"line_start":247,"line_end":247,"column_start":12,"column_end":27},"name":"FramedReadParts","qualname":"::framed_read::FramedReadParts","value":"FramedReadParts { io, decoder, buffer }","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418}],"decl_id":null,"docs":" The parts obtained from (FramedRead::into_parts).\n","sig":null,"attributes":[{"value":"/ The parts obtained from (FramedRead::into_parts).","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":22344,"byte_end":22397,"line_start":246,"line_end":246,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":415},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":22476,"byte_end":22478,"line_start":249,"line_end":249,"column_start":9,"column_end":11},"name":"io","qualname":"::framed_read::FramedReadParts::io","value":"T","parent":{"krate":0,"index":412},"children":[],"decl_id":null,"docs":" The underlying I/O stream.\n","sig":null,"attributes":[{"value":"/ The underlying I/O stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":22437,"byte_end":22467,"line_start":248,"line_end":248,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":416},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":22518,"byte_end":22525,"line_start":251,"line_end":251,"column_start":9,"column_end":16},"name":"decoder","qualname":"::framed_read::FramedReadParts::decoder","value":"D","parent":{"krate":0,"index":412},"children":[],"decl_id":null,"docs":" The frame decoder.\n","sig":null,"attributes":[{"value":"/ The frame decoder.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":22487,"byte_end":22509,"line_start":250,"line_end":250,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":417},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":22637,"byte_end":22643,"line_start":254,"line_end":254,"column_start":9,"column_end":15},"name":"buffer","qualname":"::framed_read::FramedReadParts::buffer","value":"bytes::BytesMut","parent":{"krate":0,"index":412},"children":[],"decl_id":null,"docs":" The buffer of data that has been read from `io` but not\n yet consumed by `decoder`.\n","sig":null,"attributes":[{"value":"/ The buffer of data that has been read from `io` but not","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":22534,"byte_end":22593,"line_start":252,"line_end":252,"column_start":5,"column_end":64}},{"value":"/ yet consumed by `decoder`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":22598,"byte_end":22628,"line_start":253,"line_end":253,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":22807,"byte_end":22818,"line_start":261,"line_end":261,"column_start":12,"column_end":23},"name":"map_decoder","qualname":"<FramedReadParts<T, D>>::map_decoder","value":"pub fn map_decoder<E, F>(Self, F) -> FramedReadParts<T, E> where E: Decoder,\nF: FnOnce(D) -> E","parent":null,"children":[],"decl_id":null,"docs":" Changes the decoder in `FramedReadParts`.\n","sig":null,"attributes":[{"value":"/ Changes the decoder in `FramedReadParts`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":22750,"byte_end":22795,"line_start":260,"line_end":260,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":712},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":24076,"byte_end":24087,"line_start":35,"line_end":35,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":715}],"decl_id":null,"docs":" A `Sink` of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":24316,"byte_end":24319,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` transport with the given `Encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` transport with the given `Encoder`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":24237,"byte_end":24304,"line_start":46,"line_end":46,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":24580,"byte_end":24590,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<FramedWrite<T, E>>::from_parts","value":"pub fn from_parts(FramedWriteParts<T, E>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` from [`FramedWriteParts`].","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` from [`FramedWriteParts`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":24456,"byte_end":24514,"line_start":53,"line_end":53,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":24519,"byte_end":24522,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ See also [`FramedWrite::into_parts`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":24527,"byte_end":24568,"line_start":55,"line_end":55,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":25390,"byte_end":25410,"line_start":80,"line_end":80,"column_start":12,"column_end":32},"name":"send_high_water_mark","qualname":"<FramedWrite<T, E>>::send_high_water_mark","value":"pub fn send_high_water_mark(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" High-water mark for writes, in bytes","sig":null,"attributes":[{"value":"/ High-water mark for writes, in bytes","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":24851,"byte_end":24891,"line_start":69,"line_end":69,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":24896,"byte_end":24899,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ The send *high-water mark* prevents the `FramedWrite`","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":24904,"byte_end":24961,"line_start":71,"line_end":71,"column_start":5,"column_end":62}},{"value":"/ from accepting additional messages to send when its","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":24966,"byte_end":25021,"line_start":72,"line_end":72,"column_start":5,"column_end":60}},{"value":"/ buffer exceeds this length, in bytes. Attempts to enqueue","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":25026,"byte_end":25087,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/ additional messages will be deferred until progress is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":25092,"byte_end":25150,"line_start":74,"line_end":74,"column_start":5,"column_end":63}},{"value":"/ made on the underlying `AsyncWrite`. This applies","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":25155,"byte_end":25208,"line_start":75,"line_end":75,"column_start":5,"column_end":58}},{"value":"/ back-pressure on fast senders and prevents unbounded","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":25213,"byte_end":25269,"line_start":76,"line_end":76,"column_start":5,"column_end":61}},{"value":"/ buffer growth.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":25274,"byte_end":25292,"line_start":77,"line_end":77,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":25297,"byte_end":25300,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ See [`set_send_high_water_mark()`](#method.set_send_high_water_mark).","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":25305,"byte_end":25378,"line_start":79,"line_end":79,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":26243,"byte_end":26267,"line_start":99,"line_end":99,"column_start":12,"column_end":36},"name":"set_send_high_water_mark","qualname":"<FramedWrite<T, E>>::set_send_high_water_mark","value":"pub fn set_send_high_water_mark(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets high-water mark for writes, in bytes","sig":null,"attributes":[{"value":"/ Sets high-water mark for writes, in bytes","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":25475,"byte_end":25520,"line_start":84,"line_end":84,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":25525,"byte_end":25528,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ The send *high-water mark* prevents the `FramedWrite`","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":25533,"byte_end":25590,"line_start":86,"line_end":86,"column_start":5,"column_end":62}},{"value":"/ from accepting additional messages to send when its","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":25595,"byte_end":25650,"line_start":87,"line_end":87,"column_start":5,"column_end":60}},{"value":"/ buffer exceeds this length, in bytes. Attempts to enqueue","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":25655,"byte_end":25716,"line_start":88,"line_end":88,"column_start":5,"column_end":66}},{"value":"/ additional messages will be deferred until progress is","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":25721,"byte_end":25779,"line_start":89,"line_end":89,"column_start":5,"column_end":63}},{"value":"/ made on the underlying `AsyncWrite`. This applies","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":25784,"byte_end":25837,"line_start":90,"line_end":90,"column_start":5,"column_end":58}},{"value":"/ back-pressure on fast senders and prevents unbounded","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":25842,"byte_end":25898,"line_start":91,"line_end":91,"column_start":5,"column_end":61}},{"value":"/ buffer growth.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":25903,"byte_end":25921,"line_start":92,"line_end":92,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":25926,"byte_end":25929,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ The default high-water mark is 2^17 bytes. Applications","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":25934,"byte_end":25993,"line_start":94,"line_end":94,"column_start":5,"column_end":64}},{"value":"/ which desire low latency may wish to reduce this value.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":25998,"byte_end":26057,"line_start":95,"line_end":95,"column_start":5,"column_end":64}},{"value":"/ There is little point to increasing this value beyond","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":26062,"byte_end":26119,"line_start":96,"line_end":96,"column_start":5,"column_end":62}},{"value":"/ your socket's `SO_SNDBUF` size. On linux, this defaults","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":26124,"byte_end":26183,"line_start":97,"line_end":97,"column_start":5,"column_end":64}},{"value":"/ to 212992 bytes but is user-adjustable.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":26188,"byte_end":26231,"line_start":98,"line_end":98,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":26556,"byte_end":26566,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<FramedWrite<T, E>>::into_parts","value":"pub fn into_parts(Self) -> FramedWriteParts<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its parts such that\n a new `FramedWrite` may be constructed, possibly with a different encoder.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its parts such that","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":26346,"byte_end":26407,"line_start":103,"line_end":103,"column_start":5,"column_end":66}},{"value":"/ a new `FramedWrite` may be constructed, possibly with a different encoder.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":26412,"byte_end":26490,"line_start":104,"line_end":104,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":26495,"byte_end":26498,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ See also [`FramedWrite::from_parts`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":26503,"byte_end":26544,"line_start":106,"line_end":106,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":27069,"byte_end":27079,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":26799,"byte_end":26867,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":26872,"byte_end":26875,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Note that data that has already been written but not yet flushed","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":26880,"byte_end":26948,"line_start":119,"line_end":119,"column_start":5,"column_end":73}},{"value":"/ is dropped. To retain any such potentially buffered data, use","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":26953,"byte_end":27018,"line_start":120,"line_end":120,"column_start":5,"column_end":70}},{"value":"/ [`FramedWrite::into_parts()`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":27023,"byte_end":27057,"line_start":121,"line_end":121,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":27360,"byte_end":27367,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":27133,"byte_end":27183,"line_start":126,"line_end":126,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":27188,"byte_end":27191,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying encoder","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":27196,"byte_end":27272,"line_start":128,"line_end":128,"column_start":5,"column_end":81}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":27277,"byte_end":27348,"line_start":129,"line_end":129,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":27651,"byte_end":27662,"line_start":138,"line_end":138,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":27416,"byte_end":27474,"line_start":134,"line_end":134,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":27479,"byte_end":27482,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying encoder","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":27487,"byte_end":27563,"line_start":136,"line_end":136,"column_start":5,"column_end":81}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":27568,"byte_end":27639,"line_start":137,"line_end":137,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":542},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":31452,"byte_end":31468,"line_start":280,"line_end":280,"column_start":12,"column_end":28},"name":"FramedWriteParts","qualname":"::framed_write::FramedWriteParts","value":"FramedWriteParts { io, encoder, buffer }","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548}],"decl_id":null,"docs":" The parts obtained from [`FramedWrite::into_parts`].\n","sig":null,"attributes":[{"value":"/ The parts obtained from [`FramedWrite::into_parts`].","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":31384,"byte_end":31440,"line_start":279,"line_end":279,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":545},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":31520,"byte_end":31522,"line_start":282,"line_end":282,"column_start":9,"column_end":11},"name":"io","qualname":"::framed_write::FramedWriteParts::io","value":"T","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" The underlying I/O stream.\n","sig":null,"attributes":[{"value":"/ The underlying I/O stream.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":31481,"byte_end":31511,"line_start":281,"line_end":281,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":546},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":31562,"byte_end":31569,"line_start":284,"line_end":284,"column_start":9,"column_end":16},"name":"encoder","qualname":"::framed_write::FramedWriteParts::encoder","value":"E","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" The frame encoder.\n","sig":null,"attributes":[{"value":"/ The frame encoder.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":31531,"byte_end":31553,"line_start":283,"line_end":283,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":547},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":31658,"byte_end":31664,"line_start":286,"line_end":286,"column_start":9,"column_end":15},"name":"buffer","qualname":"::framed_write::FramedWriteParts::buffer","value":"bytes::BytesMut","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" The framed data that has been buffered but not yet flushed to `io`.\n","sig":null,"attributes":[{"value":"/ The framed data that has been buffered but not yet flushed to `io`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":31578,"byte_end":31649,"line_start":285,"line_end":285,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":31835,"byte_end":31846,"line_start":293,"line_end":293,"column_start":12,"column_end":23},"name":"map_encoder","qualname":"<FramedWriteParts<T, E>>::map_encoder","value":"pub fn map_encoder<G, F>(Self, F) -> FramedWriteParts<T, G> where G: Encoder,\nF: FnOnce(E) -> G","parent":null,"children":[],"decl_id":null,"docs":" Changes the encoder used in `FramedWriteParts`.\n","sig":null,"attributes":[{"value":"/ Changes the encoder used in `FramedWriteParts`.","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":31772,"byte_end":31823,"line_start":292,"line_end":292,"column_start":5,"column_end":56}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":2422,"byte_end":2432,"line_start":31,"line_end":31,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":2652,"byte_end":2662,"line_start":41,"line_end":41,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":4391,"byte_end":4402,"line_start":49,"line_end":49,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":4706,"byte_end":4717,"line_start":61,"line_end":61,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/lines.rs","byte_start":6473,"byte_end":6483,"line_start":23,"line_end":23,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/lines.rs","byte_start":6735,"byte_end":6745,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/decoder.rs","byte_start":8040,"byte_end":8044,"line_start":26,"line_end":26,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/decoder.rs","byte_start":8393,"byte_end":8405,"line_start":39,"line_end":39,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/encoder.rs","byte_start":9194,"byte_end":9198,"line_start":16,"line_end":16,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":10896,"byte_end":10902,"line_start":47,"line_end":47,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":11014,"byte_end":11020,"line_start":55,"line_end":55,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":11113,"byte_end":11119,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":13673,"byte_end":13679,"line_start":140,"line_end":140,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":13956,"byte_end":13962,"line_start":152,"line_end":152,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":15206,"byte_end":15217,"line_start":189,"line_end":189,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16595,"byte_end":16605,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16717,"byte_end":16727,"line_start":47,"line_end":47,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16820,"byte_end":16830,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":19019,"byte_end":19029,"line_start":126,"line_end":126,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":19431,"byte_end":19442,"line_start":147,"line_end":147,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":19548,"byte_end":19559,"line_start":155,"line_end":155,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":19907,"byte_end":19918,"line_start":170,"line_end":170,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":21524,"byte_end":21535,"line_start":216,"line_end":216,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":22169,"byte_end":22180,"line_start":236,"line_end":236,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":22722,"byte_end":22737,"line_start":259,"line_end":259,"column_start":12,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":24172,"byte_end":24183,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":27750,"byte_end":27761,"line_start":143,"line_end":143,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":28436,"byte_end":28447,"line_start":164,"line_end":164,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":28559,"byte_end":28570,"line_start":172,"line_end":172,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":28847,"byte_end":28859,"line_start":188,"line_end":188,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":28965,"byte_end":28977,"line_start":196,"line_end":196,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":29500,"byte_end":29512,"line_start":214,"line_end":214,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":29741,"byte_end":29753,"line_start":224,"line_end":224,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":31193,"byte_end":31205,"line_start":269,"line_end":269,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":31743,"byte_end":31759,"line_start":291,"line_end":291,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/fuse.rs","byte_start":32472,"byte_end":32476,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/fuse.rs","byte_start":32581,"byte_end":32585,"line_start":24,"line_end":24,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/fuse.rs","byte_start":32693,"byte_end":32697,"line_start":32,"line_end":32,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/fuse.rs","byte_start":32819,"byte_end":32823,"line_start":38,"line_end":38,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/fuse.rs","byte_start":33071,"byte_end":33075,"line_start":48,"line_end":48,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":2422,"byte_end":2432,"line_start":31,"line_end":31,"column_start":18,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":22},"to":{"krate":0,"index":174}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/bytes.rs","byte_start":2652,"byte_end":2662,"line_start":41,"line_end":41,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":22},"to":{"krate":0,"index":143}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":4391,"byte_end":4402,"line_start":49,"line_end":49,"column_start":18,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":60},"to":{"krate":0,"index":174}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/length.rs","byte_start":4706,"byte_end":4717,"line_start":61,"line_end":61,"column_start":18,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":60},"to":{"krate":0,"index":143}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/lines.rs","byte_start":6473,"byte_end":6483,"line_start":23,"line_end":23,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":99},"to":{"krate":0,"index":174}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/codec/lines.rs","byte_start":6735,"byte_end":6745,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":99},"to":{"krate":0,"index":143}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/decoder.rs","byte_start":8040,"byte_end":8044,"line_start":26,"line_end":26,"column_start":33,"column_end":37},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":801},"to":{"krate":0,"index":143}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/decoder.rs","byte_start":8393,"byte_end":8405,"line_start":39,"line_end":39,"column_start":30,"column_end":42},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":757},"to":{"krate":0,"index":143}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/encoder.rs","byte_start":9194,"byte_end":9198,"line_start":16,"line_end":16,"column_start":33,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":801},"to":{"krate":0,"index":174}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":10896,"byte_end":10902,"line_start":47,"line_end":47,"column_start":22,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":619},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":11014,"byte_end":11020,"line_start":55,"line_end":55,"column_start":25,"column_end":31},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":619},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":11113,"byte_end":11119,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":13673,"byte_end":13679,"line_start":140,"line_end":140,"column_start":23,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":619},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":13956,"byte_end":13962,"line_start":152,"line_end":152,"column_start":30,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":619},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed.rs","byte_start":15206,"byte_end":15217,"line_start":189,"line_end":189,"column_start":12,"column_end":23},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16595,"byte_end":16605,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":664},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16717,"byte_end":16727,"line_start":47,"line_end":47,"column_start":25,"column_end":35},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":664},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":16820,"byte_end":16830,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":19019,"byte_end":19029,"line_start":126,"line_end":126,"column_start":23,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":664},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":19431,"byte_end":19442,"line_start":147,"line_end":147,"column_start":19,"column_end":30},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":672},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":19548,"byte_end":19559,"line_start":155,"line_end":155,"column_start":22,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":672},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":19907,"byte_end":19918,"line_start":170,"line_end":170,"column_start":20,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":672},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":21524,"byte_end":21535,"line_start":216,"line_end":216,"column_start":24,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":672},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":22169,"byte_end":22180,"line_start":236,"line_end":236,"column_start":9,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_read.rs","byte_start":22722,"byte_end":22737,"line_start":259,"line_end":259,"column_start":12,"column_end":27},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":24172,"byte_end":24183,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":27750,"byte_end":27761,"line_start":143,"line_end":143,"column_start":30,"column_end":41},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":712},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":28436,"byte_end":28447,"line_start":164,"line_end":164,"column_start":22,"column_end":33},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":712},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":28559,"byte_end":28570,"line_start":172,"line_end":172,"column_start":25,"column_end":36},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":712},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":28847,"byte_end":28859,"line_start":188,"line_end":188,"column_start":19,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":757},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":28965,"byte_end":28977,"line_start":196,"line_end":196,"column_start":22,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":757},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":29500,"byte_end":29512,"line_start":214,"line_end":214,"column_start":42,"column_end":54},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":757},"to":{"krate":31,"index":39}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":29741,"byte_end":29753,"line_start":224,"line_end":224,"column_start":27,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":757},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":31193,"byte_end":31205,"line_start":269,"line_end":269,"column_start":9,"column_end":21},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/framed_write.rs","byte_start":31743,"byte_end":31759,"line_start":291,"line_end":291,"column_start":12,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":542},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/fuse.rs","byte_start":32472,"byte_end":32476,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/fuse.rs","byte_start":32581,"byte_end":32585,"line_start":24,"line_end":24,"column_start":22,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":801},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/fuse.rs","byte_start":32693,"byte_end":32697,"line_start":32,"line_end":32,"column_start":25,"column_end":29},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":801},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/fuse.rs","byte_start":32819,"byte_end":32823,"line_start":38,"line_end":38,"column_start":45,"column_end":49},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":801},"to":{"krate":31,"index":39}},{"span":{"file_name":"/Users/Polly/.cargo/registry/src/github.com-1ecc6299db9ec823/asynchronous-codec-0.6.0/src/fuse.rs","byte_start":33071,"byte_end":33075,"line_start":48,"line_end":48,"column_start":47,"column_end":51},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":801},"to":{"krate":31,"index":42}}]}